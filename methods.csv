"FilePath","Package","Class","Method Name","Return Type","Parameters","Function Body","Throws","Modifiers","Generics"
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\.mvn\wrapper\MavenWrapperDownloader.java","","MavenWrapperDownloader","main","void","String args","{\n        System.out.println(""- Downloader started"");\n        File baseDirectory = new File(args[0]);\n        System.out.println(""- Using base directory: "" + baseDirectory.getAbsolutePath());\n\n        // If the maven-wrapper.properties exists, read it and check if it contains a custom\n        // wrapperUrl parameter.\n        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n        String url = DEFAULT_DOWNLOAD_URL;\n        if(mavenWrapperPropertyFile.exists()) {\n            FileInputStream mavenWrapperPropertyFileInputStream = null;\n            try {\n                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n                Properties mavenWrapperProperties = new Properties();\n                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n            } catch (IOException e) {\n                System.out.println(""- ERROR loading '"" + MAVEN_WRAPPER_PROPERTIES_PATH + ""'"");\n            } finally {\n                try {\n                    if(mavenWrapperPropertyFileInputStream != null) {\n                        mavenWrapperPropertyFileInputStream.close();\n                    }\n                } catch (IOException e) {\n                    // Ignore ...\n                }\n            }\n        }\n        System.out.println(""- Downloading from: "" + url);\n\n        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n        if(!outputFile.getParentFile().exists()) {\n            if(!outputFile.getParentFile().mkdirs()) {\n                System.out.println(\n                        ""- ERROR creating output directory '"" + outputFile.getParentFile().getAbsolutePath() + ""'"");\n            }\n        }\n        System.out.println(""- Downloading to: "" + outputFile.getAbsolutePath());\n        try {\n            downloadFileFromURL(url, outputFile);\n            System.out.println(""Done"");\n            System.exit(0);\n        } catch (Throwable e) {\n            System.out.println(""- Error downloading"");\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }","","public static",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\.mvn\wrapper\MavenWrapperDownloader.java","","MavenWrapperDownloader","downloadFileFromURL","void","String urlString, File destination","{\n        if (System.getenv(""MVNW_USERNAME"") != null && System.getenv(""MVNW_PASSWORD"") != null) {\n            String username = System.getenv(""MVNW_USERNAME"");\n            char[] password = System.getenv(""MVNW_PASSWORD"").toCharArray();\n            Authenticator.setDefault(new Authenticator() {\n                @Override\n                protected PasswordAuthentication getPasswordAuthentication() {\n                    return new PasswordAuthentication(username, password);\n                }\n            });\n        }\n        URL website = new URL(urlString);\n        ReadableByteChannel rbc;\n        rbc = Channels.newChannel(website.openStream());\n        FileOutputStream fos = new FileOutputStream(destination);\n        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n        fos.close();\n        rbc.close();\n    }","throws Exception","private static",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\.mvn\wrapper\MavenWrapperDownloader.java","","MavenWrapperDownloader","getPasswordAuthentication","PasswordAuthentication","","{\n                    return new PasswordAuthentication(username, password);\n                }","","@Override protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\PetClinicApplication.java","","PetClinicApplication","main","void","String[] args","{\n		SpringApplication.run(PetClinicApplication.class, args);\n	}","","public static",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\config\SwaggerConfig.java","","SwaggerConfig","customOpenAPI","OpenAPI","","{\n        return new OpenAPI()\n            .components(new Components())\n            .info(new Info()\n                .title(""REST Petclinic backend API documentation"")\n                .version(""1.0"")\n                .termsOfService(""https://github.com/spring-petclinic/spring-petclinic-rest/blob/master/terms.txt"")\n                .description(\n                    ""This is the REST API documentation of the Spring Petclinic backend. "" +\n                        ""If authentication is enabled, use admin/admin when calling the APIs"")\n                .license(swaggerLicense())\n                .contact(swaggerContact()));\n    }","","@Bean",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\config\SwaggerConfig.java","","SwaggerConfig","swaggerContact","Contact","","{\n        Contact petclinicContact = new Contact();\n        petclinicContact.setName(""Vitaliy Fedoriv"");\n        petclinicContact.setEmail(""vitaliy.fedoriv@gmail.com"");\n        petclinicContact.setUrl(""https://github.com/spring-petclinic/spring-petclinic-rest"");\n        return petclinicContact;\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\config\SwaggerConfig.java","","SwaggerConfig","swaggerLicense","License","","{\n        License petClinicLicense = new License();\n        petClinicLicense.setName(""Apache 2.0"");\n        petClinicLicense.setUrl(""http://www.apache.org/licenses/LICENSE-2.0"");\n        petClinicLicense.setExtensions(Collections.emptyMap());\n        return petClinicLicense;\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\OwnerMapper.java","","OwnerMapper","toOwnerDto","OwnerDto","Owner owner","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\OwnerMapper.java","","OwnerMapper","toOwner","Owner","OwnerDto ownerDto","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\OwnerMapper.java","","OwnerMapper","toOwner","Owner","OwnerFieldsDto ownerDto","","","@Mapping(target = ""id"", ignore = true) @Mapping(target = ""pets"", ignore = true)",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\OwnerMapper.java","","OwnerMapper","toOwnerDtoCollection","List<OwnerDto>","Collection<Owner> ownerCollection","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\OwnerMapper.java","","OwnerMapper","toOwners","Collection<Owner>","Collection<OwnerDto> ownerDtos","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPetDto","PetDto","Pet pet","","","@Mapping(source = ""owner.id"", target = ""ownerId"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPetsDto","Collection<PetDto>","Collection<Pet> pets","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPets","Collection<Pet>","Collection<PetDto> pets","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPet","Pet","PetDto petDto","","","@Mapping(source = ""ownerId"", target = ""owner.id"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPet","Pet","PetFieldsDto petFieldsDto","","","@Mapping(target = ""id"", ignore = true) @Mapping(target = ""owner"", ignore = true) @Mapping(target = ""visits"", ignore = true)",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPetTypeDto","PetTypeDto","PetType petType","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPetType","PetType","PetTypeDto petTypeDto","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetMapper.java","","PetMapper","toPetTypeDtos","Collection<PetTypeDto>","Collection<PetType> petTypes","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetTypeMapper.java","","PetTypeMapper","toPetType","PetType","PetTypeDto petTypeDto","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetTypeMapper.java","","PetTypeMapper","toPetType","PetType","PetTypeFieldsDto petTypeFieldsDto","","","@Mapping(target = ""id"", ignore = true)",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetTypeMapper.java","","PetTypeMapper","toPetTypeDto","PetTypeDto","PetType petType","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetTypeMapper.java","","PetTypeMapper","toPetTypeFieldsDto","PetTypeFieldsDto","PetType petType","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\PetTypeMapper.java","","PetTypeMapper","toPetTypeDtos","List<PetTypeDto>","Collection<PetType> petTypes","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\SpecialtyMapper.java","","SpecialtyMapper","toSpecialty","Specialty","SpecialtyDto specialtyDto","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\SpecialtyMapper.java","","SpecialtyMapper","toSpecialtyDto","SpecialtyDto","Specialty specialty","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\SpecialtyMapper.java","","SpecialtyMapper","toSpecialtyDtos","Collection<SpecialtyDto>","Collection<Specialty> specialties","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\SpecialtyMapper.java","","SpecialtyMapper","toSpecialtys","Collection<Specialty>","Collection<SpecialtyDto> specialties","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\UserMapper.java","","UserMapper","toRole","Role","RoleDto roleDto","","","@Mapping(target = ""id"", ignore = true) @Mapping(target = ""user"", ignore = true)",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\UserMapper.java","","UserMapper","toRoleDto","RoleDto","Role role","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\UserMapper.java","","UserMapper","toRoleDtos","Collection<RoleDto>","Collection<Role> roles","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\UserMapper.java","","UserMapper","toUser","User","UserDto userDto","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\UserMapper.java","","UserMapper","toUserDto","UserDto","User user","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\UserMapper.java","","UserMapper","toRoles","Collection<Role>","Collection<RoleDto> roleDtos","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VetMapper.java","","VetMapper","toVet","Vet","VetDto vetDto","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VetMapper.java","","VetMapper","toVet","Vet","VetFieldsDto vetFieldsDto","","","@Mapping(target = ""id"", ignore = true)",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VetMapper.java","","VetMapper","toVetDto","VetDto","Vet vet","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VetMapper.java","","VetMapper","toVetDtos","Collection<VetDto>","Collection<Vet> vets","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VisitMapper.java","","VisitMapper","toVisit","Visit","VisitDto visitDto","","","@Mapping(source = ""petId"", target = ""pet.id"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VisitMapper.java","","VisitMapper","toVisit","Visit","VisitFieldsDto visitFieldsDto","","","@Mapping(target = ""id"", ignore = true) @Mapping(target = ""pet"", ignore = true)",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VisitMapper.java","","VisitMapper","toVisitDto","VisitDto","Visit visit","","","@Mapping(source = ""pet.id"", target = ""petId"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\mapper\VisitMapper.java","","VisitMapper","toVisitsDto","Collection<VisitDto>","Collection<Visit> visits","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\BaseEntity.java","","BaseEntity","getId","Integer","","{\n        return id;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\BaseEntity.java","","BaseEntity","setId","void","Integer id","{\n        this.id = id;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\BaseEntity.java","","BaseEntity","isNew","boolean","","{\n        return this.id == null;\n    }","","@JsonIgnore public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\NamedEntity.java","","NamedEntity","getName","String","","{\n        return this.name;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\NamedEntity.java","","NamedEntity","setName","void","String name","{\n        this.name = name;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\NamedEntity.java","","NamedEntity","toString","String","","{\n        return this.getName();\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getAddress","String","","{\n        return this.address;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","setAddress","void","String address","{\n        this.address = address;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getCity","String","","{\n        return this.city;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","setCity","void","String city","{\n        this.city = city;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getTelephone","String","","{\n        return this.telephone;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","setTelephone","void","String telephone","{\n        this.telephone = telephone;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getPetsInternal","Set<Pet>","","{\n        if (this.pets == null) {\n            this.pets = new HashSet<>();\n        }\n        return this.pets;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","setPetsInternal","void","Set<Pet> pets","{\n        this.pets = pets;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getPets","List<Pet>","","{\n        List<Pet> sortedPets = new ArrayList<>(getPetsInternal());\n        PropertyComparator.sort(sortedPets, new MutableSortDefinition(""name"", true, true));\n        return Collections.unmodifiableList(sortedPets);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","setPets","void","List<Pet> pets","{\n        this.pets = new HashSet<>(pets);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","addPet","void","Pet pet","{\n        getPetsInternal().add(pet);\n        pet.setOwner(this);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getPet","Pet","String name","{\n        return getPet(name, false);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getPet","Pet","String name, boolean ignoreNew","{\n        name = name.toLowerCase();\n        for (Pet pet : getPetsInternal()) {\n            if (!ignoreNew || !pet.isNew()) {\n                String compName = pet.getName();\n                compName = compName.toLowerCase();\n                if (compName.equals(name)) {\n                    return pet;\n                }\n            }\n        }\n        return null;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","getPet","Pet","Integer petId","{\n        return getPetsInternal().stream().filter(p -> p.getId().equals(petId)).findFirst().orElse(null);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Owner.java","","Owner","toString","String","","{\n        return new ToStringCreator(this)\n\n            .append(""id"", this.getId())\n            .append(""new"", this.isNew())\n            .append(""lastName"", this.getLastName())\n            .append(""firstName"", this.getFirstName())\n            .append(""address"", this.address)\n            .append(""city"", this.city)\n            .append(""telephone"", this.telephone)\n            .toString();\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Person.java","","Person","getFirstName","String","","{\n        return this.firstName;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Person.java","","Person","setFirstName","void","String firstName","{\n        this.firstName = firstName;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Person.java","","Person","getLastName","String","","{\n        return this.lastName;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Person.java","","Person","setLastName","void","String lastName","{\n        this.lastName = lastName;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","getBirthDate","LocalDate","","{\n        return this.birthDate;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","setBirthDate","void","LocalDate birthDate","{\n        this.birthDate = birthDate;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","getType","PetType","","{\n        return this.type;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","setType","void","PetType type","{\n        this.type = type;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","getOwner","Owner","","{\n        return this.owner;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","setOwner","void","Owner owner","{\n        this.owner = owner;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","getVisitsInternal","Set<Visit>","","{\n        if (this.visits == null) {\n            this.visits = new HashSet<>();\n        }\n        return this.visits;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","setVisitsInternal","void","Set<Visit> visits","{\n        this.visits = visits;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","getVisits","List<Visit>","","{\n        List<Visit> sortedVisits = new ArrayList<>(getVisitsInternal());\n        PropertyComparator.sort(sortedVisits, new MutableSortDefinition(""date"", false, false));\n        return Collections.unmodifiableList(sortedVisits);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","setVisits","void","List<Visit> visits","{\n        this.visits = new HashSet<>(visits);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Pet.java","","Pet","addVisit","void","Visit visit","{\n        getVisitsInternal().add(visit);\n        visit.setPet(this);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Role.java","","Role","getUser","User","","{\n        return user;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Role.java","","Role","setUser","void","User user","{\n        this.user = user;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Role.java","","Role","getName","String","","{\n        return name;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Role.java","","Role","setName","void","String name","{\n        this.name = name;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","getUsername","String","","{\n        return username;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","setUsername","void","String username","{\n        this.username = username;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","getPassword","String","","{\n        return password;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","setPassword","void","String password","{\n        this.password = password;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","getEnabled","Boolean","","{\n        return enabled;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","setEnabled","void","Boolean enabled","{\n        this.enabled = enabled;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","getRoles","Set<Role>","","{\n        return roles;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","setRoles","void","Set<Role> roles","{\n        this.roles = roles;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\User.java","","User","addRole","void","String roleName","{\n        if(this.roles == null) {\n            this.roles = new HashSet<>();\n        }\n        Role role = new Role();\n        role.setName(roleName);\n        this.roles.add(role);\n    }","","@JsonIgnore public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Vet.java","","Vet","getSpecialtiesInternal","Set<Specialty>","","{\n        if (this.specialties == null) {\n            this.specialties = new HashSet<>();\n        }\n        return this.specialties;\n    }","","@JsonIgnore protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Vet.java","","Vet","setSpecialtiesInternal","void","Set<Specialty> specialties","{\n        this.specialties = specialties;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Vet.java","","Vet","getSpecialties","List<Specialty>","","{\n        List<Specialty> sortedSpecs = new ArrayList<>(getSpecialtiesInternal());\n        PropertyComparator.sort(sortedSpecs, new MutableSortDefinition(""name"", true, true));\n        return Collections.unmodifiableList(sortedSpecs);\n    }","","@XmlElement public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Vet.java","","Vet","setSpecialties","void","List<Specialty> specialties","{\n        this.specialties = new HashSet<>(specialties);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Vet.java","","Vet","getNrOfSpecialties","int","","{\n        return getSpecialtiesInternal().size();\n    }","","@JsonIgnore public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Vet.java","","Vet","addSpecialty","void","Specialty specialty","{\n        getSpecialtiesInternal().add(specialty);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Vet.java","","Vet","clearSpecialties","void","","{\n        getSpecialtiesInternal().clear();\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Visit.java","","Visit","getDate","LocalDate","","{\n        return this.date;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Visit.java","","Visit","setDate","void","LocalDate date","{\n        this.date = date;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Visit.java","","Visit","getDescription","String","","{\n        return this.description;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Visit.java","","Visit","setDescription","void","String description","{\n        this.description = description;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Visit.java","","Visit","getPet","Pet","","{\n        return this.pet;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\model\Visit.java","","Visit","setPet","void","Pet pet","{\n        this.pet = pet;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\OwnerRepository.java","","OwnerRepository","findByLastName","Collection<Owner>","String lastName","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\OwnerRepository.java","","OwnerRepository","findById","Owner","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\OwnerRepository.java","","OwnerRepository","save","void","Owner owner","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\OwnerRepository.java","","OwnerRepository","findAll","Collection<Owner>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\OwnerRepository.java","","OwnerRepository","delete","void","Owner owner","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetRepository.java","","PetRepository","findPetTypes","List<PetType>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetRepository.java","","PetRepository","findById","Pet","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetRepository.java","","PetRepository","save","void","Pet pet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetRepository.java","","PetRepository","findAll","Collection<Pet>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetRepository.java","","PetRepository","delete","void","Pet pet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetTypeRepository.java","","PetTypeRepository","findById","PetType","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetTypeRepository.java","","PetTypeRepository","findByName","PetType","String name","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetTypeRepository.java","","PetTypeRepository","findAll","Collection<PetType>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetTypeRepository.java","","PetTypeRepository","save","void","PetType petType","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\PetTypeRepository.java","","PetTypeRepository","delete","void","PetType petType","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\SpecialtyRepository.java","","SpecialtyRepository","findById","Specialty","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\SpecialtyRepository.java","","SpecialtyRepository","findSpecialtiesByNameIn","List<Specialty>","Set<String> names","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\SpecialtyRepository.java","","SpecialtyRepository","findAll","Collection<Specialty>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\SpecialtyRepository.java","","SpecialtyRepository","save","void","Specialty specialty","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\SpecialtyRepository.java","","SpecialtyRepository","delete","void","Specialty specialty","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\UserRepository.java","","UserRepository","save","void","User user","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VetRepository.java","","VetRepository","findAll","Collection<Vet>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VetRepository.java","","VetRepository","findById","Vet","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VetRepository.java","","VetRepository","save","void","Vet vet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VetRepository.java","","VetRepository","delete","void","Vet vet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VisitRepository.java","","VisitRepository","save","void","Visit visit","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VisitRepository.java","","VisitRepository","findByPetId","List<Visit>","Integer petId","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VisitRepository.java","","VisitRepository","findById","Visit","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VisitRepository.java","","VisitRepository","findAll","Collection<Visit>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\VisitRepository.java","","VisitRepository","delete","void","Visit visit","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","findByLastName","Collection<Owner>","String lastName","{\n        Map<String, Object> params = new HashMap<>();\n        params.put(""lastName"", lastName + ""%"");\n        List<Owner> owners = this.namedParameterJdbcTemplate.query(\n            ""SELECT id, first_name, last_name, address, city, telephone FROM owners WHERE last_name like :lastName"",\n            params,\n            BeanPropertyRowMapper.newInstance(Owner.class)\n        );\n        loadOwnersPetsAndVisits(owners);\n        return owners;\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","findById","Owner","int id","{\n        Owner owner;\n        try {\n            Map<String, Object> params = new HashMap<>();\n            params.put(""id"", id);\n            owner = this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT id, first_name, last_name, address, city, telephone FROM owners WHERE id= :id"",\n                params,\n                BeanPropertyRowMapper.newInstance(Owner.class)\n            );\n        } catch (EmptyResultDataAccessException ex) {\n            throw new ObjectRetrievalFailureException(Owner.class, id);\n        }\n        loadPetsAndVisits(owner);\n        return owner;\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","loadPetsAndVisits","void","Owner owner","{\n        Map<String, Object> params = new HashMap<>();\n        params.put(""id"", owner.getId());\n        final List<JdbcPet> pets = this.namedParameterJdbcTemplate.query(\n            ""SELECT pets.id as pets_id, name, birth_date, type_id, owner_id, visits.id as visit_id, visit_date, description, visits.pet_id as visits_pet_id FROM pets LEFT OUTER JOIN visits ON pets.id = visits.pet_id WHERE owner_id=:id ORDER BY pets.id"",\n            params,\n            new JdbcPetVisitExtractor()\n        );\n        Collection<PetType> petTypes = getPetTypes();\n        for (JdbcPet pet : pets) {\n            pet.setType(EntityUtils.getById(petTypes, PetType.class, pet.getTypeId()));\n            owner.addPet(pet);\n        }\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","save","void","Owner owner","{\n        BeanPropertySqlParameterSource parameterSource = new BeanPropertySqlParameterSource(owner);\n        if (owner.isNew()) {\n            Number newKey = this.insertOwner.executeAndReturnKey(parameterSource);\n            owner.setId(newKey.intValue());\n        } else {\n            this.namedParameterJdbcTemplate.update(\n                ""UPDATE owners SET first_name=:firstName, last_name=:lastName, address=:address, "" +\n                    ""city=:city, telephone=:telephone WHERE id=:id"",\n                parameterSource);\n        }\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","getPetTypes","Collection<PetType>","","{\n        return this.namedParameterJdbcTemplate.query(\n            ""SELECT id, name FROM types ORDER BY name"", new HashMap<String, Object>(),\n            BeanPropertyRowMapper.newInstance(PetType.class));\n    }","throws DataAccessException","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","loadOwnersPetsAndVisits","void","List<Owner> owners","{\n        for (Owner owner : owners) {\n            loadPetsAndVisits(owner);\n        }\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","findAll","Collection<Owner>","","{\n		List<Owner> owners = this.namedParameterJdbcTemplate.query(\n	            ""SELECT id, first_name, last_name, address, city, telephone FROM owners"",\n	            new HashMap<String, Object>(),\n	            BeanPropertyRowMapper.newInstance(Owner.class));\n		for (Owner owner : owners) {\n            loadPetsAndVisits(owner);\n        }\n	    return owners;\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcOwnerRepositoryImpl.java","","JdbcOwnerRepositoryImpl","delete","void","Owner owner","{\n		Map<String, Object> owner_params = new HashMap<>();\n		owner_params.put(""id"", owner.getId());\n        List<Pet> pets = owner.getPets();\n        // cascade delete pets\n        for (Pet pet : pets){\n        	Map<String, Object> pet_params = new HashMap<>();\n        	pet_params.put(""id"", pet.getId());\n        	// cascade delete visits\n        	List<Visit> visits = pet.getVisits();\n            for (Visit visit : visits){\n            	Map<String, Object> visit_params = new HashMap<>();\n            	visit_params.put(""id"", visit.getId());\n            	this.namedParameterJdbcTemplate.update(""DELETE FROM visits WHERE id=:id"", visit_params);\n            }\n            this.namedParameterJdbcTemplate.update(""DELETE FROM pets WHERE id=:id"", pet_params);\n        }\n        this.namedParameterJdbcTemplate.update(""DELETE FROM owners WHERE id=:id"", owner_params);\n	}","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPet.java","","JdbcPet","getTypeId","int","","{\n        return this.typeId;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPet.java","","JdbcPet","setTypeId","void","int typeId","{\n        this.typeId = typeId;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPet.java","","JdbcPet","getOwnerId","int","","{\n        return this.ownerId;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPet.java","","JdbcPet","setOwnerId","void","int ownerId","{\n        this.ownerId = ownerId;\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetRepositoryImpl.java","","JdbcPetRepositoryImpl","findPetTypes","List<PetType>","","{\n        Map<String, Object> params = new HashMap<>();\n        return this.namedParameterJdbcTemplate.query(\n            ""SELECT id, name FROM types ORDER BY name"",\n            params,\n            BeanPropertyRowMapper.newInstance(PetType.class));\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetRepositoryImpl.java","","JdbcPetRepositoryImpl","findById","Pet","int id","{\n        Integer ownerId;\n        try {\n            Map<String, Object> params = new HashMap<>();\n            params.put(""id"", id);\n            ownerId = this.namedParameterJdbcTemplate.queryForObject(""SELECT owner_id FROM pets WHERE id=:id"", params, Integer.class);\n        } catch (EmptyResultDataAccessException ex) {\n            throw new ObjectRetrievalFailureException(Pet.class, id);\n        }\n        Owner owner = this.ownerRepository.findById(ownerId);\n        return EntityUtils.getById(owner.getPets(), Pet.class, id);\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetRepositoryImpl.java","","JdbcPetRepositoryImpl","save","void","Pet pet","{\n        if (pet.isNew()) {\n            Number newKey = this.insertPet.executeAndReturnKey(\n                createPetParameterSource(pet));\n            pet.setId(newKey.intValue());\n        } else {\n            this.namedParameterJdbcTemplate.update(\n                ""UPDATE pets SET name=:name, birth_date=:birth_date, type_id=:type_id, "" +\n                    ""owner_id=:owner_id WHERE id=:id"",\n                createPetParameterSource(pet));\n        }\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetRepositoryImpl.java","","JdbcPetRepositoryImpl","createPetParameterSource","MapSqlParameterSource","Pet pet","{\n        return new MapSqlParameterSource()\n            .addValue(""id"", pet.getId())\n            .addValue(""name"", pet.getName())\n            .addValue(""birth_date"", pet.getBirthDate())\n            .addValue(""type_id"", pet.getType().getId())\n            .addValue(""owner_id"", pet.getOwner().getId());\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetRepositoryImpl.java","","JdbcPetRepositoryImpl","findAll","Collection<Pet>","","{\n		Map<String, Object> params = new HashMap<>();\n		Collection<Pet> pets = new ArrayList<Pet>();\n		Collection<JdbcPet> jdbcPets = new ArrayList<JdbcPet>();\n		jdbcPets = this.namedParameterJdbcTemplate\n				.query(""SELECT pets.id as pets_id, name, birth_date, type_id, owner_id FROM pets"",\n				params,\n				new JdbcPetRowMapper());\n		Collection<PetType> petTypes = this.namedParameterJdbcTemplate.query(""SELECT id, name FROM types ORDER BY name"",\n				new HashMap<String,\n				Object>(), BeanPropertyRowMapper.newInstance(PetType.class));\n		Collection<Owner> owners = this.namedParameterJdbcTemplate.query(\n				""SELECT id, first_name, last_name, address, city, telephone FROM owners ORDER BY last_name"",\n				new HashMap<String, Object>(),\n				BeanPropertyRowMapper.newInstance(Owner.class));\n		for (JdbcPet jdbcPet : jdbcPets) {\n			jdbcPet.setType(EntityUtils.getById(petTypes, PetType.class, jdbcPet.getTypeId()));\n			jdbcPet.setOwner(EntityUtils.getById(owners, Owner.class, jdbcPet.getOwnerId()));\n			// TODO add visits\n			pets.add(jdbcPet);\n		}\n		return pets;\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetRepositoryImpl.java","","JdbcPetRepositoryImpl","delete","void","Pet pet","{\n		Map<String, Object> pet_params = new HashMap<>();\n		pet_params.put(""id"", pet.getId());\n		List<Visit> visits = pet.getVisits();\n		// cascade delete visits\n		for (Visit visit : visits) {\n			Map<String, Object> visit_params = new HashMap<>();\n			visit_params.put(""id"", visit.getId());\n			this.namedParameterJdbcTemplate.update(""DELETE FROM visits WHERE id=:id"", visit_params);\n		}\n		this.namedParameterJdbcTemplate.update(""DELETE FROM pets WHERE id=:id"", pet_params);\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetRowMapper.java","","JdbcPetRowMapper","mapRow","JdbcPet","ResultSet rs, int rownum","{\n        JdbcPet pet = new JdbcPet();\n        pet.setId(rs.getInt(""pets_id""));\n        pet.setName(rs.getString(""name""));\n        pet.setBirthDate(rs.getObject(""birth_date"", LocalDate.class));\n        pet.setTypeId(rs.getInt(""type_id""));\n        pet.setOwnerId(rs.getInt(""owner_id""));\n        return pet;\n    }","throws SQLException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetTypeRepositoryImpl.java","","JdbcPetTypeRepositoryImpl","findById","PetType","int id","{\n		PetType petType;\n        try {\n            Map<String, Object> params = new HashMap<>();\n            params.put(""id"", id);\n            petType = this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT id, name FROM types WHERE id= :id"",\n                params,\n                BeanPropertyRowMapper.newInstance(PetType.class));\n        } catch (EmptyResultDataAccessException ex) {\n            throw new ObjectRetrievalFailureException(PetType.class, id);\n        }\n        return petType;\n	}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetTypeRepositoryImpl.java","","JdbcPetTypeRepositoryImpl","findByName","PetType","String name","{\n        PetType petType;\n        try {\n            Map<String, Object> params = new HashMap<>();\n            params.put(""name"", name);\n            petType = this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT id, name FROM types WHERE name= :name"",\n                params,\n                BeanPropertyRowMapper.newInstance(PetType.class));\n        } catch (EmptyResultDataAccessException ex) {\n            throw new ObjectRetrievalFailureException(PetType.class, name);\n        }\n        return petType;\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetTypeRepositoryImpl.java","","JdbcPetTypeRepositoryImpl","findAll","Collection<PetType>","","{\n		Map<String, Object> params = new HashMap<>();\n        return this.namedParameterJdbcTemplate.query(\n            ""SELECT id, name FROM types"",\n            params,\n            BeanPropertyRowMapper.newInstance(PetType.class));\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetTypeRepositoryImpl.java","","JdbcPetTypeRepositoryImpl","save","void","PetType petType","{\n		BeanPropertySqlParameterSource parameterSource = new BeanPropertySqlParameterSource(petType);\n		if (petType.isNew()) {\n            Number newKey = this.insertPetType.executeAndReturnKey(parameterSource);\n            petType.setId(newKey.intValue());\n        } else {\n            this.namedParameterJdbcTemplate.update(""UPDATE types SET name=:name WHERE id=:id"",\n                parameterSource);\n        }\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetTypeRepositoryImpl.java","","JdbcPetTypeRepositoryImpl","delete","void","PetType petType","{\n		Map<String, Object> pettype_params = new HashMap<>();\n		pettype_params.put(""id"", petType.getId());\n		List<Pet> pets = new ArrayList<Pet>();\n		pets = this.namedParameterJdbcTemplate.\n    			query(""SELECT pets.id, name, birth_date, type_id, owner_id FROM pets WHERE type_id=:id"",\n    			pettype_params,\n    			BeanPropertyRowMapper.newInstance(Pet.class));\n		// cascade delete pets\n		for (Pet pet : pets){\n			Map<String, Object> pet_params = new HashMap<>();\n			pet_params.put(""id"", pet.getId());\n			List<Visit> visits = new ArrayList<Visit>();\n			visits = this.namedParameterJdbcTemplate.query(\n		            ""SELECT id, pet_id, visit_date, description FROM visits WHERE pet_id = :id"",\n		            pet_params,\n		            BeanPropertyRowMapper.newInstance(Visit.class));\n	        // cascade delete visits\n	        for (Visit visit : visits){\n	        	Map<String, Object> visit_params = new HashMap<>();\n	        	visit_params.put(""id"", visit.getId());\n	        	this.namedParameterJdbcTemplate.update(""DELETE FROM visits WHERE id=:id"", visit_params);\n	        }\n	        this.namedParameterJdbcTemplate.update(""DELETE FROM pets WHERE id=:id"", pet_params);\n        }\n        this.namedParameterJdbcTemplate.update(""DELETE FROM types WHERE id=:id"", pettype_params);\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetVisitExtractor.java","","JdbcPetVisitExtractor","mapPrimaryKey","Integer","ResultSet rs","{\n        return rs.getInt(""pets_id"");\n    }","throws SQLException","@Override protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetVisitExtractor.java","","JdbcPetVisitExtractor","mapForeignKey","Integer","ResultSet rs","{\n        if (rs.getObject(""visits_pet_id"") == null) {\n            return null;\n        } else {\n            return rs.getInt(""visits_pet_id"");\n        }\n    }","throws SQLException","@Override protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcPetVisitExtractor.java","","JdbcPetVisitExtractor","addChild","void","JdbcPet root, Visit child","{\n        root.addVisit(child);\n    }","","@Override protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcSpecialtyRepositoryImpl.java","","JdbcSpecialtyRepositoryImpl","findById","Specialty","int id","{\n		Specialty specialty;\n        try {\n            Map<String, Object> params = new HashMap<>();\n            params.put(""id"", id);\n            specialty = this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT id, name FROM specialties WHERE id= :id"",\n                params,\n                BeanPropertyRowMapper.newInstance(Specialty.class));\n        } catch (EmptyResultDataAccessException ex) {\n            throw new ObjectRetrievalFailureException(Specialty.class, id);\n        }\n        return specialty;\n	}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcSpecialtyRepositoryImpl.java","","JdbcSpecialtyRepositoryImpl","findSpecialtiesByNameIn","List<Specialty>","Set<String> names","{\n        List<Specialty> specialties;\n        try{\n            String sql = ""SELECT id, name FROM specialties WHERE specialties.name IN (:names)"";\n            Map<String, Object> params = new HashMap<>();\n            params.put(""names"", names);\n            specialties = this.namedParameterJdbcTemplate.query(\n                sql,\n                params,\n                new BeanPropertyRowMapper<>(Specialty.class));\n        } catch (EmptyResultDataAccessException ex){\n            throw new ObjectRetrievalFailureException(Specialty.class, names);\n        }\n\n        return specialties;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcSpecialtyRepositoryImpl.java","","JdbcSpecialtyRepositoryImpl","findAll","Collection<Specialty>","","{\n		Map<String, Object> params = new HashMap<>();\n        return this.namedParameterJdbcTemplate.query(\n            ""SELECT id, name FROM specialties"",\n            params,\n            BeanPropertyRowMapper.newInstance(Specialty.class));\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcSpecialtyRepositoryImpl.java","","JdbcSpecialtyRepositoryImpl","save","void","Specialty specialty","{\n		BeanPropertySqlParameterSource parameterSource = new BeanPropertySqlParameterSource(specialty);\n		if (specialty.isNew()) {\n            Number newKey = this.insertSpecialty.executeAndReturnKey(parameterSource);\n            specialty.setId(newKey.intValue());\n        } else {\n            this.namedParameterJdbcTemplate.update(""UPDATE specialties SET name=:name WHERE id=:id"",\n                parameterSource);\n        }\n\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcSpecialtyRepositoryImpl.java","","JdbcSpecialtyRepositoryImpl","delete","void","Specialty specialty","{\n		Map<String, Object> params = new HashMap<>();\n        params.put(""id"", specialty.getId());\n        this.namedParameterJdbcTemplate.update(""DELETE FROM vet_specialties WHERE specialty_id=:id"", params);\n        this.namedParameterJdbcTemplate.update(""DELETE FROM specialties WHERE id=:id"", params);\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcUserRepositoryImpl.java","","JdbcUserRepositoryImpl","save","void","User user","{\n\n        BeanPropertySqlParameterSource parameterSource = new BeanPropertySqlParameterSource(user);\n\n        try {\n            getByUsername(user.getUsername());\n            this.namedParameterJdbcTemplate.update(""UPDATE users SET password=:password, enabled=:enabled WHERE username=:username"", parameterSource);\n        } catch (EmptyResultDataAccessException e) {\n            this.insertUser.execute(parameterSource);\n        } finally {\n            updateUserRoles(user);\n        }\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcUserRepositoryImpl.java","","JdbcUserRepositoryImpl","getByUsername","User","String username","{\n\n        Map<String, Object> params = new HashMap<>();\n        params.put(""username"", username);\n        return this.namedParameterJdbcTemplate.queryForObject(""SELECT * FROM users WHERE username=:username"",\n            params, BeanPropertyRowMapper.newInstance(User.class));\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcUserRepositoryImpl.java","","JdbcUserRepositoryImpl","updateUserRoles","void","User user","{\n        Map<String, Object> params = new HashMap<>();\n        params.put(""username"", user.getUsername());\n        this.namedParameterJdbcTemplate.update(""DELETE FROM roles WHERE username=:username"", params);\n        for (Role role : user.getRoles()) {\n            params.put(""role"", role.getName());\n            if (role.getName() != null) {\n                this.namedParameterJdbcTemplate.update(""INSERT INTO roles(username, role) VALUES (:username, :role)"", params);\n            }\n        }\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVetRepositoryImpl.java","","JdbcVetRepositoryImpl","findAll","Collection<Vet>","","{\n        List<Vet> vets = new ArrayList<>();\n        // Retrieve the list of all vets.\n        vets.addAll(this.jdbcTemplate.query(\n            ""SELECT id, first_name, last_name FROM vets ORDER BY last_name,first_name"",\n            BeanPropertyRowMapper.newInstance(Vet.class)));\n\n        // Retrieve the list of all possible specialties.\n        final List<Specialty> specialties = this.jdbcTemplate.query(\n            ""SELECT id, name FROM specialties"",\n            BeanPropertyRowMapper.newInstance(Specialty.class));\n\n        // Build each vet's list of specialties.\n        for (Vet vet : vets) {\n            final List<Integer> vetSpecialtiesIds = this.jdbcTemplate.query(\n                ""SELECT specialty_id FROM vet_specialties WHERE vet_id=?"",\n                new BeanPropertyRowMapper<Integer>() {\n                    @Override\n                    public Integer mapRow(ResultSet rs, int row) throws SQLException {\n                        return rs.getInt(1);\n                    }\n                },\n                vet.getId());\n            for (int specialtyId : vetSpecialtiesIds) {\n                Specialty specialty = EntityUtils.getById(specialties, Specialty.class, specialtyId);\n                vet.addSpecialty(specialty);\n            }\n        }\n        return vets;\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVetRepositoryImpl.java","","JdbcVetRepositoryImpl","mapRow","Integer","ResultSet rs, int row","{\n                        return rs.getInt(1);\n                    }","throws SQLException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVetRepositoryImpl.java","","JdbcVetRepositoryImpl","findById","Vet","int id","{\n		Vet vet;\n		try {\n			Map<String, Object> vet_params = new HashMap<>();\n			vet_params.put(""id"", id);\n			vet = this.namedParameterJdbcTemplate.queryForObject(\n					""SELECT id, first_name, last_name FROM vets WHERE id= :id"",\n					vet_params,\n					BeanPropertyRowMapper.newInstance(Vet.class));\n\n			final List<Specialty> specialties = this.namedParameterJdbcTemplate.query(\n					""SELECT id, name FROM specialties"", vet_params, BeanPropertyRowMapper.newInstance(Specialty.class));\n\n			final List<Integer> vetSpecialtiesIds = this.namedParameterJdbcTemplate.query(\n					""SELECT specialty_id FROM vet_specialties WHERE vet_id=:id"",\n					vet_params,\n					new BeanPropertyRowMapper<Integer>() {\n						@Override\n						public Integer mapRow(ResultSet rs, int row) throws SQLException {\n							return rs.getInt(1);\n						}\n					});\n			for (int specialtyId : vetSpecialtiesIds) {\n				Specialty specialty = EntityUtils.getById(specialties, Specialty.class, specialtyId);\n				vet.addSpecialty(specialty);\n			}\n\n		} catch (EmptyResultDataAccessException ex) {\n			throw new ObjectRetrievalFailureException(Vet.class, id);\n		}\n		return vet;\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVetRepositoryImpl.java","","JdbcVetRepositoryImpl","mapRow","Integer","ResultSet rs, int row","{\n							return rs.getInt(1);\n						}","throws SQLException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVetRepositoryImpl.java","","JdbcVetRepositoryImpl","save","void","Vet vet","{\n		BeanPropertySqlParameterSource parameterSource = new BeanPropertySqlParameterSource(vet);\n		if (vet.isNew()) {\n			Number newKey = this.insertVet.executeAndReturnKey(parameterSource);\n			vet.setId(newKey.intValue());\n			updateVetSpecialties(vet);\n		} else {\n			this.namedParameterJdbcTemplate\n					.update(""UPDATE vets SET first_name=:firstName, last_name=:lastName WHERE id=:id"", parameterSource);\n			updateVetSpecialties(vet);\n		}\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVetRepositoryImpl.java","","JdbcVetRepositoryImpl","delete","void","Vet vet","{\n		Map<String, Object> params = new HashMap<>();\n		params.put(""id"", vet.getId());\n		this.namedParameterJdbcTemplate.update(""DELETE FROM vet_specialties WHERE vet_id=:id"", params);\n		this.namedParameterJdbcTemplate.update(""DELETE FROM vets WHERE id=:id"", params);\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVetRepositoryImpl.java","","JdbcVetRepositoryImpl","updateVetSpecialties","void","Vet vet","{\n		Map<String, Object> params = new HashMap<>();\n		params.put(""id"", vet.getId());\n		this.namedParameterJdbcTemplate.update(""DELETE FROM vet_specialties WHERE vet_id=:id"", params);\n		for (Specialty spec : vet.getSpecialties()) {\n			params.put(""spec_id"", spec.getId());\n			if(!(spec.getId() == null)) {\n				this.namedParameterJdbcTemplate.update(""INSERT INTO vet_specialties VALUES (:id, :spec_id)"", params);\n			}\n		}\n	}","throws DataAccessException","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRepositoryImpl.java","","JdbcVisitRepositoryImpl","createVisitParameterSource","MapSqlParameterSource","Visit visit","{\n        return new MapSqlParameterSource()\n            .addValue(""id"", visit.getId())\n            .addValue(""visit_date"", visit.getDate())\n            .addValue(""description"", visit.getDescription())\n            .addValue(""pet_id"", visit.getPet().getId());\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRepositoryImpl.java","","JdbcVisitRepositoryImpl","findByPetId","List<Visit>","Integer petId","{\n        Map<String, Object> params = new HashMap<>();\n        params.put(""id"", petId);\n        JdbcPet pet = this.namedParameterJdbcTemplate.queryForObject(\n            ""SELECT id as pets_id, name, birth_date, type_id, owner_id FROM pets WHERE id=:id"",\n            params,\n            new JdbcPetRowMapper());\n\n        List<Visit> visits = this.namedParameterJdbcTemplate.query(\n            ""SELECT id as visit_id, visit_date, description FROM visits WHERE pet_id=:id"",\n            params, new JdbcVisitRowMapper());\n\n        for (Visit visit : visits) {\n            visit.setPet(pet);\n        }\n\n        return visits;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRepositoryImpl.java","","JdbcVisitRepositoryImpl","findById","Visit","int id","{\n        Visit visit;\n        try {\n            Map<String, Object> params = new HashMap<>();\n            params.put(""id"", id);\n            visit = this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT id as visit_id, visits.pet_id as pets_id, visit_date, description FROM visits WHERE id= :id"",\n                params,\n                new JdbcVisitRowMapperExt());\n        } catch (EmptyResultDataAccessException ex) {\n            throw new ObjectRetrievalFailureException(Visit.class, id);\n        }\n        return visit;\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRepositoryImpl.java","","JdbcVisitRepositoryImpl","findAll","Collection<Visit>","","{\n        Map<String, Object> params = new HashMap<>();\n        return this.namedParameterJdbcTemplate.query(\n            ""SELECT id as visit_id, pets.id as pets_id, visit_date, description FROM visits LEFT JOIN pets ON visits.pet_id = pets.id"",\n            params, new JdbcVisitRowMapperExt());\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRepositoryImpl.java","","JdbcVisitRepositoryImpl","save","void","Visit visit","{\n        if (visit.isNew()) {\n            Number newKey = this.insertVisit.executeAndReturnKey(createVisitParameterSource(visit));\n            visit.setId(newKey.intValue());\n        } else {\n            this.namedParameterJdbcTemplate.update(\n                ""UPDATE visits SET visit_date=:visit_date, description=:description, pet_id=:pet_id WHERE id=:id "",\n                createVisitParameterSource(visit));\n        }\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRepositoryImpl.java","","JdbcVisitRepositoryImpl","delete","void","Visit visit","{\n        Map<String, Object> params = new HashMap<>();\n        params.put(""id"", visit.getId());\n        this.namedParameterJdbcTemplate.update(""DELETE FROM visits WHERE id=:id"", params);\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRepositoryImpl.java","","JdbcVisitRowMapperExt","mapRow","Visit","ResultSet rs, int rowNum","{\n            Visit visit = new Visit();\n            JdbcPet pet = new JdbcPet();\n            PetType petType = new PetType();\n            Owner owner = new Owner();\n            visit.setId(rs.getInt(""visit_id""));\n            Date visitDate = rs.getDate(""visit_date"");\n            visit.setDate(new java.sql.Date(visitDate.getTime()).toLocalDate());\n            visit.setDescription(rs.getString(""description""));\n            Map<String, Object> params = new HashMap<>();\n            params.put(""id"", rs.getInt(""pets_id""));\n            pet = JdbcVisitRepositoryImpl.this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT pets.id as pets_id, name, birth_date, type_id, owner_id FROM pets WHERE pets.id=:id"",\n                params,\n                new JdbcPetRowMapper());\n            params.put(""type_id"", pet.getTypeId());\n            petType = JdbcVisitRepositoryImpl.this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT id, name FROM types WHERE id= :type_id"",\n                params,\n                BeanPropertyRowMapper.newInstance(PetType.class));\n            pet.setType(petType);\n            params.put(""owner_id"", pet.getOwnerId());\n            owner = JdbcVisitRepositoryImpl.this.namedParameterJdbcTemplate.queryForObject(\n                ""SELECT id, first_name, last_name, address, city, telephone FROM owners WHERE id= :owner_id"",\n                params,\n                BeanPropertyRowMapper.newInstance(Owner.class));\n            pet.setOwner(owner);\n            visit.setPet(pet);\n            return visit;\n        }","throws SQLException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jdbc\JdbcVisitRowMapper.java","","JdbcVisitRowMapper","mapRow","Visit","ResultSet rs, int row","{\n        Visit visit = new Visit();\n        visit.setId(rs.getInt(""visit_id""));\n        visit.setDate(rs.getObject(""visit_date"", LocalDate.class));\n        visit.setDescription(rs.getString(""description""));\n        return visit;\n    }","throws SQLException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaOwnerRepositoryImpl.java","","JpaOwnerRepositoryImpl","findByLastName","Collection<Owner>","String lastName","{\n        // using 'join fetch' because a single query should load both owners and pets\n        // using 'left join fetch' because it might happen that an owner does not have pets yet\n        Query query = this.em.createQuery(""SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName"");\n        query.setParameter(""lastName"", lastName + ""%"");\n        return query.getResultList();\n    }","","@SuppressWarnings(""unchecked"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaOwnerRepositoryImpl.java","","JpaOwnerRepositoryImpl","findById","Owner","int id","{\n        // using 'join fetch' because a single query should load both owners and pets\n        // using 'left join fetch' because it might happen that an owner does not have pets yet\n        Query query = this.em.createQuery(""SELECT owner FROM Owner owner left join fetch owner.pets WHERE owner.id =:id"");\n        query.setParameter(""id"", id);\n        return (Owner) query.getSingleResult();\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaOwnerRepositoryImpl.java","","JpaOwnerRepositoryImpl","save","void","Owner owner","{\n        if (owner.getId() == null) {\n            this.em.persist(owner);\n        } else {\n            this.em.merge(owner);\n        }\n\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaOwnerRepositoryImpl.java","","JpaOwnerRepositoryImpl","findAll","Collection<Owner>","","{\n		Query query = this.em.createQuery(""SELECT owner FROM Owner owner"");\n        return query.getResultList();\n	}","throws DataAccessException","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaOwnerRepositoryImpl.java","","JpaOwnerRepositoryImpl","delete","void","Owner owner","{\n		this.em.remove(this.em.contains(owner) ? owner : this.em.merge(owner));\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetRepositoryImpl.java","","JpaPetRepositoryImpl","findPetTypes","List<PetType>","","{\n        return this.em.createQuery(""SELECT ptype FROM PetType ptype ORDER BY ptype.name"").getResultList();\n    }","","@Override @SuppressWarnings(""unchecked"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetRepositoryImpl.java","","JpaPetRepositoryImpl","findById","Pet","int id","{\n        return this.em.find(Pet.class, id);\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetRepositoryImpl.java","","JpaPetRepositoryImpl","save","void","Pet pet","{\n        if (pet.getId() == null) {\n            this.em.persist(pet);\n        } else {\n            this.em.merge(pet);\n        }\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetRepositoryImpl.java","","JpaPetRepositoryImpl","findAll","Collection<Pet>","","{\n		return this.em.createQuery(""SELECT pet FROM Pet pet"").getResultList();\n	}","throws DataAccessException","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetRepositoryImpl.java","","JpaPetRepositoryImpl","delete","void","Pet pet","{\n		//this.em.remove(this.em.contains(pet) ? pet : this.em.merge(pet));\n		String petId = pet.getId().toString();\n		this.em.createQuery(""DELETE FROM Visit visit WHERE pet.id="" + petId).executeUpdate();\n		this.em.createQuery(""DELETE FROM Pet pet WHERE id="" + petId).executeUpdate();\n		if (em.contains(pet)) {\n			em.remove(pet);\n		}\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetTypeRepositoryImpl.java","","JpaPetTypeRepositoryImpl","findById","PetType","int id","{\n		return this.em.find(PetType.class, id);\n	}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetTypeRepositoryImpl.java","","JpaPetTypeRepositoryImpl","findByName","PetType","String name","{\n        return this.em.createQuery(""SELECT p FROM PetType p WHERE p.name = :name"", PetType.class)\n            .setParameter(""name"", name)\n            .getSingleResult();\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetTypeRepositoryImpl.java","","JpaPetTypeRepositoryImpl","findAll","Collection<PetType>","","{\n		return this.em.createQuery(""SELECT ptype FROM PetType ptype"").getResultList();\n	}","throws DataAccessException","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetTypeRepositoryImpl.java","","JpaPetTypeRepositoryImpl","save","void","PetType petType","{\n		if (petType.getId() == null) {\n            this.em.persist(petType);\n        } else {\n            this.em.merge(petType);\n        }\n\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaPetTypeRepositoryImpl.java","","JpaPetTypeRepositoryImpl","delete","void","PetType petType","{\n		this.em.remove(this.em.contains(petType) ? petType : this.em.merge(petType));\n		Integer petTypeId = petType.getId();\n\n		List<Pet> pets = this.em.createQuery(""SELECT pet FROM Pet pet WHERE type.id="" + petTypeId).getResultList();\n		for (Pet pet : pets){\n			List<Visit> visits = pet.getVisits();\n			for (Visit visit : visits){\n				this.em.createQuery(""DELETE FROM Visit visit WHERE id="" + visit.getId()).executeUpdate();\n			}\n			this.em.createQuery(""DELETE FROM Pet pet WHERE id="" + pet.getId()).executeUpdate();\n		}\n		this.em.createQuery(""DELETE FROM PetType pettype WHERE id="" + petTypeId).executeUpdate();\n	}","throws DataAccessException","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaSpecialtyRepositoryImpl.java","","JpaSpecialtyRepositoryImpl","findById","Specialty","int id","{\n		return this.em.find(Specialty.class, id);\n	}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaSpecialtyRepositoryImpl.java","","JpaSpecialtyRepositoryImpl","findSpecialtiesByNameIn","List<Specialty>","Set<String> names","{\n        final String jpql = ""SELECT s FROM Specialty s WHERE s.name IN :names"";\n        return em.createQuery(jpql, Specialty.class)\n            .setParameter(""names"", names)\n            .getResultList();\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaSpecialtyRepositoryImpl.java","","JpaSpecialtyRepositoryImpl","findAll","Collection<Specialty>","","{\n		return this.em.createQuery(""SELECT s FROM Specialty s"").getResultList();\n	}","throws DataAccessException","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaSpecialtyRepositoryImpl.java","","JpaSpecialtyRepositoryImpl","save","void","Specialty specialty","{\n		if (specialty.getId() == null) {\n            this.em.persist(specialty);\n        } else {\n            this.em.merge(specialty);\n        }\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaSpecialtyRepositoryImpl.java","","JpaSpecialtyRepositoryImpl","delete","void","Specialty specialty","{\n		this.em.remove(this.em.contains(specialty) ? specialty : this.em.merge(specialty));\n		Integer specId = specialty.getId();\n		this.em.createNativeQuery(""DELETE FROM vet_specialties WHERE specialty_id="" + specId).executeUpdate();\n		this.em.createQuery(""DELETE FROM Specialty specialty WHERE id="" + specId).executeUpdate();\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaUserRepositoryImpl.java","","JpaUserRepositoryImpl","save","void","User user","{\n        if (this.em.find(User.class, user.getUsername()) == null) {\n            this.em.persist(user);\n        } else {\n            this.em.merge(user);\n        }\n    }","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVetRepositoryImpl.java","","JpaVetRepositoryImpl","findById","Vet","int id","{\n		return this.em.find(Vet.class, id);\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVetRepositoryImpl.java","","JpaVetRepositoryImpl","findAll","Collection<Vet>","","{\n		return this.em.createQuery(""SELECT vet FROM Vet vet"").getResultList();\n	}","throws DataAccessException","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVetRepositoryImpl.java","","JpaVetRepositoryImpl","save","void","Vet vet","{\n        if (vet.getId() == null) {\n            this.em.persist(vet);\n        } else {\n            this.em.merge(vet);\n        }\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVetRepositoryImpl.java","","JpaVetRepositoryImpl","delete","void","Vet vet","{\n		this.em.remove(this.em.contains(vet) ? vet : this.em.merge(vet));\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVisitRepositoryImpl.java","","JpaVisitRepositoryImpl","save","void","Visit visit","{\n        if (visit.getId() == null) {\n            this.em.persist(visit);\n        } else {\n            this.em.merge(visit);\n        }\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVisitRepositoryImpl.java","","JpaVisitRepositoryImpl","findByPetId","List<Visit>","Integer petId","{\n        Query query = this.em.createQuery(""SELECT v FROM Visit v where v.pet.id= :id"");\n        query.setParameter(""id"", petId);\n        return query.getResultList();\n    }","","@Override @SuppressWarnings(""unchecked"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVisitRepositoryImpl.java","","JpaVisitRepositoryImpl","findById","Visit","int id","{\n		return this.em.find(Visit.class, id);\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVisitRepositoryImpl.java","","JpaVisitRepositoryImpl","findAll","Collection<Visit>","","{\n        return this.em.createQuery(""SELECT v FROM Visit v"").getResultList();\n	}","throws DataAccessException","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\jpa\JpaVisitRepositoryImpl.java","","JpaVisitRepositoryImpl","delete","void","Visit visit","{\n        this.em.remove(this.em.contains(visit) ? visit : this.em.merge(visit));\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\PetRepositoryOverride.java","","PetRepositoryOverride","delete","void","Pet pet","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\PetTypeRepositoryOverride.java","","PetTypeRepositoryOverride","delete","void","PetType petType","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpecialtyRepositoryOverride.java","","SpecialtyRepositoryOverride","delete","void","Specialty specialty","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpringDataOwnerRepository.java","","SpringDataOwnerRepository","findByLastName","Collection<Owner>","String lastName","","","@Override @Query(""SELECT DISTINCT owner FROM Owner owner left join fetch owner.pets WHERE owner.lastName LIKE :lastName%"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpringDataOwnerRepository.java","","SpringDataOwnerRepository","findById","Owner","int id","","","@Override @Query(""SELECT owner FROM Owner owner left join fetch owner.pets WHERE owner.id =:id"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpringDataPetRepository.java","","SpringDataPetRepository","findPetTypes","List<PetType>","","","throws DataAccessException","@Override @Query(""SELECT ptype FROM PetType ptype ORDER BY ptype.name"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpringDataPetRepositoryImpl.java","","SpringDataPetRepositoryImpl","delete","void","Pet pet","{\n		String petId = pet.getId().toString();\n		this.em.createQuery(""DELETE FROM Visit visit WHERE pet.id="" + petId).executeUpdate();\n		this.em.createQuery(""DELETE FROM Pet pet WHERE id="" + petId).executeUpdate();\n        if (em.contains(pet)) {\n            em.remove(pet);\n        }\n	}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpringDataPetTypeRepositoryImpl.java","","SpringDataPetTypeRepositoryImpl","delete","void","PetType petType","{\n        this.em.remove(this.em.contains(petType) ? petType : this.em.merge(petType));\n		Integer petTypeId = petType.getId();\n\n		List<Pet> pets = this.em.createQuery(""SELECT pet FROM Pet pet WHERE type.id="" + petTypeId).getResultList();\n		for (Pet pet : pets){\n			List<Visit> visits = pet.getVisits();\n			for (Visit visit : visits){\n				this.em.createQuery(""DELETE FROM Visit visit WHERE id="" + visit.getId()).executeUpdate();\n			}\n			this.em.createQuery(""DELETE FROM Pet pet WHERE id="" + pet.getId()).executeUpdate();\n		}\n		this.em.createQuery(""DELETE FROM PetType pettype WHERE id="" + petTypeId).executeUpdate();\n	}","","@SuppressWarnings(""unchecked"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpringDataSpecialtyRepositoryImpl.java","","SpringDataSpecialtyRepositoryImpl","delete","void","Specialty specialty","{\n        this.em.remove(this.em.contains(specialty) ? specialty : this.em.merge(specialty));\n		Integer specId = specialty.getId();\n		this.em.createNativeQuery(""DELETE FROM vet_specialties WHERE specialty_id="" + specId).executeUpdate();\n		this.em.createQuery(""DELETE FROM Specialty specialty WHERE id="" + specId).executeUpdate();\n	}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\SpringDataVisitRepositoryImpl.java","","SpringDataVisitRepositoryImpl","delete","void","Visit visit","{\n		String visitId = visit.getId().toString();\n		this.em.createQuery(""DELETE FROM Visit visit WHERE id="" + visitId).executeUpdate();\n        if (em.contains(visit)) {\n            em.remove(visit);\n        }\n	}","throws DataAccessException","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\repository\springdatajpa\VisitRepositoryOverride.java","","VisitRepositoryOverride","delete","void","Visit visit","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\advice\ExceptionControllerAdvice.java","","ExceptionControllerAdvice","detailBuild","ProblemDetail","Exception ex, HttpStatus status, StringBuffer url","{\n        ProblemDetail detail = ProblemDetail.forStatus(status);\n        detail.setType(URI.create(url.toString()));\n        detail.setTitle(ex.getClass().getSimpleName());\n        detail.setDetail(ex.getLocalizedMessage());\n        detail.setProperty(""timestamp"", Instant.now());\n        return detail;\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\advice\ExceptionControllerAdvice.java","","ExceptionControllerAdvice","handleGeneralException","ResponseEntity<ProblemDetail>","Exception e, HttpServletRequest request","{\n        HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR;\n        ProblemDetail detail = this.detailBuild(e, status, request.getRequestURL());\n        return ResponseEntity.status(status).body(detail);\n    }","","@ExceptionHandler(Exception.class) @ResponseBody public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\advice\ExceptionControllerAdvice.java","","ExceptionControllerAdvice","handleDataIntegrityViolationException","ResponseEntity<ProblemDetail>","DataIntegrityViolationException ex, HttpServletRequest request","{\n        HttpStatus status = HttpStatus.NOT_FOUND;\n        ProblemDetail detail = this.detailBuild(ex, status, request.getRequestURL());\n        return ResponseEntity.status(status).body(detail);\n    }","","@ExceptionHandler(DataIntegrityViolationException.class) @ResponseBody public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\advice\ExceptionControllerAdvice.java","","ExceptionControllerAdvice","handleMethodArgumentNotValidException","ResponseEntity<ProblemDetail>","MethodArgumentNotValidException ex, HttpServletRequest request","{\n        HttpStatus status = HttpStatus.BAD_REQUEST;\n        BindingErrorsResponse errors = new BindingErrorsResponse();\n        BindingResult bindingResult = ex.getBindingResult();\n        if (bindingResult.hasErrors()) {\n            errors.addAllErrors(bindingResult);\n            ProblemDetail detail = this.detailBuild(ex, status, request.getRequestURL());\n            return ResponseEntity.status(status).body(detail);\n        }\n        return ResponseEntity.status(status).build();\n    }","","@ExceptionHandler(MethodArgumentNotValidException.class) @ResponseBody public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingErrorsResponse","addBodyIdError","void","Integer bodyId, String message","{\n        BindingError error = new BindingError();\n        error.setObjectName(""body"");\n        error.setFieldName(""id"");\n        error.setFieldValue(bodyId.toString());\n        error.setErrorMessage(message);\n        addError(error);\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingErrorsResponse","addError","void","BindingError bindingError","{\n		this.bindingErrors.add(bindingError);\n	}","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingErrorsResponse","addAllErrors","void","BindingResult bindingResult","{\n		for (FieldError fieldError : bindingResult.getFieldErrors()) {\n			BindingError error = new BindingError();\n			error.setObjectName(fieldError.getObjectName());\n			error.setFieldName(fieldError.getField());\n			error.setFieldValue(String.valueOf(fieldError.getRejectedValue()));\n			error.setErrorMessage(fieldError.getDefaultMessage());\n			addError(error);\n		}\n	}","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingErrorsResponse","toJSON","String","","{\n		ObjectMapper mapper = new ObjectMapper();\n		mapper.setVisibility(PropertyAccessor.FIELD, Visibility.ANY);\n		String errorsAsJSON = """";\n		try {\n			errorsAsJSON = mapper.writeValueAsString(bindingErrors);\n		} catch (JsonProcessingException e) {\n			e.printStackTrace();\n		}\n		return errorsAsJSON;\n	}","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingErrorsResponse","toString","String","","{\n		return ""BindingErrorsResponse [bindingErrors="" + bindingErrors + ""]"";\n	}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingError","setObjectName","void","String objectName","{\n			this.objectName = objectName;\n		}","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingError","setFieldName","void","String fieldName","{\n			this.fieldName = fieldName;\n		}","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingError","setFieldValue","void","String fieldValue","{\n			this.fieldValue = fieldValue;\n		}","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingError","setErrorMessage","void","String error_message","{\n			this.errorMessage = error_message;\n		}","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\BindingErrorsResponse.java","","BindingError","toString","String","","{\n			return ""BindingError [objectName="" + objectName + "", fieldName="" + fieldName + "", fieldValue="" + fieldValue\n					+ "", errorMessage="" + errorMessage + ""]"";\n		}","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","listOwners","ResponseEntity<List<OwnerDto>>","String lastName","{\n        Collection<Owner> owners;\n        if (lastName != null) {\n            owners = this.clinicService.findOwnerByLastName(lastName);\n        } else {\n            owners = this.clinicService.findAllOwners();\n        }\n        if (owners.isEmpty()) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(ownerMapper.toOwnerDtoCollection(owners), HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","getOwner","ResponseEntity<OwnerDto>","Integer ownerId","{\n        Owner owner = this.clinicService.findOwnerById(ownerId);\n        if (owner == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(ownerMapper.toOwnerDto(owner), HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","addOwner","ResponseEntity<OwnerDto>","OwnerFieldsDto ownerFieldsDto","{\n        HttpHeaders headers = new HttpHeaders();\n        Owner owner = ownerMapper.toOwner(ownerFieldsDto);\n        this.clinicService.saveOwner(owner);\n        OwnerDto ownerDto = ownerMapper.toOwnerDto(owner);\n        headers.setLocation(UriComponentsBuilder.newInstance()\n            .path(""/api/owners/{id}"").buildAndExpand(owner.getId()).toUri());\n        return new ResponseEntity<>(ownerDto, headers, HttpStatus.CREATED);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","updateOwner","ResponseEntity<OwnerDto>","Integer ownerId, OwnerFieldsDto ownerFieldsDto","{\n        Owner currentOwner = this.clinicService.findOwnerById(ownerId);\n        if (currentOwner == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        currentOwner.setAddress(ownerFieldsDto.getAddress());\n        currentOwner.setCity(ownerFieldsDto.getCity());\n        currentOwner.setFirstName(ownerFieldsDto.getFirstName());\n        currentOwner.setLastName(ownerFieldsDto.getLastName());\n        currentOwner.setTelephone(ownerFieldsDto.getTelephone());\n        this.clinicService.saveOwner(currentOwner);\n        return new ResponseEntity<>(ownerMapper.toOwnerDto(currentOwner), HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","deleteOwner","ResponseEntity<OwnerDto>","Integer ownerId","{\n        Owner owner = this.clinicService.findOwnerById(ownerId);\n        if (owner == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        this.clinicService.deleteOwner(owner);\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Transactional @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","addPetToOwner","ResponseEntity<PetDto>","Integer ownerId, PetFieldsDto petFieldsDto","{\n        HttpHeaders headers = new HttpHeaders();\n        Pet pet = petMapper.toPet(petFieldsDto);\n        Owner owner = new Owner();\n        owner.setId(ownerId);\n        pet.setOwner(owner);\n        pet.getType().setName(null);\n        this.clinicService.savePet(pet);\n        PetDto petDto = petMapper.toPetDto(pet);\n        headers.setLocation(UriComponentsBuilder.newInstance().path(""/api/pets/{id}"")\n            .buildAndExpand(pet.getId()).toUri());\n        return new ResponseEntity<>(petDto, headers, HttpStatus.CREATED);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","updateOwnersPet","ResponseEntity<Void>","Integer ownerId, Integer petId, PetFieldsDto petFieldsDto","{\n        Owner currentOwner = this.clinicService.findOwnerById(ownerId);\n        if (currentOwner != null) {\n            Pet currentPet = this.clinicService.findPetById(petId);\n            if (currentPet != null) {\n                currentPet.setBirthDate(petFieldsDto.getBirthDate());\n                currentPet.setName(petFieldsDto.getName());\n                currentPet.setType(petMapper.toPetType(petFieldsDto.getType()));\n                this.clinicService.savePet(currentPet);\n                return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n            }\n        }\n        return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","addVisitToOwner","ResponseEntity<VisitDto>","Integer ownerId, Integer petId, VisitFieldsDto visitFieldsDto","{\n        HttpHeaders headers = new HttpHeaders();\n        Visit visit = visitMapper.toVisit(visitFieldsDto);\n        Pet pet = new Pet();\n        pet.setId(petId);\n        visit.setPet(pet);\n        this.clinicService.saveVisit(visit);\n        VisitDto visitDto = visitMapper.toVisitDto(visit);\n        headers.setLocation(UriComponentsBuilder.newInstance().path(""/api/visits/{id}"")\n            .buildAndExpand(visit.getId()).toUri());\n        return new ResponseEntity<>(visitDto, headers, HttpStatus.CREATED);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\OwnerRestController.java","","OwnerRestController","getOwnersPet","ResponseEntity<PetDto>","Integer ownerId, Integer petId","{\n        Owner owner = this.clinicService.findOwnerById(ownerId);\n        if (owner != null) {\n            Pet pet = owner.getPet(petId);\n            if (pet != null) {\n                return new ResponseEntity<>(petMapper.toPetDto(pet), HttpStatus.OK);\n            }\n        }\n        return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java","","PetRestController","getPet","ResponseEntity<PetDto>","Integer petId","{\n        PetDto pet = petMapper.toPetDto(this.clinicService.findPetById(petId));\n        if (pet == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(pet, HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java","","PetRestController","listPets","ResponseEntity<List<PetDto>>","","{\n        List<PetDto> pets = new ArrayList<>(petMapper.toPetsDto(this.clinicService.findAllPets()));\n        if (pets.isEmpty()) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(pets, HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java","","PetRestController","updatePet","ResponseEntity<PetDto>","Integer petId, PetDto petDto","{\n        Pet currentPet = this.clinicService.findPetById(petId);\n        if (currentPet == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        currentPet.setBirthDate(petDto.getBirthDate());\n        currentPet.setName(petDto.getName());\n        currentPet.setType(petMapper.toPetType(petDto.getType()));\n        this.clinicService.savePet(currentPet);\n        return new ResponseEntity<>(petMapper.toPetDto(currentPet), HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetRestController.java","","PetRestController","deletePet","ResponseEntity<PetDto>","Integer petId","{\n        Pet pet = this.clinicService.findPetById(petId);\n        if (pet == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        this.clinicService.deletePet(pet);\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java","","PetTypeRestController","listPetTypes","ResponseEntity<List<PetTypeDto>>","","{\n        List<PetType> petTypes = new ArrayList<>(this.clinicService.findAllPetTypes());\n        if (petTypes.isEmpty()) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(petTypeMapper.toPetTypeDtos(petTypes), HttpStatus.OK);\n    }","","@PreAuthorize(""hasAnyRole(@roles.OWNER_ADMIN, @roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java","","PetTypeRestController","getPetType","ResponseEntity<PetTypeDto>","Integer petTypeId","{\n        PetType petType = this.clinicService.findPetTypeById(petTypeId);\n        if (petType == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(petTypeMapper.toPetTypeDto(petType), HttpStatus.OK);\n    }","","@PreAuthorize(""hasAnyRole(@roles.OWNER_ADMIN, @roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java","","PetTypeRestController","addPetType","ResponseEntity<PetTypeDto>","PetTypeFieldsDto petTypeFieldsDto","{\n        HttpHeaders headers = new HttpHeaders();\n        final PetType type = petTypeMapper.toPetType(petTypeFieldsDto);\n        this.clinicService.savePetType(type);\n        headers.setLocation(UriComponentsBuilder.newInstance().path(""/api/pettypes/{id}"").buildAndExpand(type.getId()).toUri());\n        return new ResponseEntity<>(petTypeMapper.toPetTypeDto(type), headers, HttpStatus.CREATED);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java","","PetTypeRestController","updatePetType","ResponseEntity<PetTypeDto>","Integer petTypeId, PetTypeDto petTypeDto","{\n        PetType currentPetType = this.clinicService.findPetTypeById(petTypeId);\n        if (currentPetType == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        currentPetType.setName(petTypeDto.getName());\n        this.clinicService.savePetType(currentPetType);\n        return new ResponseEntity<>(petTypeMapper.toPetTypeDto(currentPetType), HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestController.java","","PetTypeRestController","deletePetType","ResponseEntity<PetTypeDto>","Integer petTypeId","{\n        PetType petType = this.clinicService.findPetTypeById(petTypeId);\n        if (petType == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        this.clinicService.deletePetType(petType);\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Transactional @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\RootRestController.java","","RootRestController","redirectToSwagger","void","HttpServletResponse response","{\n		response.sendRedirect(this.servletContextPath + ""/swagger-ui/index.html"");\n	}","throws IOException","@RequestMapping(value = ""/"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java","","SpecialtyRestController","listSpecialties","ResponseEntity<List<SpecialtyDto>>","","{\n        List<SpecialtyDto> specialties = new ArrayList<>();\n        specialties.addAll(specialtyMapper.toSpecialtyDtos(this.clinicService.findAllSpecialties()));\n        if (specialties.isEmpty()) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(specialties, HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java","","SpecialtyRestController","getSpecialty","ResponseEntity<SpecialtyDto>","Integer specialtyId","{\n        Specialty specialty = this.clinicService.findSpecialtyById(specialtyId);\n        if (specialty == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(specialtyMapper.toSpecialtyDto(specialty), HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java","","SpecialtyRestController","addSpecialty","ResponseEntity<SpecialtyDto>","SpecialtyDto specialtyDto","{\n        HttpHeaders headers = new HttpHeaders();\n        Specialty specialty = specialtyMapper.toSpecialty(specialtyDto);\n        this.clinicService.saveSpecialty(specialty);\n        headers.setLocation(UriComponentsBuilder.newInstance().path(""/api/specialties/{id}"").buildAndExpand(specialty.getId()).toUri());\n        return new ResponseEntity<>(specialtyMapper.toSpecialtyDto(specialty), headers, HttpStatus.CREATED);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java","","SpecialtyRestController","updateSpecialty","ResponseEntity<SpecialtyDto>","Integer specialtyId, SpecialtyDto specialtyDto","{\n        Specialty currentSpecialty = this.clinicService.findSpecialtyById(specialtyId);\n        if (currentSpecialty == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        currentSpecialty.setName(specialtyDto.getName());\n        this.clinicService.saveSpecialty(currentSpecialty);\n        return new ResponseEntity<>(specialtyMapper.toSpecialtyDto(currentSpecialty), HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestController.java","","SpecialtyRestController","deleteSpecialty","ResponseEntity<SpecialtyDto>","Integer specialtyId","{\n        Specialty specialty = this.clinicService.findSpecialtyById(specialtyId);\n        if (specialty == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        this.clinicService.deleteSpecialty(specialty);\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Transactional @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\UserRestController.java","","UserRestController","addUser","ResponseEntity<UserDto>","UserDto userDto","{\n        HttpHeaders headers = new HttpHeaders();\n        User user = userMapper.toUser(userDto);\n        this.userService.saveUser(user);\n        return new ResponseEntity<>(userMapper.toUserDto(user), headers, HttpStatus.CREATED);\n    }","","@PreAuthorize( ""hasRole(@roles.ADMIN)"" ) @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java","","VetRestController","listVets","ResponseEntity<List<VetDto>>","","{\n        List<VetDto> vets = new ArrayList<>(vetMapper.toVetDtos(this.clinicService.findAllVets()));\n        if (vets.isEmpty()) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(vets, HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java","","VetRestController","getVet","ResponseEntity<VetDto>","Integer vetId","{\n        Vet vet = this.clinicService.findVetById(vetId);\n        if (vet == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(vetMapper.toVetDto(vet), HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java","","VetRestController","addVet","ResponseEntity<VetDto>","VetDto vetDto","{\n        HttpHeaders headers = new HttpHeaders();\n        Vet vet = vetMapper.toVet(vetDto);\n        if(vet.getNrOfSpecialties() > 0){\n            List<Specialty> vetSpecialities = this.clinicService.findSpecialtiesByNameIn(vet.getSpecialties().stream().map(Specialty::getName).collect(Collectors.toSet()));\n            vet.setSpecialties(vetSpecialities);\n        }\n        this.clinicService.saveVet(vet);\n        headers.setLocation(UriComponentsBuilder.newInstance().path(""/api/vets/{id}"").buildAndExpand(vet.getId()).toUri());\n        return new ResponseEntity<>(vetMapper.toVetDto(vet), headers, HttpStatus.CREATED);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java","","VetRestController","updateVet","ResponseEntity<VetDto>","Integer vetId, VetDto vetDto","{\n        Vet currentVet = this.clinicService.findVetById(vetId);\n        if (currentVet == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        currentVet.setFirstName(vetDto.getFirstName());\n        currentVet.setLastName(vetDto.getLastName());\n        currentVet.clearSpecialties();\n        for (Specialty spec : specialtyMapper.toSpecialtys(vetDto.getSpecialties())) {\n            currentVet.addSpecialty(spec);\n        }\n        if(currentVet.getNrOfSpecialties() > 0){\n            List<Specialty> vetSpecialities = this.clinicService.findSpecialtiesByNameIn(currentVet.getSpecialties().stream().map(Specialty::getName).collect(Collectors.toSet()));\n            currentVet.setSpecialties(vetSpecialities);\n        }\n        this.clinicService.saveVet(currentVet);\n        return new ResponseEntity<>(vetMapper.toVetDto(currentVet), HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VetRestController.java","","VetRestController","deleteVet","ResponseEntity<VetDto>","Integer vetId","{\n        Vet vet = this.clinicService.findVetById(vetId);\n        if (vet == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        this.clinicService.deleteVet(vet);\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.VET_ADMIN)"") @Transactional @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java","","VisitRestController","listVisits","ResponseEntity<List<VisitDto>>","","{\n        List<Visit> visits = new ArrayList<>(this.clinicService.findAllVisits());\n        if (visits.isEmpty()) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(new ArrayList<>(visitMapper.toVisitsDto(visits)), HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java","","VisitRestController","getVisit","ResponseEntity<VisitDto>","Integer visitId","{\n        Visit visit = this.clinicService.findVisitById(visitId);\n        if (visit == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        return new ResponseEntity<>(visitMapper.toVisitDto(visit), HttpStatus.OK);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java","","VisitRestController","addVisit","ResponseEntity<VisitDto>","VisitDto visitDto","{\n        HttpHeaders headers = new HttpHeaders();\n        Visit visit = visitMapper.toVisit(visitDto);\n        this.clinicService.saveVisit(visit);\n        visitDto = visitMapper.toVisitDto(visit);\n        headers.setLocation(UriComponentsBuilder.newInstance().path(""/api/visits/{id}"").buildAndExpand(visit.getId()).toUri());\n        return new ResponseEntity<>(visitDto, headers, HttpStatus.CREATED);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java","","VisitRestController","updateVisit","ResponseEntity<VisitDto>","Integer visitId, VisitFieldsDto visitDto","{\n        Visit currentVisit = this.clinicService.findVisitById(visitId);\n        if (currentVisit == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        currentVisit.setDate(visitDto.getDate());\n        currentVisit.setDescription(visitDto.getDescription());\n        this.clinicService.saveVisit(currentVisit);\n        return new ResponseEntity<>(visitMapper.toVisitDto(currentVisit), HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\rest\controller\VisitRestController.java","","VisitRestController","deleteVisit","ResponseEntity<VisitDto>","Integer visitId","{\n        Visit visit = this.clinicService.findVisitById(visitId);\n        if (visit == null) {\n            return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n        }\n        this.clinicService.deleteVisit(visit);\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    }","","@PreAuthorize(""hasRole(@roles.OWNER_ADMIN)"") @Transactional @Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\security\BasicAuthenticationConfig.java","","BasicAuthenticationConfig","passwordEncoder","PasswordEncoder","","{\n        return new BCryptPasswordEncoder();\n    }","","@Bean public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\security\BasicAuthenticationConfig.java","","BasicAuthenticationConfig","filterChain","SecurityFilterChain","HttpSecurity http","{\n        // @formatter:off\n        http\n            .csrf(AbstractHttpConfigurer::disable)\n            .authorizeHttpRequests((authz) -> authz\n                .anyRequest().authenticated())\n                .httpBasic(Customizer.withDefaults());\n        // @formatter:on\n        return http.build();\n    }","throws Exception","@Bean public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\security\BasicAuthenticationConfig.java","","BasicAuthenticationConfig","configureGlobal","void","AuthenticationManagerBuilder auth","{\n        // @formatter:off\n        auth\n            .jdbcAuthentication()\n                .dataSource(dataSource)\n                .usersByUsernameQuery(""select username,password,enabled from users where username=?"")\n                .authoritiesByUsernameQuery(""select username,role from roles where username=?"");\n        // @formatter:on\n    }","throws Exception","@Autowired public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\security\DisableSecurityConfig.java","","DisableSecurityConfig","filterChain","SecurityFilterChain","HttpSecurity http","{\n        // @formatter:off\n        http\n            .csrf(AbstractHttpConfigurer::disable)\n            .authorizeHttpRequests((authz) -> authz\n               .anyRequest().permitAll()\n            );\n        // @formatter:on\n        return http.build();\n    }","throws Exception","@Bean public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findPetById","Pet","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findAllPets","Collection<Pet>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","savePet","void","Pet pet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","deletePet","void","Pet pet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findVisitsByPetId","Collection<Visit>","int petId","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findVisitById","Visit","int visitId","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findAllVisits","Collection<Visit>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","saveVisit","void","Visit visit","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","deleteVisit","void","Visit visit","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findVetById","Vet","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findVets","Collection<Vet>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findAllVets","Collection<Vet>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","saveVet","void","Vet vet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","deleteVet","void","Vet vet","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findOwnerById","Owner","int id","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findAllOwners","Collection<Owner>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","saveOwner","void","Owner owner","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","deleteOwner","void","Owner owner","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findOwnerByLastName","Collection<Owner>","String lastName","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findPetTypeById","PetType","int petTypeId","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findAllPetTypes","Collection<PetType>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findPetTypes","Collection<PetType>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","savePetType","void","PetType petType","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","deletePetType","void","PetType petType","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findSpecialtyById","Specialty","int specialtyId","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findAllSpecialties","Collection<Specialty>","","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","saveSpecialty","void","Specialty specialty","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","deleteSpecialty","void","Specialty specialty","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicService.java","","ClinicService","findSpecialtiesByNameIn","List<Specialty>","Set<String> names","","throws DataAccessException","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findAllPets","Collection<Pet>","","{\n        return petRepository.findAll();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","deletePet","void","Pet pet","{\n        petRepository.delete(pet);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findVisitById","Visit","int visitId","{\n        return findEntityById(() -> visitRepository.findById(visitId));\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findAllVisits","Collection<Visit>","","{\n        return visitRepository.findAll();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","deleteVisit","void","Visit visit","{\n        visitRepository.delete(visit);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findVetById","Vet","int id","{\n        return findEntityById(() -> vetRepository.findById(id));\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findAllVets","Collection<Vet>","","{\n        return vetRepository.findAll();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","saveVet","void","Vet vet","{\n        vetRepository.save(vet);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","deleteVet","void","Vet vet","{\n        vetRepository.delete(vet);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findAllOwners","Collection<Owner>","","{\n        return ownerRepository.findAll();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","deleteOwner","void","Owner owner","{\n        ownerRepository.delete(owner);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findPetTypeById","PetType","int petTypeId","{\n        return findEntityById(() -> petTypeRepository.findById(petTypeId));\n    }","","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findAllPetTypes","Collection<PetType>","","{\n        return petTypeRepository.findAll();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","savePetType","void","PetType petType","{\n        petTypeRepository.save(petType);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","deletePetType","void","PetType petType","{\n        petTypeRepository.delete(petType);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findSpecialtyById","Specialty","int specialtyId","{\n        return findEntityById(() -> specialtyRepository.findById(specialtyId));\n    }","","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findAllSpecialties","Collection<Specialty>","","{\n        return specialtyRepository.findAll();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","saveSpecialty","void","Specialty specialty","{\n        specialtyRepository.save(specialty);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","deleteSpecialty","void","Specialty specialty","{\n        specialtyRepository.delete(specialty);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findPetTypes","Collection<PetType>","","{\n        return petRepository.findPetTypes();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findOwnerById","Owner","int id","{\n        return findEntityById(() -> ownerRepository.findById(id));\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findPetById","Pet","int id","{\n        return findEntityById(() -> petRepository.findById(id));\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","savePet","void","Pet pet","{\n        pet.setType(findPetTypeById(pet.getType().getId()));\n        petRepository.save(pet);\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","saveVisit","void","Visit visit","{\n        visitRepository.save(visit);\n\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findVets","Collection<Vet>","","{\n        return vetRepository.findAll();\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","saveOwner","void","Owner owner","{\n        ownerRepository.save(owner);\n\n    }","throws DataAccessException","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findOwnerByLastName","Collection<Owner>","String lastName","{\n        return ownerRepository.findByLastName(lastName);\n    }","throws DataAccessException","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findVisitsByPetId","Collection<Visit>","int petId","{\n        return visitRepository.findByPetId(petId);\n    }","","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findSpecialtiesByNameIn","List<Specialty>","Set<String> names","{\n        return findEntityById(() -> specialtyRepository.findSpecialtiesByNameIn(names));\n    }","","@Override @Transactional(readOnly = true) public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\ClinicServiceImpl.java","","ClinicServiceImpl","findEntityById","T","Supplier<T> supplier","{\n        try {\n            return supplier.get();\n        } catch (ObjectRetrievalFailureException | EmptyResultDataAccessException e) {\n            // Just ignore not found exceptions for Jdbc/Jpa realization\n            return null;\n        }\n    }","","private","<T>"
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\UserService.java","","UserService","saveUser","void","User user","","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\service\UserServiceImpl.java","","UserServiceImpl","saveUser","void","User user","{\n\n        if(user.getRoles() == null || user.getRoles().isEmpty()) {\n            throw new IllegalArgumentException(""User must have at least a role set!"");\n        }\n\n        for (Role role : user.getRoles()) {\n            if(!role.getName().startsWith(""ROLE_"")) {\n                role.setName(""ROLE_"" + role.getName());\n            }\n\n            if(role.getUser() == null) {\n                role.setUser(user);\n            }\n        }\n\n        userRepository.save(user);\n    }","","@Override @Transactional public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\util\CallMonitoringAspect.java","","CallMonitoringAspect","isEnabled","boolean","","{\n        return enabled;\n    }","","@ManagedAttribute public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\util\CallMonitoringAspect.java","","CallMonitoringAspect","setEnabled","void","boolean enabled","{\n        this.enabled = enabled;\n    }","","@ManagedAttribute public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\util\CallMonitoringAspect.java","","CallMonitoringAspect","reset","void","","{\n        this.callCount = 0;\n        this.accumulatedCallTime = 0;\n    }","","@ManagedOperation public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\util\CallMonitoringAspect.java","","CallMonitoringAspect","getCallCount","int","","{\n        return callCount;\n    }","","@ManagedAttribute public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\util\CallMonitoringAspect.java","","CallMonitoringAspect","getCallTime","long","","{\n        if (this.callCount > 0)\n            return this.accumulatedCallTime / this.callCount;\n        else\n            return 0;\n    }","","@ManagedAttribute public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\util\CallMonitoringAspect.java","","CallMonitoringAspect","invoke","Object","ProceedingJoinPoint joinPoint","{\n        if (this.enabled) {\n            StopWatch sw = new StopWatch(joinPoint.toShortString());\n\n            sw.start(""invoke"");\n            try {\n                return joinPoint.proceed();\n            } finally {\n                sw.stop();\n                synchronized (this) {\n                    this.callCount++;\n                    this.accumulatedCallTime += sw.getTotalTimeMillis();\n                }\n            }\n        } else {\n            return joinPoint.proceed();\n        }\n    }","throws Throwable","@Around(""within(@org.springframework.stereotype.Repository *)"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\main\java\org\springframework\samples\petclinic\util\EntityUtils.java","","EntityUtils","getById","T","Collection<T> entities, Class<T> entityClass, int entityId","{\n        for (T entity : entities) {\n            if (entity.getId() == entityId && entityClass.isInstance(entity)) {\n                return entity;\n            }\n        }\n        throw new ObjectRetrievalFailureException(entityClass, entityId);\n    }","throws ObjectRetrievalFailureException","public static","<T extends BaseEntity>"
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\SpringConfigTests.java","","SpringConfigTests","contextLoads","void","","{\n        // Test the Spring configuration\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\model\ValidatorTests.java","","ValidatorTests","createValidator","Validator","","{\n        LocalValidatorFactoryBean localValidatorFactoryBean = new LocalValidatorFactoryBean();\n        localValidatorFactoryBean.afterPropertiesSet();\n        return localValidatorFactoryBean;\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\model\ValidatorTests.java","","ValidatorTests","shouldNotValidateWhenFirstNameEmpty","void","","{\n\n        LocaleContextHolder.setLocale(Locale.ENGLISH);\n        Person person = new Person();\n        person.setFirstName("""");\n        person.setLastName(""smith"");\n\n        Validator validator = createValidator();\n        Set<ConstraintViolation<Person>> constraintViolations = validator.validate(person);\n\n        assertThat(constraintViolations.size()).isEqualTo(1);\n        ConstraintViolation<Person> violation = constraintViolations.iterator().next();\n        assertThat(violation.getPropertyPath().toString()).isEqualTo(""firstName"");\n        assertThat(violation.getMessage()).isEqualTo(""must not be empty"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","initOwners","void","","{\n        this.mockMvc = MockMvcBuilders.standaloneSetup(ownerRestController)\n            .setControllerAdvice(new ExceptionControllerAdvice())\n            .build();\n        owners = new ArrayList<>();\n\n        OwnerDto ownerWithPet = new OwnerDto();\n        owners.add(ownerWithPet.id(1).firstName(""George"").lastName(""Franklin"").address(""110 W. Liberty St."").city(""Madison"").telephone(""6085551023"").addPetsItem(getTestPetWithIdAndName(ownerWithPet, 1, ""Rosy"")));\n        OwnerDto owner = new OwnerDto();\n        owners.add(owner.id(2).firstName(""Betty"").lastName(""Davis"").address(""638 Cardinal Ave."").city(""Sun Prairie"").telephone(""6085551749""));\n        owner = new OwnerDto();\n        owners.add(owner.id(3).firstName(""Eduardo"").lastName(""Rodriquez"").address(""2693 Commerce St."").city(""McFarland"").telephone(""6085558763""));\n        owner = new OwnerDto();\n        owners.add(owner.id(4).firstName(""Harold"").lastName(""Davis"").address(""563 Friendly St."").city(""Windsor"").telephone(""6085553198""));\n\n        PetTypeDto petType = new PetTypeDto();\n        petType.id(2)\n            .name(""dog"");\n\n        pets = new ArrayList<>();\n        PetDto pet = new PetDto();\n        pets.add(pet.id(3)\n            .name(""Rosy"")\n            .birthDate(LocalDate.now())\n            .type(petType));\n\n        pet = new PetDto();\n        pets.add(pet.id(4)\n            .name(""Jewel"")\n            .birthDate(LocalDate.now())\n            .type(petType));\n\n        visits = new ArrayList<>();\n        VisitDto visit = new VisitDto();\n        visit.setId(2);\n        visit.setPetId(pet.getId());\n        visit.setDate(LocalDate.now());\n        visit.setDescription(""rabies shot"");\n        visits.add(visit);\n\n        visit = new VisitDto();\n        visit.setId(3);\n        visit.setPetId(pet.getId());\n        visit.setDate(LocalDate.now());\n        visit.setDescription(""neutered"");\n        visits.add(visit);\n    }","","@BeforeEach",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","getTestPetWithIdAndName","PetDto","OwnerDto owner, int id, String name","{\n        PetTypeDto petType = new PetTypeDto();\n        PetDto pet = new PetDto();\n        pet.id(id).name(name).birthDate(LocalDate.now()).type(petType.id(2).name(""dog"")).addVisitsItem(getTestVisitForPet(pet, 1));\n        return pet;\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","getTestVisitForPet","VisitDto","PetDto pet, int id","{\n        VisitDto visit = new VisitDto();\n        return visit.id(id).date(LocalDate.now()).description(""test"" + id);\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetOwnerSuccess","void","","{\n        given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)));\n        this.mockMvc.perform(get(""/api/owners/1"")\n                .accept(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(1))\n            .andExpect(jsonPath(""$.firstName"").value(""George""));\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetOwnerNotFound","void","","{\n        given(this.clinicService.findOwnerById(2)).willReturn(null);\n        this.mockMvc.perform(get(""/api/owners/2"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetOwnersListSuccess","void","","{\n        owners.remove(0);\n        owners.remove(1);\n        given(this.clinicService.findOwnerByLastName(""Davis"")).willReturn(ownerMapper.toOwners(owners));\n        this.mockMvc.perform(get(""/api/owners?lastName=Davis"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.[0].id"").value(2))\n            .andExpect(jsonPath(""$.[0].firstName"").value(""Betty""))\n            .andExpect(jsonPath(""$.[1].id"").value(4))\n            .andExpect(jsonPath(""$.[1].firstName"").value(""Harold""));\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetOwnersListNotFound","void","","{\n        owners.clear();\n        given(this.clinicService.findOwnerByLastName(""0"")).willReturn(ownerMapper.toOwners(owners));\n        this.mockMvc.perform(get(""/api/owners?lastName=0"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetAllOwnersSuccess","void","","{\n        owners.remove(0);\n        owners.remove(1);\n        given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners));\n        this.mockMvc.perform(get(""/api/owners"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.[0].id"").value(2))\n            .andExpect(jsonPath(""$.[0].firstName"").value(""Betty""))\n            .andExpect(jsonPath(""$.[1].id"").value(4))\n            .andExpect(jsonPath(""$.[1].firstName"").value(""Harold""));\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetAllOwnersNotFound","void","","{\n        owners.clear();\n        given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners));\n        this.mockMvc.perform(get(""/api/owners"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testCreateOwnerSuccess","void","","{\n        OwnerDto newOwnerDto = owners.get(0);\n        newOwnerDto.setId(null);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newOwnerAsJSON = mapper.writeValueAsString(newOwnerDto);\n        this.mockMvc.perform(post(""/api/owners"")\n                .content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testCreateOwnerError","void","","{\n        OwnerDto newOwnerDto = owners.get(0);\n        newOwnerDto.setId(null);\n        newOwnerDto.setFirstName(null);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newOwnerAsJSON = mapper.writeValueAsString(newOwnerDto);\n        this.mockMvc.perform(post(""/api/owners"")\n                .content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isBadRequest());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testUpdateOwnerSuccess","void","","{\n        given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)));\n        int ownerId = owners.get(0).getId();\n        OwnerDto updatedOwnerDto = new OwnerDto();\n        // body.id = ownerId which is used in url path\n        updatedOwnerDto.setId(ownerId);\n        updatedOwnerDto.setFirstName(""GeorgeI"");\n        updatedOwnerDto.setLastName(""Franklin"");\n        updatedOwnerDto.setAddress(""110 W. Liberty St."");\n        updatedOwnerDto.setCity(""Madison"");\n        updatedOwnerDto.setTelephone(""6085551023"");\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newOwnerAsJSON = mapper.writeValueAsString(updatedOwnerDto);\n        this.mockMvc.perform(put(""/api/owners/"" + ownerId)\n                .content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(status().isNoContent());\n\n        this.mockMvc.perform(get(""/api/owners/"" + ownerId)\n                .accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(ownerId))\n            .andExpect(jsonPath(""$.firstName"").value(""GeorgeI""));\n\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testUpdateOwnerSuccessNoBodyId","void","","{\n        given(this.clinicService.findOwnerById(1)).willReturn(ownerMapper.toOwner(owners.get(0)));\n        int ownerId = owners.get(0).getId();\n        OwnerDto updatedOwnerDto = new OwnerDto();\n        updatedOwnerDto.setFirstName(""GeorgeI"");\n        updatedOwnerDto.setLastName(""Franklin"");\n        updatedOwnerDto.setAddress(""110 W. Liberty St."");\n        updatedOwnerDto.setCity(""Madison"");\n\n        updatedOwnerDto.setTelephone(""6085551023"");\n        ObjectMapper mapper = new ObjectMapper();\n        String newOwnerAsJSON = mapper.writeValueAsString(updatedOwnerDto);\n        this.mockMvc.perform(put(""/api/owners/"" + ownerId)\n                .content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(status().isNoContent());\n\n        this.mockMvc.perform(get(""/api/owners/"" + ownerId)\n                .accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(ownerId))\n            .andExpect(jsonPath(""$.firstName"").value(""GeorgeI""));\n\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testUpdateOwnerError","void","","{\n        OwnerDto newOwnerDto = owners.get(0);\n        newOwnerDto.setFirstName("""");\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newOwnerAsJSON = mapper.writeValueAsString(newOwnerDto);\n        this.mockMvc.perform(put(""/api/owners/1"")\n                .content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isBadRequest());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testDeleteOwnerSuccess","void","","{\n        OwnerDto newOwnerDto = owners.get(0);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newOwnerAsJSON = mapper.writeValueAsString(newOwnerDto);\n        final Owner owner = ownerMapper.toOwner(owners.get(0));\n        given(this.clinicService.findOwnerById(1)).willReturn(owner);\n        this.mockMvc.perform(delete(""/api/owners/1"")\n                .content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isNoContent());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testDeleteOwnerError","void","","{\n        OwnerDto newOwnerDto = owners.get(0);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newOwnerAsJSON = mapper.writeValueAsString(newOwnerDto);\n        given(this.clinicService.findOwnerById(999)).willReturn(null);\n        this.mockMvc.perform(delete(""/api/owners/999"")\n                .content(newOwnerAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testCreatePetSuccess","void","","{\n        PetDto newPet = pets.get(0);\n        newPet.setId(999);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd""));\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newPetAsJSON = mapper.writeValueAsString(newPet);\n        System.err.println(""--> newPetAsJSON="" + newPetAsJSON);\n        this.mockMvc.perform(post(""/api/owners/1/pets"")\n                .content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testCreatePetError","void","","{\n        PetDto newPet = pets.get(0);\n        newPet.setId(null);\n        newPet.setName(null);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd""));\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        mapper.registerModule(new JavaTimeModule());\n        String newPetAsJSON = mapper.writeValueAsString(newPet);\n        this.mockMvc.perform(post(""/api/owners/1/pets"")\n                .content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isBadRequest()).andDo(MockMvcResultHandlers.print());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testCreateVisitSuccess","void","","{\n        VisitDto newVisit = visits.get(0);\n        newVisit.setId(999);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newVisitAsJSON = mapper.writeValueAsString(visitMapper.toVisit(newVisit));\n        System.out.println(""newVisitAsJSON "" + newVisitAsJSON);\n        this.mockMvc.perform(post(""/api/owners/1/pets/1/visits"")\n                .content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetOwnerPetSuccess","void","","{\n        var owner = ownerMapper.toOwner(owners.get(0));\n        given(this.clinicService.findOwnerById(2)).willReturn(owner);\n        var pet = petMapper.toPet(pets.get(0));\n        pet.setOwner(owner);\n        given(this.clinicService.findPetById(1)).willReturn(pet);\n        this.mockMvc.perform(get(""/api/owners/2/pets/1"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""));\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetOwnersPetsWithOwnerNotFound","void","","{\n        owners.clear();\n        given(this.clinicService.findAllOwners()).willReturn(ownerMapper.toOwners(owners));\n        this.mockMvc.perform(get(""/api/owners/1/pets/1"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testGetOwnersPetsWithPetNotFound","void","","{\n        var owner1 = ownerMapper.toOwner(owners.get(0));\n        given(this.clinicService.findOwnerById(1)).willReturn(owner1);\n        this.mockMvc.perform(get(""/api/owners/1/pets/2"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testUpdateOwnersPetSuccess","void","","{\n        int ownerId = owners.get(0).getId();\n        int petId = pets.get(0).getId();\n        given(this.clinicService.findOwnerById(ownerId)).willReturn(ownerMapper.toOwner(owners.get(0)));\n        given(this.clinicService.findPetById(petId)).willReturn(petMapper.toPet(pets.get(0)));\n        PetDto updatedPetDto = pets.get(0);\n        updatedPetDto.setName(""Rex"");\n        updatedPetDto.setBirthDate(LocalDate.of(2020, 1, 15));\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd""));\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String updatedPetAsJSON = mapper.writeValueAsString(updatedPetDto);\n        this.mockMvc.perform(put(""/api/owners/"" + ownerId + ""/pets/"" + petId)\n                .content(updatedPetAsJSON)\n                .accept(MediaType.APPLICATION_JSON_VALUE)\n                .contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isNoContent());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testUpdateOwnersPetOwnerNotFound","void","","{\n        int ownerId = 0;\n        int petId = pets.get(0).getId();\n        given(this.clinicService.findOwnerById(ownerId)).willReturn(null);\n        PetDto petDto = pets.get(0);\n        petDto.setName(""Thor"");\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd""));\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String updatedPetAsJSON = mapper.writeValueAsString(petDto);\n        this.mockMvc.perform(put(""/api/owners/"" + ownerId + ""/pets/"" + petId)\n                .contentType(MediaType.APPLICATION_JSON)\n                .content(updatedPetAsJSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\OwnerRestControllerTests.java","","OwnerRestControllerTests","testUpdateOwnersPetPetNotFound","void","","{\n        int ownerId = owners.get(0).getId();\n        int petId = 0;\n        given(this.clinicService.findOwnerById(ownerId)).willReturn(ownerMapper.toOwner(owners.get(0)));\n        given(this.clinicService.findPetById(petId)).willReturn(null);\n        PetDto petDto = pets.get(0);\n        petDto.setName(""Ghost"");\n        petDto.setBirthDate(LocalDate.of(2020, 1, 1));\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd""));\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String updatedPetAsJSON = mapper.writeValueAsString(petDto);\n        this.mockMvc.perform(put(""/api/owners/"" + ownerId + ""/pets/"" + petId)\n                .contentType(MediaType.APPLICATION_JSON)\n                .content(updatedPetAsJSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","initPets","void","","{\n        this.mockMvc = MockMvcBuilders.standaloneSetup(petRestController)\n            .setControllerAdvice(new ExceptionControllerAdvice())\n            .build();\n        pets = new ArrayList<>();\n\n        OwnerDto owner = new OwnerDto();\n        owner.id(1).firstName(""Eduardo"")\n            .lastName(""Rodriquez"")\n            .address(""2693 Commerce St."")\n            .city(""McFarland"")\n            .telephone(""6085558763"");\n\n        PetTypeDto petType = new PetTypeDto();\n        petType.id(2)\n            .name(""dog"");\n\n        PetDto pet = new PetDto();\n        pets.add(pet.id(3)\n            .name(""Rosy"")\n            .birthDate(LocalDate.now())\n            .type(petType));\n\n        pet = new PetDto();\n        pets.add(pet.id(4)\n            .name(""Jewel"")\n            .birthDate(LocalDate.now())\n            .type(petType));\n    }","","@BeforeEach",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testGetPetSuccess","void","","{\n        given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)));\n        this.mockMvc.perform(get(""/api/pets/3"")\n                .accept(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(3))\n            .andExpect(jsonPath(""$.name"").value(""Rosy""));\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testGetPetNotFound","void","","{\n        given(petMapper.toPetDto(this.clinicService.findPetById(999))).willReturn(null);\n        this.mockMvc.perform(get(""/api/pets/999"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testGetAllPetsSuccess","void","","{\n        final Collection<Pet> pets = petMapper.toPets(this.pets);\n        System.err.println(pets);\n        when(this.clinicService.findAllPets()).thenReturn(pets);\n        //given(this.clinicService.findAllPets()).willReturn(petMapper.toPets(pets));\n        this.mockMvc.perform(get(""/api/pets"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.[0].id"").value(3))\n            .andExpect(jsonPath(""$.[0].name"").value(""Rosy""))\n            .andExpect(jsonPath(""$.[1].id"").value(4))\n            .andExpect(jsonPath(""$.[1].name"").value(""Jewel""));\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testGetAllPetsNotFound","void","","{\n        pets.clear();\n        given(this.clinicService.findAllPets()).willReturn(petMapper.toPets(pets));\n        this.mockMvc.perform(get(""/api/pets"")\n                .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testUpdatePetSuccess","void","","{\n        given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)));\n        PetDto newPet = pets.get(0);\n        newPet.setName(""Rosy I"");\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd""));\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n\n        String newPetAsJSON = mapper.writeValueAsString(newPet);\n        this.mockMvc.perform(put(""/api/pets/3"")\n                .content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(status().isNoContent());\n\n        this.mockMvc.perform(get(""/api/pets/3"")\n                .accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(3))\n            .andExpect(jsonPath(""$.name"").value(""Rosy I""));\n\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testUpdatePetError","void","","{\n        PetDto newPet = pets.get(0);\n        newPet.setName(null);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.setDateFormat(new SimpleDateFormat(""yyyy-MM-dd""));\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newPetAsJSON = mapper.writeValueAsString(newPet);\n\n        this.mockMvc.perform(put(""/api/pets/3"")\n                .content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isBadRequest());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testDeletePetSuccess","void","","{\n        PetDto newPet = pets.get(0);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newPetAsJSON = mapper.writeValueAsString(newPet);\n        given(this.clinicService.findPetById(3)).willReturn(petMapper.toPet(pets.get(0)));\n        this.mockMvc.perform(delete(""/api/pets/3"")\n                .content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isNoContent());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetRestControllerTests.java","","PetRestControllerTests","testDeletePetError","void","","{\n        PetDto newPet = pets.get(0);\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newPetAsJSON = mapper.writeValueAsString(newPet);\n        given(this.clinicService.findPetById(999)).willReturn(null);\n        this.mockMvc.perform(delete(""/api/pets/999"")\n                .content(newPetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles = ""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","initPetTypes","void","","{\n    	this.mockMvc = MockMvcBuilders.standaloneSetup(petTypeRestController)\n    			.setControllerAdvice(new ExceptionControllerAdvice())\n    			.build();\n    	petTypes = new ArrayList<>();\n\n    	PetType petType = new PetType();\n    	petType.setId(1);\n    	petType.setName(""cat"");\n    	petTypes.add(petType);\n\n    	petType = new PetType();\n    	petType.setId(2);\n    	petType.setName(""dog"");\n    	petTypes.add(petType);\n\n    	petType = new PetType();\n    	petType.setId(3);\n    	petType.setName(""lizard"");\n    	petTypes.add(petType);\n\n    	petType = new PetType();\n    	petType.setId(4);\n    	petType.setName(""snake"");\n    	petTypes.add(petType);\n    }","","@BeforeEach",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testGetPetTypeSuccessAsOwnerAdmin","void","","{\n    	given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0));\n        this.mockMvc.perform(get(""/api/pettypes/1"")\n        	.accept(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(1))\n            .andExpect(jsonPath(""$.name"").value(""cat""));\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testGetPetTypeSuccessAsVetAdmin","void","","{\n        given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0));\n        this.mockMvc.perform(get(""/api/pettypes/1"")\n            .accept(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(1))\n            .andExpect(jsonPath(""$.name"").value(""cat""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testGetPetTypeNotFound","void","","{\n    	given(this.clinicService.findPetTypeById(999)).willReturn(null);\n        this.mockMvc.perform(get(""/api/pettypes/999"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testGetAllPetTypesSuccessAsOwnerAdmin","void","","{\n    	petTypes.remove(0);\n    	petTypes.remove(1);\n    	given(this.clinicService.findAllPetTypes()).willReturn(petTypes);\n        this.mockMvc.perform(get(""/api/pettypes"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n        	.andExpect(jsonPath(""$.[0].id"").value(2))\n        	.andExpect(jsonPath(""$.[0].name"").value(""dog""))\n        	.andExpect(jsonPath(""$.[1].id"").value(4))\n        	.andExpect(jsonPath(""$.[1].name"").value(""snake""));\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testGetAllPetTypesSuccessAsVetAdmin","void","","{\n        petTypes.remove(0);\n        petTypes.remove(1);\n        given(this.clinicService.findAllPetTypes()).willReturn(petTypes);\n        this.mockMvc.perform(get(""/api/pettypes"")\n            .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.[0].id"").value(2))\n            .andExpect(jsonPath(""$.[0].name"").value(""dog""))\n            .andExpect(jsonPath(""$.[1].id"").value(4))\n            .andExpect(jsonPath(""$.[1].name"").value(""snake""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testGetAllPetTypesNotFound","void","","{\n    	petTypes.clear();\n    	given(this.clinicService.findAllPetTypes()).willReturn(petTypes);\n        this.mockMvc.perform(get(""/api/pettypes"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testCreatePetTypeSuccess","void","","{\n    	PetType newPetType = petTypes.get(0);\n    	newPetType.setId(null);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newPetTypeAsJSON = mapper.writeValueAsString(petTypeMapper.toPetTypeFieldsDto(newPetType));\n    	this.mockMvc.perform(post(""/api/pettypes"")\n    		.content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n    		.andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testCreatePetTypeError","void","","{\n    	PetType newPetType = petTypes.get(0);\n    	newPetType.setId(null);\n    	newPetType.setName(null);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newPetTypeAsJSON = mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType));\n    	this.mockMvc.perform(post(""/api/pettypes"")\n        		.content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        		.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testUpdatePetTypeSuccess","void","","{\n    	given(this.clinicService.findPetTypeById(2)).willReturn(petTypes.get(1));\n    	PetType newPetType = petTypes.get(1);\n    	newPetType.setName(""dog I"");\n    	ObjectMapper mapper = new ObjectMapper();\n        String newPetTypeAsJSON = mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType));\n    	this.mockMvc.perform(put(""/api/pettypes/2"")\n    		.content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(content().contentType(""application/json""))\n        	.andExpect(status().isNoContent());\n\n    	this.mockMvc.perform(get(""/api/pettypes/2"")\n           	.accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(2))\n            .andExpect(jsonPath(""$.name"").value(""dog I""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testUpdatePetTypeError","void","","{\n    	PetType newPetType = petTypes.get(0);\n    	newPetType.setName("""");\n    	ObjectMapper mapper = new ObjectMapper();\n        String newPetTypeAsJSON = mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType));\n    	this.mockMvc.perform(put(""/api/pettypes/1"")\n    		.content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testDeletePetTypeSuccess","void","","{\n    	PetType newPetType = petTypes.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n    	String newPetTypeAsJSON = mapper.writeValueAsString(newPetType);\n    	given(this.clinicService.findPetTypeById(1)).willReturn(petTypes.get(0));\n    	this.mockMvc.perform(delete(""/api/pettypes/1"")\n    		.content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNoContent());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\PetTypeRestControllerTests.java","","PetTypeRestControllerTests","testDeletePetTypeError","void","","{\n    	PetType newPetType = petTypes.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newPetTypeAsJSON = mapper.writeValueAsString(petTypeMapper.toPetTypeDto(newPetType));\n    	given(this.clinicService.findPetTypeById(999)).willReturn(null);\n    	this.mockMvc.perform(delete(""/api/pettypes/999"")\n    		.content(newPetTypeAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","initSpecialtys","void","","{\n    	this.mockMvc = MockMvcBuilders.standaloneSetup(specialtyRestController)\n    			.setControllerAdvice(new ExceptionControllerAdvice())\n    			.build();\n    	specialties = new ArrayList<Specialty>();\n\n    	Specialty specialty = new Specialty();\n    	specialty.setId(1);\n    	specialty.setName(""radiology"");\n    	specialties.add(specialty);\n\n    	specialty = new Specialty();\n    	specialty.setId(2);\n    	specialty.setName(""surgery"");\n    	specialties.add(specialty);\n\n    	specialty = new Specialty();\n    	specialty.setId(3);\n    	specialty.setName(""dentistry"");\n    	specialties.add(specialty);\n\n    }","","@BeforeEach",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testGetSpecialtySuccess","void","","{\n    	given(this.clinicService.findSpecialtyById(1)).willReturn(specialties.get(0));\n        this.mockMvc.perform(get(""/api/specialties/1"")\n        	.accept(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(1))\n            .andExpect(jsonPath(""$.name"").value(""radiology""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testGetSpecialtyNotFound","void","","{\n    	given(this.clinicService.findSpecialtyById(999)).willReturn(null);\n        this.mockMvc.perform(get(""/api/specialties/999"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testGetAllSpecialtysSuccess","void","","{\n    	specialties.remove(0);\n    	given(this.clinicService.findAllSpecialties()).willReturn(specialties);\n        this.mockMvc.perform(get(""/api/specialties"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n        	.andExpect(jsonPath(""$.[0].id"").value(2))\n        	.andExpect(jsonPath(""$.[0].name"").value(""surgery""))\n        	.andExpect(jsonPath(""$.[1].id"").value(3))\n        	.andExpect(jsonPath(""$.[1].name"").value(""dentistry""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testGetAllSpecialtysNotFound","void","","{\n    	specialties.clear();\n    	given(this.clinicService.findAllSpecialties()).willReturn(specialties);\n        this.mockMvc.perform(get(""/api/specialties"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testCreateSpecialtySuccess","void","","{\n    	Specialty newSpecialty = specialties.get(0);\n    	newSpecialty.setId(999);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newSpecialtyAsJSON = mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty));\n    	this.mockMvc.perform(post(""/api/specialties"")\n    		.content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n    		.andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testCreateSpecialtyError","void","","{\n    	Specialty newSpecialty = specialties.get(0);\n    	newSpecialty.setId(null);\n    	newSpecialty.setName(null);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newSpecialtyAsJSON = mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty));\n    	this.mockMvc.perform(post(""/api/specialties"")\n        		.content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        		.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testUpdateSpecialtySuccess","void","","{\n    	given(this.clinicService.findSpecialtyById(2)).willReturn(specialties.get(1));\n    	Specialty newSpecialty = specialties.get(1);\n    	newSpecialty.setName(""surgery I"");\n    	ObjectMapper mapper = new ObjectMapper();\n        String newSpecialtyAsJSON = mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty));\n    	this.mockMvc.perform(put(""/api/specialties/2"")\n    		.content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(content().contentType(""application/json""))\n        	.andExpect(status().isNoContent());\n\n    	this.mockMvc.perform(get(""/api/specialties/2"")\n           	.accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(2))\n            .andExpect(jsonPath(""$.name"").value(""surgery I""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testUpdateSpecialtyError","void","","{\n    	Specialty newSpecialty = specialties.get(0);\n    	newSpecialty.setName("""");\n    	ObjectMapper mapper = new ObjectMapper();\n        String newSpecialtyAsJSON = mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty));\n    	this.mockMvc.perform(put(""/api/specialties/1"")\n    		.content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testDeleteSpecialtySuccess","void","","{\n    	Specialty newSpecialty = specialties.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newSpecialtyAsJSON = mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty));\n    	given(this.clinicService.findSpecialtyById(1)).willReturn(specialties.get(0));\n    	this.mockMvc.perform(delete(""/api/specialties/1"")\n    		.content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNoContent());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\SpecialtyRestControllerTests.java","","SpecialtyRestControllerTests","testDeleteSpecialtyError","void","","{\n    	Specialty newSpecialty = specialties.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newSpecialtyAsJSON = mapper.writeValueAsString(specialtyMapper.toSpecialtyDto(newSpecialty));\n    	given(this.clinicService.findSpecialtyById(999)).willReturn(null);\n    	this.mockMvc.perform(delete(""/api/specialties/999"")\n    		.content(newSpecialtyAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\UserRestControllerTests.java","","UserRestControllerTests","initVets","void","","{\n        this.mockMvc = MockMvcBuilders.standaloneSetup(userRestController)\n            .setControllerAdvice(new ExceptionControllerAdvice()).build();\n    }","","@BeforeEach",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\UserRestControllerTests.java","","UserRestControllerTests","testCreateUserSuccess","void","","{\n        User user = new User();\n        user.setUsername(""username"");\n        user.setPassword(""password"");\n        user.setEnabled(true);\n        user.addRole(""OWNER_ADMIN"");\n        ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(userMapper.toUserDto(user));\n        this.mockMvc.perform(post(""/api/users"")\n            .content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles = ""ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\UserRestControllerTests.java","","UserRestControllerTests","testCreateUserError","void","","{\n        User user = new User();\n        user.setUsername(""""); // set empty username to force 400 error\n        user.setPassword(""password"");\n        user.setEnabled(true);\n        ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(userMapper.toUserDto(user));\n        this.mockMvc.perform(post(""/api/users"")\n            .content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isBadRequest());\n    }","throws Exception","@Test @WithMockUser(roles = ""ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","initVets","void","","{\n    	this.mockMvc = MockMvcBuilders.standaloneSetup(vetRestController)\n    			.setControllerAdvice(new ExceptionControllerAdvice())\n    			.build();\n    	vets = new ArrayList<Vet>();\n\n\n    	Vet vet = new Vet();\n    	vet.setId(1);\n    	vet.setFirstName(""James"");\n    	vet.setLastName(""Carter"");\n    	vets.add(vet);\n\n    	vet = new Vet();\n    	vet.setId(2);\n    	vet.setFirstName(""Helen"");\n    	vet.setLastName(""Leary"");\n    	vets.add(vet);\n\n    	vet = new Vet();\n    	vet.setId(3);\n    	vet.setFirstName(""Linda"");\n    	vet.setLastName(""Douglas"");\n    	vets.add(vet);\n    }","","@BeforeEach",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testGetVetSuccess","void","","{\n    	given(this.clinicService.findVetById(1)).willReturn(vets.get(0));\n        this.mockMvc.perform(get(""/api/vets/1"")\n        	.accept(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(1))\n            .andExpect(jsonPath(""$.firstName"").value(""James""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testGetVetNotFound","void","","{\n    	given(this.clinicService.findVetById(999)).willReturn(null);\n        this.mockMvc.perform(get(""/api/vets/999"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testGetAllVetsSuccess","void","","{\n    	given(this.clinicService.findAllVets()).willReturn(vets);\n        this.mockMvc.perform(get(""/api/vets"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.[0].id"").value(1))\n            .andExpect(jsonPath(""$.[0].firstName"").value(""James""))\n            .andExpect(jsonPath(""$.[1].id"").value(2))\n            .andExpect(jsonPath(""$.[1].firstName"").value(""Helen""));\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testGetAllVetsNotFound","void","","{\n    	vets.clear();\n    	given(this.clinicService.findAllVets()).willReturn(vets);\n        this.mockMvc.perform(get(""/api/vets"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testCreateVetSuccess","void","","{\n    	Vet newVet = vets.get(0);\n    	newVet.setId(999);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(vetMapper.toVetDto(newVet));\n    	this.mockMvc.perform(post(""/api/vets"")\n    		.content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n    		.andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testCreateVetError","void","","{\n    	Vet newVet = vets.get(0);\n    	newVet.setId(null);\n    	newVet.setFirstName(null);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(vetMapper.toVetDto(newVet));\n    	this.mockMvc.perform(post(""/api/vets"")\n        		.content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        		.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testUpdateVetSuccess","void","","{\n    	given(this.clinicService.findVetById(1)).willReturn(vets.get(0));\n    	Vet newVet = vets.get(0);\n    	newVet.setFirstName(""James"");\n    	ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(vetMapper.toVetDto(newVet));\n    	this.mockMvc.perform(put(""/api/vets/1"")\n    		.content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(content().contentType(""application/json""))\n        	.andExpect(status().isNoContent());\n\n    	this.mockMvc.perform(get(""/api/vets/1"")\n           	.accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(1))\n            .andExpect(jsonPath(""$.firstName"").value(""James""));\n\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testUpdateVetError","void","","{\n    	Vet newVet = vets.get(0);\n    	newVet.setFirstName(null);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(vetMapper.toVetDto(newVet));\n    	this.mockMvc.perform(put(""/api/vets/1"")\n    		.content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testDeleteVetSuccess","void","","{\n    	Vet newVet = vets.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(vetMapper.toVetDto(newVet));\n    	given(this.clinicService.findVetById(1)).willReturn(vets.get(0));\n    	this.mockMvc.perform(delete(""/api/vets/1"")\n    		.content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNoContent());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VetRestControllerTests.java","","VetRestControllerTests","testDeleteVetError","void","","{\n    	Vet newVet = vets.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n        String newVetAsJSON = mapper.writeValueAsString(vetMapper.toVetDto(newVet));\n    	given(this.clinicService.findVetById(999)).willReturn(null);\n    	this.mockMvc.perform(delete(""/api/vets/999"")\n    		.content(newVetAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""VET_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","initVisits","void","","{\n    	this.mockMvc = MockMvcBuilders.standaloneSetup(visitRestController)\n    			.setControllerAdvice(new ExceptionControllerAdvice())\n    			.build();\n\n        visits = new ArrayList<>();\n\n    	Owner owner = new Owner();\n    	owner.setId(1);\n    	owner.setFirstName(""Eduardo"");\n    	owner.setLastName(""Rodriquez"");\n    	owner.setAddress(""2693 Commerce St."");\n    	owner.setCity(""McFarland"");\n    	owner.setTelephone(""6085558763"");\n\n    	PetType petType = new PetType();\n    	petType.setId(2);\n    	petType.setName(""dog"");\n\n    	Pet pet = new Pet();\n    	pet.setId(8);\n    	pet.setName(""Rosy"");\n        pet.setBirthDate(LocalDate.now());\n    	pet.setOwner(owner);\n    	pet.setType(petType);\n\n\n    	Visit visit = new Visit();\n    	visit.setId(2);\n    	visit.setPet(pet);\n        visit.setDate(LocalDate.now());\n    	visit.setDescription(""rabies shot"");\n    	visits.add(visit);\n\n    	visit = new Visit();\n    	visit.setId(3);\n    	visit.setPet(pet);\n        visit.setDate(LocalDate.now());\n    	visit.setDescription(""neutered"");\n    	visits.add(visit);\n\n\n    }","","@BeforeEach",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testGetVisitSuccess","void","","{\n    	given(this.clinicService.findVisitById(2)).willReturn(visits.get(0));\n        this.mockMvc.perform(get(""/api/visits/2"")\n        	.accept(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(2))\n            .andExpect(jsonPath(""$.description"").value(""rabies shot""));\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testGetVisitNotFound","void","","{\n        given(this.clinicService.findVisitById(999)).willReturn(null);\n        this.mockMvc.perform(get(""/api/visits/999"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testGetAllVisitsSuccess","void","","{\n    	given(this.clinicService.findAllVisits()).willReturn(visits);\n        this.mockMvc.perform(get(""/api/visits"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n        	.andExpect(jsonPath(""$.[0].id"").value(2))\n        	.andExpect(jsonPath(""$.[0].description"").value(""rabies shot""))\n        	.andExpect(jsonPath(""$.[1].id"").value(3))\n        	.andExpect(jsonPath(""$.[1].description"").value(""neutered""));\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testGetAllVisitsNotFound","void","","{\n    	visits.clear();\n    	given(this.clinicService.findAllVisits()).willReturn(visits);\n        this.mockMvc.perform(get(""/api/visits"")\n        	.accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testCreateVisitSuccess","void","","{\n    	Visit newVisit = visits.get(0);\n    	newVisit.setId(999);\n    	ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newVisitAsJSON = mapper.writeValueAsString(visitMapper.toVisitDto(newVisit));\n    	System.out.println(""newVisitAsJSON "" + newVisitAsJSON);\n    	this.mockMvc.perform(post(""/api/visits"")\n    		.content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n    		.andExpect(status().isCreated());\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testCreateVisitError","void","","{\n    	Visit newVisit = visits.get(0);\n    	newVisit.setId(null);\n        newVisit.setDescription(null);\n    	ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newVisitAsJSON = mapper.writeValueAsString(visitMapper.toVisitDto(newVisit));\n    	this.mockMvc.perform(post(""/api/visits"")\n        		.content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        		.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testUpdateVisitSuccess","void","","{\n    	given(this.clinicService.findVisitById(2)).willReturn(visits.get(0));\n    	Visit newVisit = visits.get(0);\n    	newVisit.setDescription(""rabies shot test"");\n    	ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n        String newVisitAsJSON = mapper.writeValueAsString(visitMapper.toVisitDto(newVisit));\n    	this.mockMvc.perform(put(""/api/visits/2"")\n    		.content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(content().contentType(""application/json""))\n        	.andExpect(status().isNoContent());\n\n    	this.mockMvc.perform(get(""/api/visits/2"")\n           	.accept(MediaType.APPLICATION_JSON).contentType(MediaType.APPLICATION_JSON_VALUE))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(""application/json""))\n            .andExpect(jsonPath(""$.id"").value(2))\n            .andExpect(jsonPath(""$.description"").value(""rabies shot test""));\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testUpdateVisitError","void","","{\n    	Visit newVisit = visits.get(0);\n        newVisit.setDescription(null);\n    	ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newVisitAsJSON = mapper.writeValueAsString(visitMapper.toVisitDto(newVisit));\n    	this.mockMvc.perform(put(""/api/visits/2"")\n    		.content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isBadRequest());\n     }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testDeleteVisitSuccess","void","","{\n    	Visit newVisit = visits.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newVisitAsJSON = mapper.writeValueAsString(visitMapper.toVisitDto(newVisit));\n    	given(this.clinicService.findVisitById(2)).willReturn(visits.get(0));\n    	this.mockMvc.perform(delete(""/api/visits/2"")\n    		.content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNoContent());\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\rest\controller\VisitRestControllerTests.java","","VisitRestControllerTests","testDeleteVisitError","void","","{\n    	Visit newVisit = visits.get(0);\n    	ObjectMapper mapper = new ObjectMapper();\n        mapper.registerModule(new JavaTimeModule());\n        String newVisitAsJSON = mapper.writeValueAsString(visitMapper.toVisitDto(newVisit));\n        given(this.clinicService.findVisitById(999)).willReturn(null);\n        this.mockMvc.perform(delete(""/api/visits/999"")\n    		.content(newVisitAsJSON).accept(MediaType.APPLICATION_JSON_VALUE).contentType(MediaType.APPLICATION_JSON_VALUE))\n        	.andExpect(status().isNotFound());\n    }","throws Exception","@Test @WithMockUser(roles=""OWNER_ADMIN"")",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindOwnersByLastName","void","","{\n        Collection<Owner> owners = this.clinicService.findOwnerByLastName(""Davis"");\n        assertThat(owners.size()).isEqualTo(2);\n\n        owners = this.clinicService.findOwnerByLastName(""Daviss"");\n        assertThat(owners.isEmpty()).isTrue();\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindSingleOwnerWithPet","void","","{\n        Owner owner = this.clinicService.findOwnerById(1);\n        assertThat(owner.getLastName()).startsWith(""Franklin"");\n        assertThat(owner.getPets().size()).isEqualTo(1);\n        assertThat(owner.getPets().get(0).getType()).isNotNull();\n        assertThat(owner.getPets().get(0).getType().getName()).isEqualTo(""cat"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldInsertOwner","void","","{\n        Collection<Owner> owners = this.clinicService.findOwnerByLastName(""Schultz"");\n        int found = owners.size();\n\n        Owner owner = new Owner();\n        owner.setFirstName(""Sam"");\n        owner.setLastName(""Schultz"");\n        owner.setAddress(""4, Evans Street"");\n        owner.setCity(""Wollongong"");\n        owner.setTelephone(""4444444444"");\n        this.clinicService.saveOwner(owner);\n        assertThat(owner.getId().longValue()).isNotEqualTo(0);\n        assertThat(owner.getPet(""null value"")).isNull();\n        owners = this.clinicService.findOwnerByLastName(""Schultz"");\n        assertThat(owners.size()).isEqualTo(found + 1);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldUpdateOwner","void","","{\n        Owner owner = this.clinicService.findOwnerById(1);\n        String oldLastName = owner.getLastName();\n        String newLastName = oldLastName + ""X"";\n\n        owner.setLastName(newLastName);\n        this.clinicService.saveOwner(owner);\n\n        // retrieving new name from database\n        owner = this.clinicService.findOwnerById(1);\n        assertThat(owner.getLastName()).isEqualTo(newLastName);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindPetWithCorrectId","void","","{\n        Pet pet7 = this.clinicService.findPetById(7);\n        assertThat(pet7.getName()).startsWith(""Samantha"");\n        assertThat(pet7.getOwner().getFirstName()).isEqualTo(""Jean"");\n\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldInsertPetIntoDatabaseAndGenerateId","void","","{\n        Owner owner6 = this.clinicService.findOwnerById(6);\n        int found = owner6.getPets().size();\n\n        Pet pet = new Pet();\n        pet.setName(""bowser"");\n        Collection<PetType> types = this.clinicService.findPetTypes();\n        pet.setType(EntityUtils.getById(types, PetType.class, 2));\n        pet.setBirthDate(LocalDate.now());\n        owner6.addPet(pet);\n        assertThat(owner6.getPets().size()).isEqualTo(found + 1);\n\n        this.clinicService.savePet(pet);\n        this.clinicService.saveOwner(owner6);\n\n        owner6 = this.clinicService.findOwnerById(6);\n        assertThat(owner6.getPets().size()).isEqualTo(found + 1);\n        // checks that id has been generated\n        assertThat(pet.getId()).isNotNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldUpdatePetName","void","","{\n        Pet pet7 = this.clinicService.findPetById(7);\n        String oldName = pet7.getName();\n\n        String newName = oldName + ""X"";\n        pet7.setName(newName);\n        this.clinicService.savePet(pet7);\n\n        pet7 = this.clinicService.findPetById(7);\n        assertThat(pet7.getName()).isEqualTo(newName);\n    }","throws Exception","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindVets","void","","{\n        Collection<Vet> vets = this.clinicService.findVets();\n\n        Vet vet = EntityUtils.getById(vets, Vet.class, 3);\n        assertThat(vet.getLastName()).isEqualTo(""Douglas"");\n        assertThat(vet.getNrOfSpecialties()).isEqualTo(2);\n        assertThat(vet.getSpecialties().get(0).getName()).isEqualTo(""dentistry"");\n        assertThat(vet.getSpecialties().get(1).getName()).isEqualTo(""surgery"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldAddNewVisitForPet","void","","{\n        Pet pet7 = this.clinicService.findPetById(7);\n        int found = pet7.getVisits().size();\n        Visit visit = new Visit();\n        pet7.addVisit(visit);\n        visit.setDescription(""test"");\n        this.clinicService.saveVisit(visit);\n        this.clinicService.savePet(pet7);\n\n        pet7 = this.clinicService.findPetById(7);\n        assertThat(pet7.getVisits().size()).isEqualTo(found + 1);\n        assertThat(visit.getId()).isNotNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindVisitsByPetId","void","","{\n        Collection<Visit> visits = this.clinicService.findVisitsByPetId(7);\n        assertThat(visits.size()).isEqualTo(2);\n        Visit[] visitArr = visits.toArray(new Visit[visits.size()]);\n        assertThat(visitArr[0].getPet()).isNotNull();\n        assertThat(visitArr[0].getDate()).isNotNull();\n        assertThat(visitArr[0].getPet().getId()).isEqualTo(7);\n    }","throws Exception","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindAllPets","void","","{\n        Collection<Pet> pets = this.clinicService.findAllPets();\n        Pet pet1 = EntityUtils.getById(pets, Pet.class, 1);\n        assertThat(pet1.getName()).isEqualTo(""Leo"");\n        Pet pet3 = EntityUtils.getById(pets, Pet.class, 3);\n        assertThat(pet3.getName()).isEqualTo(""Rosy"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldDeletePet","void","","{\n        Pet pet = this.clinicService.findPetById(1);\n        this.clinicService.deletePet(pet);\n        try {\n            pet = this.clinicService.findPetById(1);\n		} catch (Exception e) {\n			pet = null;\n		}\n        assertThat(pet).isNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindVisitDyId","void","","{\n    	Visit visit = this.clinicService.findVisitById(1);\n    	assertThat(visit.getId()).isEqualTo(1);\n    	assertThat(visit.getPet().getName()).isEqualTo(""Samantha"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindAllVisits","void","","{\n        Collection<Visit> visits = this.clinicService.findAllVisits();\n        Visit visit1 = EntityUtils.getById(visits, Visit.class, 1);\n        assertThat(visit1.getPet().getName()).isEqualTo(""Samantha"");\n        Visit visit3 = EntityUtils.getById(visits, Visit.class, 3);\n        assertThat(visit3.getPet().getName()).isEqualTo(""Max"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldInsertVisit","void","","{\n        Collection<Visit> visits = this.clinicService.findAllVisits();\n        int found = visits.size();\n\n        Pet pet = this.clinicService.findPetById(1);\n\n        Visit visit = new Visit();\n        visit.setPet(pet);\n        visit.setDate(LocalDate.now());\n        visit.setDescription(""new visit"");\n\n\n        this.clinicService.saveVisit(visit);\n        assertThat(visit.getId().longValue()).isNotEqualTo(0);\n\n        visits = this.clinicService.findAllVisits();\n        assertThat(visits.size()).isEqualTo(found + 1);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldUpdateVisit","void","","{\n    	Visit visit = this.clinicService.findVisitById(1);\n    	String oldDesc = visit.getDescription();\n        String newDesc = oldDesc + ""X"";\n        visit.setDescription(newDesc);\n        this.clinicService.saveVisit(visit);\n        visit = this.clinicService.findVisitById(1);\n        assertThat(visit.getDescription()).isEqualTo(newDesc);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldDeleteVisit","void","","{\n    	Visit visit = this.clinicService.findVisitById(1);\n        this.clinicService.deleteVisit(visit);\n        try {\n        	visit = this.clinicService.findVisitById(1);\n		} catch (Exception e) {\n			visit = null;\n		}\n        assertThat(visit).isNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindVetDyId","void","","{\n    	Vet vet = this.clinicService.findVetById(1);\n    	assertThat(vet.getFirstName()).isEqualTo(""James"");\n    	assertThat(vet.getLastName()).isEqualTo(""Carter"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldInsertVet","void","","{\n        Collection<Vet> vets = this.clinicService.findAllVets();\n        int found = vets.size();\n\n        Vet vet = new Vet();\n        vet.setFirstName(""John"");\n        vet.setLastName(""Dow"");\n\n        this.clinicService.saveVet(vet);\n        assertThat(vet.getId().longValue()).isNotEqualTo(0);\n\n        vets = this.clinicService.findAllVets();\n        assertThat(vets.size()).isEqualTo(found + 1);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldUpdateVet","void","","{\n    	Vet vet = this.clinicService.findVetById(1);\n    	String oldLastName = vet.getLastName();\n        String newLastName = oldLastName + ""X"";\n        vet.setLastName(newLastName);\n        this.clinicService.saveVet(vet);\n        vet = this.clinicService.findVetById(1);\n        assertThat(vet.getLastName()).isEqualTo(newLastName);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldDeleteVet","void","","{\n    	Vet vet = this.clinicService.findVetById(1);\n        this.clinicService.deleteVet(vet);\n        try {\n        	vet = this.clinicService.findVetById(1);\n		} catch (Exception e) {\n			vet = null;\n		}\n        assertThat(vet).isNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindAllOwners","void","","{\n        Collection<Owner> owners = this.clinicService.findAllOwners();\n        Owner owner1 = EntityUtils.getById(owners, Owner.class, 1);\n        assertThat(owner1.getFirstName()).isEqualTo(""George"");\n        Owner owner3 = EntityUtils.getById(owners, Owner.class, 3);\n        assertThat(owner3.getFirstName()).isEqualTo(""Eduardo"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldDeleteOwner","void","","{\n    	Owner owner = this.clinicService.findOwnerById(1);\n        this.clinicService.deleteOwner(owner);\n        try {\n        	owner = this.clinicService.findOwnerById(1);\n		} catch (Exception e) {\n			owner = null;\n		}\n        assertThat(owner).isNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindPetTypeById","void","","{\n    	PetType petType = this.clinicService.findPetTypeById(1);\n    	assertThat(petType.getName()).isEqualTo(""cat"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindAllPetTypes","void","","{\n        Collection<PetType> petTypes = this.clinicService.findAllPetTypes();\n        PetType petType1 = EntityUtils.getById(petTypes, PetType.class, 1);\n        assertThat(petType1.getName()).isEqualTo(""cat"");\n        PetType petType3 = EntityUtils.getById(petTypes, PetType.class, 3);\n        assertThat(petType3.getName()).isEqualTo(""lizard"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldInsertPetType","void","","{\n        Collection<PetType> petTypes = this.clinicService.findAllPetTypes();\n        int found = petTypes.size();\n\n        PetType petType = new PetType();\n        petType.setName(""tiger"");\n\n        this.clinicService.savePetType(petType);\n        assertThat(petType.getId().longValue()).isNotEqualTo(0);\n\n        petTypes = this.clinicService.findAllPetTypes();\n        assertThat(petTypes.size()).isEqualTo(found + 1);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldUpdatePetType","void","","{\n    	PetType petType = this.clinicService.findPetTypeById(1);\n    	String oldLastName = petType.getName();\n        String newLastName = oldLastName + ""X"";\n        petType.setName(newLastName);\n        this.clinicService.savePetType(petType);\n        petType = this.clinicService.findPetTypeById(1);\n        assertThat(petType.getName()).isEqualTo(newLastName);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldDeletePetType","void","","{\n    	PetType petType = this.clinicService.findPetTypeById(1);\n        this.clinicService.deletePetType(petType);\n        clearCache();\n        try {\n        	petType = this.clinicService.findPetTypeById(1);\n		} catch (Exception e) {\n			petType = null;\n		}\n        assertThat(petType).isNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindSpecialtyById","void","","{\n    	Specialty specialty = this.clinicService.findSpecialtyById(1);\n    	assertThat(specialty.getName()).isEqualTo(""radiology"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindAllSpecialtys","void","","{\n        Collection<Specialty> specialties = this.clinicService.findAllSpecialties();\n        Specialty specialty1 = EntityUtils.getById(specialties, Specialty.class, 1);\n        assertThat(specialty1.getName()).isEqualTo(""radiology"");\n        Specialty specialty3 = EntityUtils.getById(specialties, Specialty.class, 3);\n        assertThat(specialty3.getName()).isEqualTo(""dentistry"");\n    }","","@Test",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldInsertSpecialty","void","","{\n        Collection<Specialty> specialties = this.clinicService.findAllSpecialties();\n        int found = specialties.size();\n\n        Specialty specialty = new Specialty();\n        specialty.setName(""dermatologist"");\n\n        this.clinicService.saveSpecialty(specialty);\n        assertThat(specialty.getId().longValue()).isNotEqualTo(0);\n\n        specialties = this.clinicService.findAllSpecialties();\n        assertThat(specialties.size()).isEqualTo(found + 1);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldUpdateSpecialty","void","","{\n    	Specialty specialty = this.clinicService.findSpecialtyById(1);\n    	String oldLastName = specialty.getName();\n        String newLastName = oldLastName + ""X"";\n        specialty.setName(newLastName);\n        this.clinicService.saveSpecialty(specialty);\n        specialty = this.clinicService.findSpecialtyById(1);\n        assertThat(specialty.getName()).isEqualTo(newLastName);\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldDeleteSpecialty","void","","{\n        Specialty specialty = new Specialty();\n        specialty.setName(""test"");\n        this.clinicService.saveSpecialty(specialty);\n        Integer specialtyId = specialty.getId();\n        assertThat(specialtyId).isNotNull();\n    	specialty = this.clinicService.findSpecialtyById(specialtyId);\n        assertThat(specialty).isNotNull();\n        this.clinicService.deleteSpecialty(specialty);\n        try {\n        	specialty = this.clinicService.findSpecialtyById(specialtyId);\n		} catch (Exception e) {\n			specialty = null;\n		}\n        assertThat(specialty).isNull();\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","shouldFindSpecialtiesByNameIn","void","","{\n        Specialty specialty1 = new Specialty();\n        specialty1.setName(""radiology"");\n        specialty1.setId(1);\n        Specialty specialty2 = new Specialty();\n        specialty2.setName(""surgery"");\n        specialty2.setId(2);\n        Specialty specialty3 = new Specialty();\n        specialty3.setName(""dentistry"");\n        specialty3.setId(3);\n        List<Specialty> expectedSpecialties = List.of(specialty1, specialty2, specialty3);\n        Set<String> specialtyNames = expectedSpecialties.stream()\n            .map(Specialty::getName)\n            .collect(Collectors.toSet());\n        Collection<Specialty> actualSpecialties = this.clinicService.findSpecialtiesByNameIn(specialtyNames);\n        assertThat(actualSpecialties).isNotNull();\n        assertThat(actualSpecialties.size()).isEqualTo(expectedSpecialties.size());\n        for (Specialty expected : expectedSpecialties) {\n            assertThat(actualSpecialties.stream()\n                .anyMatch(\n                    actual -> actual.getName().equals(expected.getName())\n                    && actual.getId().equals(expected.getId()))).isTrue();\n        }\n    }","","@Test @Transactional",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\AbstractClinicServiceTests.java","","AbstractClinicServiceTests","clearCache","void","","{}","","",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\ClinicServiceJpaTests.java","","ClinicServiceJpaTests","clearCache","void","","{\n        entityManager.clear();\n    }","","@Override",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\clinicService\ClinicServiceSpringDataJpaTests.java","","ClinicServiceSpringDataJpaTests","clearCache","void","","{\n        entityManager.clear();\n    }","","@Override",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\userService\AbstractUserServiceTests.java","","AbstractUserServiceTests","init","void","","{\n        MockitoAnnotations.openMocks(this);\n    }","","@BeforeEach public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\src\test\java\org\springframework\samples\petclinic\service\userService\AbstractUserServiceTests.java","","AbstractUserServiceTests","shouldAddUser","void","","{\n        User user = new User();\n        user.setUsername(""username"");\n        user.setPassword(""password"");\n        user.setEnabled(true);\n        user.addRole(""OWNER_ADMIN"");\n\n        userService.saveUser(user);\n        assertThat(user.getRoles().parallelStream().allMatch(role -> role.getName().startsWith(""ROLE_"")), is(true));\n        assertThat(user.getRoles().parallelStream().allMatch(role -> role.getUser() != null), is(true));\n    }","throws Exception","@Test public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\OwnerMapperImpl.java","","OwnerMapperImpl","toOwnerDto","OwnerDto","Owner owner","{\n        if ( owner == null ) {\n            return null;\n        }\n\n        OwnerDto ownerDto = new OwnerDto();\n\n        ownerDto.setFirstName( owner.getFirstName() );\n        ownerDto.setLastName( owner.getLastName() );\n        ownerDto.setAddress( owner.getAddress() );\n        ownerDto.setCity( owner.getCity() );\n        ownerDto.setTelephone( owner.getTelephone() );\n        ownerDto.setId( owner.getId() );\n        ownerDto.setPets( petListToPetDtoList( owner.getPets() ) );\n\n        return ownerDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\OwnerMapperImpl.java","","OwnerMapperImpl","toOwner","Owner","OwnerDto ownerDto","{\n        if ( ownerDto == null ) {\n            return null;\n        }\n\n        Owner owner = new Owner();\n\n        owner.setId( ownerDto.getId() );\n        owner.setFirstName( ownerDto.getFirstName() );\n        owner.setLastName( ownerDto.getLastName() );\n        owner.setAddress( ownerDto.getAddress() );\n        owner.setCity( ownerDto.getCity() );\n        owner.setTelephone( ownerDto.getTelephone() );\n        owner.setPets( petDtoListToPetList( ownerDto.getPets() ) );\n\n        return owner;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\OwnerMapperImpl.java","","OwnerMapperImpl","toOwner","Owner","OwnerFieldsDto ownerDto","{\n        if ( ownerDto == null ) {\n            return null;\n        }\n\n        Owner owner = new Owner();\n\n        owner.setFirstName( ownerDto.getFirstName() );\n        owner.setLastName( ownerDto.getLastName() );\n        owner.setAddress( ownerDto.getAddress() );\n        owner.setCity( ownerDto.getCity() );\n        owner.setTelephone( ownerDto.getTelephone() );\n\n        return owner;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\OwnerMapperImpl.java","","OwnerMapperImpl","toOwnerDtoCollection","List<OwnerDto>","Collection<Owner> ownerCollection","{\n        if ( ownerCollection == null ) {\n            return null;\n        }\n\n        List<OwnerDto> list = new ArrayList<OwnerDto>( ownerCollection.size() );\n        for ( Owner owner : ownerCollection ) {\n            list.add( toOwnerDto( owner ) );\n        }\n\n        return list;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\OwnerMapperImpl.java","","OwnerMapperImpl","toOwners","Collection<Owner>","Collection<OwnerDto> ownerDtos","{\n        if ( ownerDtos == null ) {\n            return null;\n        }\n\n        Collection<Owner> collection = new ArrayList<Owner>( ownerDtos.size() );\n        for ( OwnerDto ownerDto : ownerDtos ) {\n            collection.add( toOwner( ownerDto ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\OwnerMapperImpl.java","","OwnerMapperImpl","petListToPetDtoList","List<PetDto>","List<Pet> list","{\n        if ( list == null ) {\n            return null;\n        }\n\n        List<PetDto> list1 = new ArrayList<PetDto>( list.size() );\n        for ( Pet pet : list ) {\n            list1.add( petMapper.toPetDto( pet ) );\n        }\n\n        return list1;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\OwnerMapperImpl.java","","OwnerMapperImpl","petDtoListToPetList","List<Pet>","List<PetDto> list","{\n        if ( list == null ) {\n            return null;\n        }\n\n        List<Pet> list1 = new ArrayList<Pet>( list.size() );\n        for ( PetDto petDto : list ) {\n            list1.add( petMapper.toPet( petDto ) );\n        }\n\n        return list1;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPetDto","PetDto","Pet pet","{\n        if ( pet == null ) {\n            return null;\n        }\n\n        PetDto petDto = new PetDto();\n\n        petDto.setOwnerId( petOwnerId( pet ) );\n        petDto.setName( pet.getName() );\n        petDto.setBirthDate( pet.getBirthDate() );\n        petDto.setType( toPetTypeDto( pet.getType() ) );\n        petDto.setId( pet.getId() );\n        petDto.setVisits( visitListToVisitDtoList( pet.getVisits() ) );\n\n        return petDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPetsDto","Collection<PetDto>","Collection<Pet> pets","{\n        if ( pets == null ) {\n            return null;\n        }\n\n        Collection<PetDto> collection = new ArrayList<PetDto>( pets.size() );\n        for ( Pet pet : pets ) {\n            collection.add( toPetDto( pet ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPets","Collection<Pet>","Collection<PetDto> pets","{\n        if ( pets == null ) {\n            return null;\n        }\n\n        Collection<Pet> collection = new ArrayList<Pet>( pets.size() );\n        for ( PetDto petDto : pets ) {\n            collection.add( toPet( petDto ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPet","Pet","PetDto petDto","{\n        if ( petDto == null ) {\n            return null;\n        }\n\n        Pet pet = new Pet();\n\n        pet.setOwner( petDtoToOwner( petDto ) );\n        pet.setId( petDto.getId() );\n        pet.setName( petDto.getName() );\n        pet.setBirthDate( petDto.getBirthDate() );\n        pet.setType( toPetType( petDto.getType() ) );\n        pet.setVisits( visitDtoListToVisitList( petDto.getVisits() ) );\n\n        return pet;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPet","Pet","PetFieldsDto petFieldsDto","{\n        if ( petFieldsDto == null ) {\n            return null;\n        }\n\n        Pet pet = new Pet();\n\n        pet.setName( petFieldsDto.getName() );\n        pet.setBirthDate( petFieldsDto.getBirthDate() );\n        pet.setType( toPetType( petFieldsDto.getType() ) );\n\n        return pet;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPetTypeDto","PetTypeDto","PetType petType","{\n        if ( petType == null ) {\n            return null;\n        }\n\n        PetTypeDto petTypeDto = new PetTypeDto();\n\n        petTypeDto.setName( petType.getName() );\n        petTypeDto.setId( petType.getId() );\n\n        return petTypeDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPetType","PetType","PetTypeDto petTypeDto","{\n        if ( petTypeDto == null ) {\n            return null;\n        }\n\n        PetType petType = new PetType();\n\n        petType.setId( petTypeDto.getId() );\n        petType.setName( petTypeDto.getName() );\n\n        return petType;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","toPetTypeDtos","Collection<PetTypeDto>","Collection<PetType> petTypes","{\n        if ( petTypes == null ) {\n            return null;\n        }\n\n        Collection<PetTypeDto> collection = new ArrayList<PetTypeDto>( petTypes.size() );\n        for ( PetType petType : petTypes ) {\n            collection.add( toPetTypeDto( petType ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","petOwnerId","Integer","Pet pet","{\n        Owner owner = pet.getOwner();\n        if ( owner == null ) {\n            return null;\n        }\n        return owner.getId();\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","visitListToVisitDtoList","List<VisitDto>","List<Visit> list","{\n        if ( list == null ) {\n            return null;\n        }\n\n        List<VisitDto> list1 = new ArrayList<VisitDto>( list.size() );\n        for ( Visit visit : list ) {\n            list1.add( visitMapper.toVisitDto( visit ) );\n        }\n\n        return list1;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","petDtoToOwner","Owner","PetDto petDto","{\n        if ( petDto == null ) {\n            return null;\n        }\n\n        Owner owner = new Owner();\n\n        owner.setId( petDto.getOwnerId() );\n\n        return owner;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetMapperImpl.java","","PetMapperImpl","visitDtoListToVisitList","List<Visit>","List<VisitDto> list","{\n        if ( list == null ) {\n            return null;\n        }\n\n        List<Visit> list1 = new ArrayList<Visit>( list.size() );\n        for ( VisitDto visitDto : list ) {\n            list1.add( visitMapper.toVisit( visitDto ) );\n        }\n\n        return list1;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetTypeMapperImpl.java","","PetTypeMapperImpl","toPetType","PetType","PetTypeDto petTypeDto","{\n        if ( petTypeDto == null ) {\n            return null;\n        }\n\n        PetType petType = new PetType();\n\n        petType.setId( petTypeDto.getId() );\n        petType.setName( petTypeDto.getName() );\n\n        return petType;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetTypeMapperImpl.java","","PetTypeMapperImpl","toPetType","PetType","PetTypeFieldsDto petTypeFieldsDto","{\n        if ( petTypeFieldsDto == null ) {\n            return null;\n        }\n\n        PetType petType = new PetType();\n\n        petType.setName( petTypeFieldsDto.getName() );\n\n        return petType;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetTypeMapperImpl.java","","PetTypeMapperImpl","toPetTypeDto","PetTypeDto","PetType petType","{\n        if ( petType == null ) {\n            return null;\n        }\n\n        PetTypeDto petTypeDto = new PetTypeDto();\n\n        petTypeDto.setName( petType.getName() );\n        petTypeDto.setId( petType.getId() );\n\n        return petTypeDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetTypeMapperImpl.java","","PetTypeMapperImpl","toPetTypeFieldsDto","PetTypeFieldsDto","PetType petType","{\n        if ( petType == null ) {\n            return null;\n        }\n\n        PetTypeFieldsDto petTypeFieldsDto = new PetTypeFieldsDto();\n\n        petTypeFieldsDto.setName( petType.getName() );\n\n        return petTypeFieldsDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\PetTypeMapperImpl.java","","PetTypeMapperImpl","toPetTypeDtos","List<PetTypeDto>","Collection<PetType> petTypes","{\n        if ( petTypes == null ) {\n            return null;\n        }\n\n        List<PetTypeDto> list = new ArrayList<PetTypeDto>( petTypes.size() );\n        for ( PetType petType : petTypes ) {\n            list.add( toPetTypeDto( petType ) );\n        }\n\n        return list;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\SpecialtyMapperImpl.java","","SpecialtyMapperImpl","toSpecialty","Specialty","SpecialtyDto specialtyDto","{\n        if ( specialtyDto == null ) {\n            return null;\n        }\n\n        Specialty specialty = new Specialty();\n\n        specialty.setId( specialtyDto.getId() );\n        specialty.setName( specialtyDto.getName() );\n\n        return specialty;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\SpecialtyMapperImpl.java","","SpecialtyMapperImpl","toSpecialtyDto","SpecialtyDto","Specialty specialty","{\n        if ( specialty == null ) {\n            return null;\n        }\n\n        SpecialtyDto specialtyDto = new SpecialtyDto();\n\n        specialtyDto.setId( specialty.getId() );\n        specialtyDto.setName( specialty.getName() );\n\n        return specialtyDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\SpecialtyMapperImpl.java","","SpecialtyMapperImpl","toSpecialtyDtos","Collection<SpecialtyDto>","Collection<Specialty> specialties","{\n        if ( specialties == null ) {\n            return null;\n        }\n\n        Collection<SpecialtyDto> collection = new ArrayList<SpecialtyDto>( specialties.size() );\n        for ( Specialty specialty : specialties ) {\n            collection.add( toSpecialtyDto( specialty ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\SpecialtyMapperImpl.java","","SpecialtyMapperImpl","toSpecialtys","Collection<Specialty>","Collection<SpecialtyDto> specialties","{\n        if ( specialties == null ) {\n            return null;\n        }\n\n        Collection<Specialty> collection = new ArrayList<Specialty>( specialties.size() );\n        for ( SpecialtyDto specialtyDto : specialties ) {\n            collection.add( toSpecialty( specialtyDto ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","toRole","Role","RoleDto roleDto","{\n        if ( roleDto == null ) {\n            return null;\n        }\n\n        Role role = new Role();\n\n        role.setName( roleDto.getName() );\n\n        return role;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","toRoleDto","RoleDto","Role role","{\n        if ( role == null ) {\n            return null;\n        }\n\n        RoleDto roleDto = new RoleDto();\n\n        roleDto.setName( role.getName() );\n\n        return roleDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","toRoleDtos","Collection<RoleDto>","Collection<Role> roles","{\n        if ( roles == null ) {\n            return null;\n        }\n\n        Collection<RoleDto> collection = new ArrayList<RoleDto>( roles.size() );\n        for ( Role role : roles ) {\n            collection.add( toRoleDto( role ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","toUser","User","UserDto userDto","{\n        if ( userDto == null ) {\n            return null;\n        }\n\n        User user = new User();\n\n        user.setUsername( userDto.getUsername() );\n        user.setPassword( userDto.getPassword() );\n        user.setEnabled( userDto.getEnabled() );\n        user.setRoles( roleDtoListToRoleSet( userDto.getRoles() ) );\n\n        return user;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","toUserDto","UserDto","User user","{\n        if ( user == null ) {\n            return null;\n        }\n\n        UserDto userDto = new UserDto();\n\n        userDto.setUsername( user.getUsername() );\n        userDto.setPassword( user.getPassword() );\n        userDto.setEnabled( user.getEnabled() );\n        userDto.setRoles( roleSetToRoleDtoList( user.getRoles() ) );\n\n        return userDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","toRoles","Collection<Role>","Collection<RoleDto> roleDtos","{\n        if ( roleDtos == null ) {\n            return null;\n        }\n\n        Collection<Role> collection = new ArrayList<Role>( roleDtos.size() );\n        for ( RoleDto roleDto : roleDtos ) {\n            collection.add( toRole( roleDto ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","roleDtoListToRoleSet","Set<Role>","List<RoleDto> list","{\n        if ( list == null ) {\n            return null;\n        }\n\n        Set<Role> set = new LinkedHashSet<Role>( Math.max( (int) ( list.size() / .75f ) + 1, 16 ) );\n        for ( RoleDto roleDto : list ) {\n            set.add( toRole( roleDto ) );\n        }\n\n        return set;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\UserMapperImpl.java","","UserMapperImpl","roleSetToRoleDtoList","List<RoleDto>","Set<Role> set","{\n        if ( set == null ) {\n            return null;\n        }\n\n        List<RoleDto> list = new ArrayList<RoleDto>( set.size() );\n        for ( Role role : set ) {\n            list.add( toRoleDto( role ) );\n        }\n\n        return list;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VetMapperImpl.java","","VetMapperImpl","toVet","Vet","VetDto vetDto","{\n        if ( vetDto == null ) {\n            return null;\n        }\n\n        Vet vet = new Vet();\n\n        vet.setId( vetDto.getId() );\n        vet.setFirstName( vetDto.getFirstName() );\n        vet.setLastName( vetDto.getLastName() );\n        vet.setSpecialties( specialtyDtoListToSpecialtyList( vetDto.getSpecialties() ) );\n\n        return vet;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VetMapperImpl.java","","VetMapperImpl","toVet","Vet","VetFieldsDto vetFieldsDto","{\n        if ( vetFieldsDto == null ) {\n            return null;\n        }\n\n        Vet vet = new Vet();\n\n        vet.setFirstName( vetFieldsDto.getFirstName() );\n        vet.setLastName( vetFieldsDto.getLastName() );\n        vet.setSpecialties( specialtyDtoListToSpecialtyList( vetFieldsDto.getSpecialties() ) );\n\n        return vet;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VetMapperImpl.java","","VetMapperImpl","toVetDto","VetDto","Vet vet","{\n        if ( vet == null ) {\n            return null;\n        }\n\n        VetDto vetDto = new VetDto();\n\n        vetDto.setFirstName( vet.getFirstName() );\n        vetDto.setLastName( vet.getLastName() );\n        vetDto.setSpecialties( specialtyListToSpecialtyDtoList( vet.getSpecialties() ) );\n        vetDto.setId( vet.getId() );\n\n        return vetDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VetMapperImpl.java","","VetMapperImpl","toVetDtos","Collection<VetDto>","Collection<Vet> vets","{\n        if ( vets == null ) {\n            return null;\n        }\n\n        Collection<VetDto> collection = new ArrayList<VetDto>( vets.size() );\n        for ( Vet vet : vets ) {\n            collection.add( toVetDto( vet ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VetMapperImpl.java","","VetMapperImpl","specialtyDtoListToSpecialtyList","List<Specialty>","List<SpecialtyDto> list","{\n        if ( list == null ) {\n            return null;\n        }\n\n        List<Specialty> list1 = new ArrayList<Specialty>( list.size() );\n        for ( SpecialtyDto specialtyDto : list ) {\n            list1.add( specialtyMapper.toSpecialty( specialtyDto ) );\n        }\n\n        return list1;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VetMapperImpl.java","","VetMapperImpl","specialtyListToSpecialtyDtoList","List<SpecialtyDto>","List<Specialty> list","{\n        if ( list == null ) {\n            return null;\n        }\n\n        List<SpecialtyDto> list1 = new ArrayList<SpecialtyDto>( list.size() );\n        for ( Specialty specialty : list ) {\n            list1.add( specialtyMapper.toSpecialtyDto( specialty ) );\n        }\n\n        return list1;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VisitMapperImpl.java","","VisitMapperImpl","toVisit","Visit","VisitDto visitDto","{\n        if ( visitDto == null ) {\n            return null;\n        }\n\n        Visit visit = new Visit();\n\n        visit.setPet( visitDtoToPet( visitDto ) );\n        visit.setId( visitDto.getId() );\n        visit.setDate( visitDto.getDate() );\n        visit.setDescription( visitDto.getDescription() );\n\n        return visit;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VisitMapperImpl.java","","VisitMapperImpl","toVisit","Visit","VisitFieldsDto visitFieldsDto","{\n        if ( visitFieldsDto == null ) {\n            return null;\n        }\n\n        Visit visit = new Visit();\n\n        visit.setDate( visitFieldsDto.getDate() );\n        visit.setDescription( visitFieldsDto.getDescription() );\n\n        return visit;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VisitMapperImpl.java","","VisitMapperImpl","toVisitDto","VisitDto","Visit visit","{\n        if ( visit == null ) {\n            return null;\n        }\n\n        VisitDto visitDto = new VisitDto();\n\n        visitDto.setPetId( visitPetId( visit ) );\n        visitDto.setDate( visit.getDate() );\n        visitDto.setDescription( visit.getDescription() );\n        visitDto.setId( visit.getId() );\n\n        return visitDto;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VisitMapperImpl.java","","VisitMapperImpl","toVisitsDto","Collection<VisitDto>","Collection<Visit> visits","{\n        if ( visits == null ) {\n            return null;\n        }\n\n        Collection<VisitDto> collection = new ArrayList<VisitDto>( visits.size() );\n        for ( Visit visit : visits ) {\n            collection.add( toVisitDto( visit ) );\n        }\n\n        return collection;\n    }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VisitMapperImpl.java","","VisitMapperImpl","visitDtoToPet","Pet","VisitDto visitDto","{\n        if ( visitDto == null ) {\n            return null;\n        }\n\n        Pet pet = new Pet();\n\n        pet.setId( visitDto.getPetId() );\n\n        return pet;\n    }","","protected",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\annotations\org\springframework\samples\petclinic\mapper\VisitMapperImpl.java","","VisitMapperImpl","visitPetId","Integer","Visit visit","{\n        Pet pet = visit.getPet();\n        if ( pet == null ) {\n            return null;\n        }\n        return pet.getId();\n    }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\ApiUtil.java","","ApiUtil","setExampleResponse","void","NativeWebRequest req, String contentType, String example","{\n        try {\n            HttpServletResponse res = req.getNativeResponse(HttpServletResponse.class);\n            res.setCharacterEncoding(""UTF-8"");\n            res.addHeader(""Content-Type"", contentType);\n            res.getWriter().print(example);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }","","public static",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OopsApi.java","","OopsApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OopsApi.java","","OopsApi","failingRequest","ResponseEntity<String>","","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""failingRequest"",\n        summary = ""Always fails"",\n        description = ""Produces sample error response."",\n        tags = { ""failing"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Never returned."", content = {\n                @Content(mediaType = ""text/plain"", schema = @Schema(implementation = String.class)),\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = String.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""text/plain"", schema = @Schema(implementation = ProblemDetailDto.class)),\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/oops"",\n        produces = { ""text/plain"", ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","addOwner","ResponseEntity<OwnerDto>","OwnerFieldsDto ownerFieldsDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""pets\"" : [ { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }, { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" } ], \""firstName\"" : \""George\"", \""lastName\"" : \""Franklin\"", \""address\"" : \""110 W. Liberty St.\"", \""city\"" : \""Madison\"", \""telephone\"" : \""6085551023\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addOwner"",\n        summary = ""Adds a pet owner"",\n        description = ""Records the details of a new pet owner."",\n        tags = { ""owner"" },\n        responses = {\n            @ApiResponse(responseCode = ""201"", description = ""The pet owner was successfully added."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = OwnerDto.class))\n            }),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/owners"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","addPetToOwner","ResponseEntity<PetDto>","Integer ownerId, PetFieldsDto petFieldsDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addPetToOwner"",\n        summary = ""Adds a pet to an owner"",\n        description = ""Records the details of a new pet."",\n        tags = { ""pet"" },\n        responses = {\n            @ApiResponse(responseCode = ""201"", description = ""The pet was successfully added."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetDto.class))\n            }),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet or Owner not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/owners/{ownerId}/pets"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","addVisitToOwner","ResponseEntity<VisitDto>","Integer ownerId, Integer petId, VisitFieldsDto visitFieldsDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addVisitToOwner"",\n        summary = ""Adds a vet visit"",\n        description = ""Records the details of a new vet visit."",\n        tags = { ""visit"" },\n        responses = {\n            @ApiResponse(responseCode = ""201"", description = ""The vet visit was successfully added."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VisitDto.class))\n            }),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet not found for this owner."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/owners/{ownerId}/pets/{petId}/visits"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","deleteOwner","ResponseEntity<OwnerDto>","Integer ownerId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""pets\"" : [ { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }, { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" } ], \""firstName\"" : \""George\"", \""lastName\"" : \""Franklin\"", \""address\"" : \""110 W. Liberty St.\"", \""city\"" : \""Madison\"", \""telephone\"" : \""6085551023\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""deleteOwner"",\n        summary = ""Delete an owner by ID"",\n        description = ""Returns the owner or a 404 error."",\n        tags = { ""owner"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Owner details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = OwnerDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Owner  not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.DELETE,\n        value = ""/owners/{ownerId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","getOwner","ResponseEntity<OwnerDto>","Integer ownerId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""pets\"" : [ { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }, { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" } ], \""firstName\"" : \""George\"", \""lastName\"" : \""Franklin\"", \""address\"" : \""110 W. Liberty St.\"", \""city\"" : \""Madison\"", \""telephone\"" : \""6085551023\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""getOwner"",\n        summary = ""Get a pet owner by ID"",\n        description = ""Returns the pet owner or a 404 error."",\n        tags = { ""owner"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Owner details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = OwnerDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Owner not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/owners/{ownerId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","getOwnersPet","ResponseEntity<PetDto>","Integer ownerId, Integer petId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""getOwnersPet"",\n        summary = ""Get a pet by ID"",\n        description = ""Returns the pet or a 404 error."",\n        tags = { ""pet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Owner or pet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/owners/{ownerId}/pets/{petId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","listOwners","ResponseEntity<List<OwnerDto>>","String lastName","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""[ { \""pets\"" : [ { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }, { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" } ], \""firstName\"" : \""George\"", \""lastName\"" : \""Franklin\"", \""address\"" : \""110 W. Liberty St.\"", \""city\"" : \""Madison\"", \""telephone\"" : \""6085551023\"", \""id\"" : 1 }, { \""pets\"" : [ { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }, { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" } ], \""firstName\"" : \""George\"", \""lastName\"" : \""Franklin\"", \""address\"" : \""110 W. Liberty St.\"", \""city\"" : \""Madison\"", \""telephone\"" : \""6085551023\"", \""id\"" : 1 } ]"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""listOwners"",\n        summary = ""Lists pet owners"",\n        description = ""Returns an array of pet owners."",\n        tags = { ""owner"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Owner details found and returned."", content = {\n                @Content(mediaType = ""application/json"", array = @ArraySchema(schema = @Schema(implementation = OwnerDto.class)))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/owners"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","updateOwner","ResponseEntity<OwnerDto>","Integer ownerId, OwnerFieldsDto ownerFieldsDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""pets\"" : [ { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }, { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" } ], \""firstName\"" : \""George\"", \""lastName\"" : \""Franklin\"", \""address\"" : \""110 W. Liberty St.\"", \""city\"" : \""Madison\"", \""telephone\"" : \""6085551023\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""updateOwner"",\n        summary = ""Update a pet owner's details"",\n        description = ""Updates the pet owner record with the specified details."",\n        tags = { ""owner"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Update successful."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = OwnerDto.class))\n            }),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Owner not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.PUT,\n        value = ""/owners/{ownerId}"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\OwnersApi.java","","OwnersApi","updateOwnersPet","ResponseEntity<Void>","Integer ownerId, Integer petId, PetFieldsDto petFieldsDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""updateOwnersPet"",\n        summary = ""Update a pet's details"",\n        description = ""Updates the pet record with the specified details."",\n        tags = { ""pet"" },\n        responses = {\n            @ApiResponse(responseCode = ""204"", description = ""Update successful.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet not found for this owner."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.PUT,\n        value = ""/owners/{ownerId}/pets/{petId}"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PetsApi.java","","PetsApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PetsApi.java","","PetsApi","deletePet","ResponseEntity<PetDto>","Integer petId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""deletePet"",\n        summary = ""Delete a pet by ID"",\n        description = ""Returns the pet or a 404 error."",\n        tags = { ""pet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.DELETE,\n        value = ""/pets/{petId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PetsApi.java","","PetsApi","getPet","ResponseEntity<PetDto>","Integer petId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""getPet"",\n        summary = ""Get a pet by ID"",\n        description = ""Returns the pet  or a 404 error."",\n        tags = { ""pet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/pets/{petId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PetsApi.java","","PetsApi","listPets","ResponseEntity<List<PetDto>>","","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""[ { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }, { \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" } ]"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""listPets"",\n        summary = ""Lists pet"",\n        description = ""Returns an array of pet ."",\n        tags = { ""pet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet types found and returned."", content = {\n                @Content(mediaType = ""application/json"", array = @ArraySchema(schema = @Schema(implementation = PetDto.class)))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/pets"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PetsApi.java","","PetsApi","updatePet","ResponseEntity<PetDto>","Integer petId, PetDto petDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""visits\"" : [ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ], \""name\"" : \""Leo\"", \""id\"" : 1, \""type\"" : { \""name\"" : \""cat\"", \""id\"" : 1 }, \""ownerId\"" : 1, \""birthDate\"" : \""2010-09-07\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""updatePet"",\n        summary = ""Update a pet by ID"",\n        description = ""Returns the pet or a 404 error."",\n        tags = { ""pet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.PUT,\n        value = ""/pets/{petId}"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PettypesApi.java","","PettypesApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PettypesApi.java","","PettypesApi","addPetType","ResponseEntity<PetTypeDto>","PetTypeFieldsDto petTypeFieldsDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""cat\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addPetType"",\n        summary = ""Create a pet type"",\n        description = ""Creates a pet type ."",\n        tags = { ""pettypes"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet type created successfully."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetTypeDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet Type not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/pettypes"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PettypesApi.java","","PettypesApi","deletePetType","ResponseEntity<PetTypeDto>","Integer petTypeId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""cat\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""deletePetType"",\n        summary = ""Delete a pet type by ID"",\n        description = ""Returns the pet type or a 404 error."",\n        tags = { ""pettypes"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet type details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetTypeDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet type not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.DELETE,\n        value = ""/pettypes/{petTypeId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PettypesApi.java","","PettypesApi","getPetType","ResponseEntity<PetTypeDto>","Integer petTypeId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""cat\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""getPetType"",\n        summary = ""Get a pet type by ID"",\n        description = ""Returns the pet type or a 404 error."",\n        tags = { ""pettypes"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet type details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetTypeDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet Type not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/pettypes/{petTypeId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PettypesApi.java","","PettypesApi","listPetTypes","ResponseEntity<List<PetTypeDto>>","","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""[ { \""name\"" : \""cat\"", \""id\"" : 1 }, { \""name\"" : \""cat\"", \""id\"" : 1 } ]"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""listPetTypes"",\n        summary = ""Lists pet types"",\n        description = ""Returns an array of pet types."",\n        tags = { ""pettypes"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet types found and returned."", content = {\n                @Content(mediaType = ""application/json"", array = @ArraySchema(schema = @Schema(implementation = PetTypeDto.class)))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/pettypes"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\PettypesApi.java","","PettypesApi","updatePetType","ResponseEntity<PetTypeDto>","Integer petTypeId, PetTypeDto petTypeDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""cat\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""updatePetType"",\n        summary = ""Update a pet type by ID"",\n        description = ""Returns the pet type or a 404 error."",\n        tags = { ""pettypes"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet type details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = PetTypeDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Pet Type not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.PUT,\n        value = ""/pettypes/{petTypeId}"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\SpecialtiesApi.java","","SpecialtiesApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\SpecialtiesApi.java","","SpecialtiesApi","addSpecialty","ResponseEntity<SpecialtyDto>","SpecialtyDto specialtyDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""radiology\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addSpecialty"",\n        summary = ""Create a specialty"",\n        description = ""Creates a specialty ."",\n        tags = { ""specialty"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Specialty created successfully."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = SpecialtyDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Specialty not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/specialties"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\SpecialtiesApi.java","","SpecialtiesApi","deleteSpecialty","ResponseEntity<SpecialtyDto>","Integer specialtyId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""radiology\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""deleteSpecialty"",\n        summary = ""Delete a specialty by ID"",\n        description = ""Returns the specialty or a 404 error."",\n        tags = { ""specialty"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Specialty details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = SpecialtyDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Specialty not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.DELETE,\n        value = ""/specialties/{specialtyId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\SpecialtiesApi.java","","SpecialtiesApi","getSpecialty","ResponseEntity<SpecialtyDto>","Integer specialtyId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""radiology\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""getSpecialty"",\n        summary = ""Get a specialty by ID"",\n        description = ""Returns the specialty or a 404 error."",\n        tags = { ""specialty"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Specialty details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = SpecialtyDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Specialty not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/specialties/{specialtyId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\SpecialtiesApi.java","","SpecialtiesApi","listSpecialties","ResponseEntity<List<SpecialtyDto>>","","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""[ { \""name\"" : \""radiology\"", \""id\"" : 1 }, { \""name\"" : \""radiology\"", \""id\"" : 1 } ]"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""listSpecialties"",\n        summary = ""Lists specialties"",\n        description = ""Returns an array of specialty ."",\n        tags = { ""specialty"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Specialties found and returned."", content = {\n                @Content(mediaType = ""application/json"", array = @ArraySchema(schema = @Schema(implementation = SpecialtyDto.class)))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/specialties"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\SpecialtiesApi.java","","SpecialtiesApi","updateSpecialty","ResponseEntity<SpecialtyDto>","Integer specialtyId, SpecialtyDto specialtyDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""name\"" : \""radiology\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""updateSpecialty"",\n        summary = ""Update a specialty by ID"",\n        description = ""Returns the specialty or a 404 error."",\n        tags = { ""specialty"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Specialty details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = SpecialtyDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Specialty not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.PUT,\n        value = ""/specialties/{specialtyId}"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\UsersApi.java","","UsersApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\UsersApi.java","","UsersApi","addUser","ResponseEntity<UserDto>","UserDto userDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""password\"" : \""1234abc\"", \""roles\"" : [ { \""name\"" : \""admin\"" }, { \""name\"" : \""admin\"" } ], \""enabled\"" : true, \""username\"" : \""john.doe\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addUser"",\n        summary = ""Create a user"",\n        description = ""Creates a user."",\n        tags = { ""user"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""User created successfully."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = UserDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""User not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/users"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VetsApi.java","","VetsApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VetsApi.java","","VetsApi","addVet","ResponseEntity<VetDto>","VetDto vetDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""firstName\"" : \""James\"", \""lastName\"" : \""Carter\"", \""specialties\"" : [ { \""name\"" : \""radiology\"", \""id\"" : 1 }, { \""name\"" : \""radiology\"", \""id\"" : 1 } ], \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addVet"",\n        summary = ""Create a Vet"",\n        description = ""Creates a vet ."",\n        tags = { ""vet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Vet created successfully."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Vet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/vets"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VetsApi.java","","VetsApi","deleteVet","ResponseEntity<VetDto>","Integer vetId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""firstName\"" : \""James\"", \""lastName\"" : \""Carter\"", \""specialties\"" : [ { \""name\"" : \""radiology\"", \""id\"" : 1 }, { \""name\"" : \""radiology\"", \""id\"" : 1 } ], \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""deleteVet"",\n        summary = ""Delete a vet by ID"",\n        description = ""Returns the vet or a 404 error."",\n        tags = { ""vet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Vet details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Vet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.DELETE,\n        value = ""/vets/{vetId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VetsApi.java","","VetsApi","getVet","ResponseEntity<VetDto>","Integer vetId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""firstName\"" : \""James\"", \""lastName\"" : \""Carter\"", \""specialties\"" : [ { \""name\"" : \""radiology\"", \""id\"" : 1 }, { \""name\"" : \""radiology\"", \""id\"" : 1 } ], \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""getVet"",\n        summary = ""Get a vet by ID"",\n        description = ""Returns the vet or a 404 error."",\n        tags = { ""vet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Vet details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Vet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/vets/{vetId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VetsApi.java","","VetsApi","listVets","ResponseEntity<List<VetDto>>","","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""[ { \""firstName\"" : \""James\"", \""lastName\"" : \""Carter\"", \""specialties\"" : [ { \""name\"" : \""radiology\"", \""id\"" : 1 }, { \""name\"" : \""radiology\"", \""id\"" : 1 } ], \""id\"" : 1 }, { \""firstName\"" : \""James\"", \""lastName\"" : \""Carter\"", \""specialties\"" : [ { \""name\"" : \""radiology\"", \""id\"" : 1 }, { \""name\"" : \""radiology\"", \""id\"" : 1 } ], \""id\"" : 1 } ]"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""listVets"",\n        summary = ""Lists vets"",\n        description = ""Returns an array of vets."",\n        tags = { ""vet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Vets found and returned."", content = {\n                @Content(mediaType = ""application/json"", array = @ArraySchema(schema = @Schema(implementation = VetDto.class)))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/vets"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VetsApi.java","","VetsApi","updateVet","ResponseEntity<VetDto>","Integer vetId, VetDto vetDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""firstName\"" : \""James\"", \""lastName\"" : \""Carter\"", \""specialties\"" : [ { \""name\"" : \""radiology\"", \""id\"" : 1 }, { \""name\"" : \""radiology\"", \""id\"" : 1 } ], \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""updateVet"",\n        summary = ""Update a vet  by ID"",\n        description = ""Returns the vet or a 404 error."",\n        tags = { ""vet"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Pet type details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VetDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Vet not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.PUT,\n        value = ""/vets/{vetId}"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VisitsApi.java","","VisitsApi","getRequest","Optional<NativeWebRequest>","","{\n        return Optional.empty();\n    }","","default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VisitsApi.java","","VisitsApi","addVisit","ResponseEntity<VisitDto>","VisitDto visitDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""addVisit"",\n        summary = ""Create a visit"",\n        description = ""Creates a visit."",\n        tags = { ""visit"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""visit created successfully."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VisitDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Visit not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.POST,\n        value = ""/visits"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VisitsApi.java","","VisitsApi","deleteVisit","ResponseEntity<VisitDto>","Integer visitId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""deleteVisit"",\n        summary = ""Delete a visit by ID"",\n        description = ""Returns the visit or a 404 error."",\n        tags = { ""visit"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Visit details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VisitDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Visit not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.DELETE,\n        value = ""/visits/{visitId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VisitsApi.java","","VisitsApi","getVisit","ResponseEntity<VisitDto>","Integer visitId","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""getVisit"",\n        summary = ""Get a visit by ID"",\n        description = ""Returns the visit or a 404 error."",\n        tags = { ""visit"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Visit details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VisitDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Visit not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/visits/{visitId}"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VisitsApi.java","","VisitsApi","listVisits","ResponseEntity<List<VisitDto>>","","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""[ { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }, { \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 } ]"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""listVisits"",\n        summary = ""Lists visits"",\n        description = ""Returns an array of visit ."",\n        tags = { ""visit"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""visits found and returned."", content = {\n                @Content(mediaType = ""application/json"", array = @ArraySchema(schema = @Schema(implementation = VisitDto.class)))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.GET,\n        value = ""/visits"",\n        produces = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\api\VisitsApi.java","","VisitsApi","updateVisit","ResponseEntity<VisitDto>","Integer visitId, VisitFieldsDto visitFieldsDto","{\n        getRequest().ifPresent(request -> {\n            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader(""Accept""))) {\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""date\"" : \""2013-01-01\"", \""petId\"" : 1, \""description\"" : \""rabies shot\"", \""id\"" : 1 }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n                if (mediaType.isCompatibleWith(MediaType.valueOf(""application/json""))) {\n                    String exampleString = ""{ \""schemaValidationErrors\"" : [ { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" }, { \""message\"" : \""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])\"" } ], \""detail\"" : \""No static resource api/owner.\"", \""type\"" : \""http://localhost:9966/petclinic/api/owner\"", \""title\"" : \""NoResourceFoundException\"", \""status\"" : 500, \""timestamp\"" : \""2024-11-23T13:59:21.3820407Z\"" }"";\n                    ApiUtil.setExampleResponse(request, ""application/json"", exampleString);\n                    break;\n                }\n            }\n        });\n        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n\n    }","","@Operation(\n        operationId = ""updateVisit"",\n        summary = ""Update a visit by ID"",\n        description = ""Returns the visit or a 404 error."",\n        tags = { ""visit"" },\n        responses = {\n            @ApiResponse(responseCode = ""200"", description = ""Visit details found and returned."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = VisitDto.class))\n            }),\n            @ApiResponse(responseCode = ""304"", description = ""Not modified.""),\n            @ApiResponse(responseCode = ""400"", description = ""Bad request."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""404"", description = ""Visit not found."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            }),\n            @ApiResponse(responseCode = ""500"", description = ""Server error."", content = {\n                @Content(mediaType = ""application/json"", schema = @Schema(implementation = ProblemDetailDto.class))\n            })\n        }\n    ) @RequestMapping(\n        method = RequestMethod.PUT,\n        value = ""/visits/{visitId}"",\n        produces = { ""application/json"" },\n        consumes = { ""application/json"" }\n    ) default",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","firstName","OwnerDto","String firstName","{\n    this.firstName = firstName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","getFirstName","String","","{\n    return firstName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}$"") @Size(min = 1, max = 30) @Schema(name = ""firstName"", example = ""George"", description = ""The first name of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""firstName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","setFirstName","void","String firstName","{\n    this.firstName = firstName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","lastName","OwnerDto","String lastName","{\n    this.lastName = lastName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","getLastName","String","","{\n    return lastName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}\\.?$"") @Size(min = 1, max = 30) @Schema(name = ""lastName"", example = ""Franklin"", description = ""The last name of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""lastName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","setLastName","void","String lastName","{\n    this.lastName = lastName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","address","OwnerDto","String address","{\n    this.address = address;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","getAddress","String","","{\n    return address;\n  }","","@NotNull @Size(min = 1, max = 255) @Schema(name = ""address"", example = ""110 W. Liberty St."", description = ""The postal address of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""address"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","setAddress","void","String address","{\n    this.address = address;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","city","OwnerDto","String city","{\n    this.city = city;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","getCity","String","","{\n    return city;\n  }","","@NotNull @Size(min = 1, max = 80) @Schema(name = ""city"", example = ""Madison"", description = ""The city of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""city"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","setCity","void","String city","{\n    this.city = city;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","telephone","OwnerDto","String telephone","{\n    this.telephone = telephone;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","getTelephone","String","","{\n    return telephone;\n  }","","@NotNull @Pattern(regexp = ""^[0-9]*$"") @Size(min = 1, max = 20) @Schema(name = ""telephone"", example = ""6085551023"", description = ""The telephone number of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""telephone"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","setTelephone","void","String telephone","{\n    this.telephone = telephone;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","id","OwnerDto","Integer id","{\n    this.id = id;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","getId","Integer","","{\n    return id;\n  }","","@Min(0) @Schema(name = ""id"", accessMode = Schema.AccessMode.READ_ONLY, example = ""1"", description = ""The ID of the pet owner."", requiredMode = Schema.RequiredMode.NOT_REQUIRED) @JsonProperty(""id"") public @Nullable",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","setId","void","Integer id","{\n    this.id = id;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","pets","OwnerDto","List<PetDto> pets","{\n    this.pets = pets;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","addPetsItem","OwnerDto","PetDto petsItem","{\n    if (this.pets == null) {\n      this.pets = new ArrayList<>();\n    }\n    this.pets.add(petsItem);\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","getPets","List<PetDto>","","{\n    return pets;\n  }","","@Valid @Schema(name = ""pets"", accessMode = Schema.AccessMode.READ_ONLY, description = ""The pets owned by this individual including any booked vet visits."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""pets"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","setPets","void","List<PetDto> pets","{\n    this.pets = pets;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    OwnerDto owner = (OwnerDto) o;\n    return Objects.equals(this.firstName, owner.firstName) &&\n        Objects.equals(this.lastName, owner.lastName) &&\n        Objects.equals(this.address, owner.address) &&\n        Objects.equals(this.city, owner.city) &&\n        Objects.equals(this.telephone, owner.telephone) &&\n        Objects.equals(this.id, owner.id) &&\n        Objects.equals(this.pets, owner.pets);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","hashCode","int","","{\n    return Objects.hash(firstName, lastName, address, city, telephone, id, pets);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class OwnerDto {\n"");\n    sb.append(""    firstName: "").append(toIndentedString(firstName)).append(""\n"");\n    sb.append(""    lastName: "").append(toIndentedString(lastName)).append(""\n"");\n    sb.append(""    address: "").append(toIndentedString(address)).append(""\n"");\n    sb.append(""    city: "").append(toIndentedString(city)).append(""\n"");\n    sb.append(""    telephone: "").append(toIndentedString(telephone)).append(""\n"");\n    sb.append(""    id: "").append(toIndentedString(id)).append(""\n"");\n    sb.append(""    pets: "").append(toIndentedString(pets)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerDto.java","","OwnerDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","firstName","OwnerFieldsDto","String firstName","{\n    this.firstName = firstName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","getFirstName","String","","{\n    return firstName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}$"") @Size(min = 1, max = 30) @Schema(name = ""firstName"", example = ""George"", description = ""The first name of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""firstName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","setFirstName","void","String firstName","{\n    this.firstName = firstName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","lastName","OwnerFieldsDto","String lastName","{\n    this.lastName = lastName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","getLastName","String","","{\n    return lastName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}\\.?$"") @Size(min = 1, max = 30) @Schema(name = ""lastName"", example = ""Franklin"", description = ""The last name of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""lastName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","setLastName","void","String lastName","{\n    this.lastName = lastName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","address","OwnerFieldsDto","String address","{\n    this.address = address;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","getAddress","String","","{\n    return address;\n  }","","@NotNull @Size(min = 1, max = 255) @Schema(name = ""address"", example = ""110 W. Liberty St."", description = ""The postal address of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""address"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","setAddress","void","String address","{\n    this.address = address;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","city","OwnerFieldsDto","String city","{\n    this.city = city;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","getCity","String","","{\n    return city;\n  }","","@NotNull @Size(min = 1, max = 80) @Schema(name = ""city"", example = ""Madison"", description = ""The city of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""city"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","setCity","void","String city","{\n    this.city = city;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","telephone","OwnerFieldsDto","String telephone","{\n    this.telephone = telephone;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","getTelephone","String","","{\n    return telephone;\n  }","","@NotNull @Pattern(regexp = ""^[0-9]*$"") @Size(min = 1, max = 20) @Schema(name = ""telephone"", example = ""6085551023"", description = ""The telephone number of the pet owner."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""telephone"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","setTelephone","void","String telephone","{\n    this.telephone = telephone;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    OwnerFieldsDto ownerFields = (OwnerFieldsDto) o;\n    return Objects.equals(this.firstName, ownerFields.firstName) &&\n        Objects.equals(this.lastName, ownerFields.lastName) &&\n        Objects.equals(this.address, ownerFields.address) &&\n        Objects.equals(this.city, ownerFields.city) &&\n        Objects.equals(this.telephone, ownerFields.telephone);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","hashCode","int","","{\n    return Objects.hash(firstName, lastName, address, city, telephone);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class OwnerFieldsDto {\n"");\n    sb.append(""    firstName: "").append(toIndentedString(firstName)).append(""\n"");\n    sb.append(""    lastName: "").append(toIndentedString(lastName)).append(""\n"");\n    sb.append(""    address: "").append(toIndentedString(address)).append(""\n"");\n    sb.append(""    city: "").append(toIndentedString(city)).append(""\n"");\n    sb.append(""    telephone: "").append(toIndentedString(telephone)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\OwnerFieldsDto.java","","OwnerFieldsDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","name","PetDto","String name","{\n    this.name = name;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","getName","String","","{\n    return name;\n  }","","@NotNull @Size(max = 30) @Schema(name = ""name"", example = ""Leo"", description = ""The name of the pet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""name"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","setName","void","String name","{\n    this.name = name;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","birthDate","PetDto","LocalDate birthDate","{\n    this.birthDate = birthDate;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","getBirthDate","LocalDate","","{\n    return birthDate;\n  }","","@NotNull @Valid @Schema(name = ""birthDate"", example = ""2010-09-07"", description = ""The date of birth of the pet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""birthDate"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","setBirthDate","void","LocalDate birthDate","{\n    this.birthDate = birthDate;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","type","PetDto","PetTypeDto type","{\n    this.type = type;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","getType","PetTypeDto","","{\n    return type;\n  }","","@NotNull @Valid @Schema(name = ""type"", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""type"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","setType","void","PetTypeDto type","{\n    this.type = type;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","id","PetDto","Integer id","{\n    this.id = id;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","getId","Integer","","{\n    return id;\n  }","","@Min(0) @Schema(name = ""id"", accessMode = Schema.AccessMode.READ_ONLY, example = ""1"", description = ""The ID of the pet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""id"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","setId","void","Integer id","{\n    this.id = id;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","ownerId","PetDto","Integer ownerId","{\n    this.ownerId = ownerId;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","getOwnerId","Integer","","{\n    return ownerId;\n  }","","@Min(0) @Schema(name = ""ownerId"", accessMode = Schema.AccessMode.READ_ONLY, example = ""1"", description = ""The ID of the pet's owner."", requiredMode = Schema.RequiredMode.NOT_REQUIRED) @JsonProperty(""ownerId"") public @Nullable",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","setOwnerId","void","Integer ownerId","{\n    this.ownerId = ownerId;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","visits","PetDto","List<VisitDto> visits","{\n    this.visits = visits;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","addVisitsItem","PetDto","VisitDto visitsItem","{\n    if (this.visits == null) {\n      this.visits = new ArrayList<>();\n    }\n    this.visits.add(visitsItem);\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","getVisits","List<VisitDto>","","{\n    return visits;\n  }","","@Valid @Schema(name = ""visits"", accessMode = Schema.AccessMode.READ_ONLY, description = ""Vet visit bookings for this pet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""visits"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","setVisits","void","List<VisitDto> visits","{\n    this.visits = visits;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    PetDto pet = (PetDto) o;\n    return Objects.equals(this.name, pet.name) &&\n        Objects.equals(this.birthDate, pet.birthDate) &&\n        Objects.equals(this.type, pet.type) &&\n        Objects.equals(this.id, pet.id) &&\n        Objects.equals(this.ownerId, pet.ownerId) &&\n        Objects.equals(this.visits, pet.visits);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","hashCode","int","","{\n    return Objects.hash(name, birthDate, type, id, ownerId, visits);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class PetDto {\n"");\n    sb.append(""    name: "").append(toIndentedString(name)).append(""\n"");\n    sb.append(""    birthDate: "").append(toIndentedString(birthDate)).append(""\n"");\n    sb.append(""    type: "").append(toIndentedString(type)).append(""\n"");\n    sb.append(""    id: "").append(toIndentedString(id)).append(""\n"");\n    sb.append(""    ownerId: "").append(toIndentedString(ownerId)).append(""\n"");\n    sb.append(""    visits: "").append(toIndentedString(visits)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetDto.java","","PetDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","name","PetFieldsDto","String name","{\n    this.name = name;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","getName","String","","{\n    return name;\n  }","","@NotNull @Size(max = 30) @Schema(name = ""name"", example = ""Leo"", description = ""The name of the pet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""name"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","setName","void","String name","{\n    this.name = name;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","birthDate","PetFieldsDto","LocalDate birthDate","{\n    this.birthDate = birthDate;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","getBirthDate","LocalDate","","{\n    return birthDate;\n  }","","@NotNull @Valid @Schema(name = ""birthDate"", example = ""2010-09-07"", description = ""The date of birth of the pet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""birthDate"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","setBirthDate","void","LocalDate birthDate","{\n    this.birthDate = birthDate;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","type","PetFieldsDto","PetTypeDto type","{\n    this.type = type;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","getType","PetTypeDto","","{\n    return type;\n  }","","@NotNull @Valid @Schema(name = ""type"", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""type"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","setType","void","PetTypeDto type","{\n    this.type = type;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    PetFieldsDto petFields = (PetFieldsDto) o;\n    return Objects.equals(this.name, petFields.name) &&\n        Objects.equals(this.birthDate, petFields.birthDate) &&\n        Objects.equals(this.type, petFields.type);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","hashCode","int","","{\n    return Objects.hash(name, birthDate, type);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class PetFieldsDto {\n"");\n    sb.append(""    name: "").append(toIndentedString(name)).append(""\n"");\n    sb.append(""    birthDate: "").append(toIndentedString(birthDate)).append(""\n"");\n    sb.append(""    type: "").append(toIndentedString(type)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetFieldsDto.java","","PetFieldsDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","name","PetTypeDto","String name","{\n    this.name = name;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","getName","String","","{\n    return name;\n  }","","@NotNull @Size(min = 1, max = 80) @Schema(name = ""name"", example = ""cat"", description = ""The name of the pet type."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""name"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","setName","void","String name","{\n    this.name = name;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","id","PetTypeDto","Integer id","{\n    this.id = id;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","getId","Integer","","{\n    return id;\n  }","","@NotNull @Min(0) @Schema(name = ""id"", example = ""1"", description = ""The ID of the pet type."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""id"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","setId","void","Integer id","{\n    this.id = id;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    PetTypeDto petType = (PetTypeDto) o;\n    return Objects.equals(this.name, petType.name) &&\n        Objects.equals(this.id, petType.id);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","hashCode","int","","{\n    return Objects.hash(name, id);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class PetTypeDto {\n"");\n    sb.append(""    name: "").append(toIndentedString(name)).append(""\n"");\n    sb.append(""    id: "").append(toIndentedString(id)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeDto.java","","PetTypeDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeFieldsDto.java","","PetTypeFieldsDto","name","PetTypeFieldsDto","String name","{\n    this.name = name;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeFieldsDto.java","","PetTypeFieldsDto","getName","String","","{\n    return name;\n  }","","@NotNull @Size(min = 1, max = 80) @Schema(name = ""name"", example = ""cat"", description = ""The name of the pet type."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""name"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeFieldsDto.java","","PetTypeFieldsDto","setName","void","String name","{\n    this.name = name;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeFieldsDto.java","","PetTypeFieldsDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    PetTypeFieldsDto petTypeFields = (PetTypeFieldsDto) o;\n    return Objects.equals(this.name, petTypeFields.name);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeFieldsDto.java","","PetTypeFieldsDto","hashCode","int","","{\n    return Objects.hash(name);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeFieldsDto.java","","PetTypeFieldsDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class PetTypeFieldsDto {\n"");\n    sb.append(""    name: "").append(toIndentedString(name)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\PetTypeFieldsDto.java","","PetTypeFieldsDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","type","ProblemDetailDto","URI type","{\n    this.type = type;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","getType","URI","","{\n    return type;\n  }","","@Valid @Schema(name = ""type"", accessMode = Schema.AccessMode.READ_ONLY, example = ""http://localhost:9966/petclinic/api/owner"", description = ""Full URL that originated the error response."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""type"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","setType","void","URI type","{\n    this.type = type;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","title","ProblemDetailDto","String title","{\n    this.title = title;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","getTitle","String","","{\n    return title;\n  }","","@Schema(name = ""title"", accessMode = Schema.AccessMode.READ_ONLY, example = ""NoResourceFoundException"", description = ""The short error title."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""title"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","setTitle","void","String title","{\n    this.title = title;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","status","ProblemDetailDto","Integer status","{\n    this.status = status;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","getStatus","Integer","","{\n    return status;\n  }","","@Min(400) @Max(600) @Schema(name = ""status"", accessMode = Schema.AccessMode.READ_ONLY, example = ""500"", description = ""HTTP status code"", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""status"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","setStatus","void","Integer status","{\n    this.status = status;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","detail","ProblemDetailDto","String detail","{\n    this.detail = detail;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","getDetail","String","","{\n    return detail;\n  }","","@Schema(name = ""detail"", accessMode = Schema.AccessMode.READ_ONLY, example = ""No static resource api/owner."", description = ""The long error message."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""detail"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","setDetail","void","String detail","{\n    this.detail = detail;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","timestamp","ProblemDetailDto","OffsetDateTime timestamp","{\n    this.timestamp = timestamp;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","getTimestamp","OffsetDateTime","","{\n    return timestamp;\n  }","","@Valid @Schema(name = ""timestamp"", accessMode = Schema.AccessMode.READ_ONLY, example = ""2024-11-23T13:59:21.382040700Z"", description = ""The time the error occurred."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""timestamp"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","setTimestamp","void","OffsetDateTime timestamp","{\n    this.timestamp = timestamp;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","schemaValidationErrors","ProblemDetailDto","List<ValidationMessageDto> schemaValidationErrors","{\n    this.schemaValidationErrors = schemaValidationErrors;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","addSchemaValidationErrorsItem","ProblemDetailDto","ValidationMessageDto schemaValidationErrorsItem","{\n    if (this.schemaValidationErrors == null) {\n      this.schemaValidationErrors = new ArrayList<>();\n    }\n    this.schemaValidationErrors.add(schemaValidationErrorsItem);\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","getSchemaValidationErrors","List<ValidationMessageDto>","","{\n    return schemaValidationErrors;\n  }","","@NotNull @Valid @Schema(name = ""schemaValidationErrors"", description = ""Validation errors against the OpenAPI schema."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""schemaValidationErrors"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","setSchemaValidationErrors","void","List<ValidationMessageDto> schemaValidationErrors","{\n    this.schemaValidationErrors = schemaValidationErrors;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ProblemDetailDto problemDetail = (ProblemDetailDto) o;\n    return Objects.equals(this.type, problemDetail.type) &&\n        Objects.equals(this.title, problemDetail.title) &&\n        Objects.equals(this.status, problemDetail.status) &&\n        Objects.equals(this.detail, problemDetail.detail) &&\n        Objects.equals(this.timestamp, problemDetail.timestamp) &&\n        Objects.equals(this.schemaValidationErrors, problemDetail.schemaValidationErrors);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","hashCode","int","","{\n    return Objects.hash(type, title, status, detail, timestamp, schemaValidationErrors);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class ProblemDetailDto {\n"");\n    sb.append(""    type: "").append(toIndentedString(type)).append(""\n"");\n    sb.append(""    title: "").append(toIndentedString(title)).append(""\n"");\n    sb.append(""    status: "").append(toIndentedString(status)).append(""\n"");\n    sb.append(""    detail: "").append(toIndentedString(detail)).append(""\n"");\n    sb.append(""    timestamp: "").append(toIndentedString(timestamp)).append(""\n"");\n    sb.append(""    schemaValidationErrors: "").append(toIndentedString(schemaValidationErrors)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ProblemDetailDto.java","","ProblemDetailDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\RoleDto.java","","RoleDto","name","RoleDto","String name","{\n    this.name = name;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\RoleDto.java","","RoleDto","getName","String","","{\n    return name;\n  }","","@NotNull @Size(min = 1, max = 80) @Schema(name = ""name"", example = ""admin"", description = ""The role's name"", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""name"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\RoleDto.java","","RoleDto","setName","void","String name","{\n    this.name = name;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\RoleDto.java","","RoleDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    RoleDto role = (RoleDto) o;\n    return Objects.equals(this.name, role.name);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\RoleDto.java","","RoleDto","hashCode","int","","{\n    return Objects.hash(name);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\RoleDto.java","","RoleDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class RoleDto {\n"");\n    sb.append(""    name: "").append(toIndentedString(name)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\RoleDto.java","","RoleDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","id","SpecialtyDto","Integer id","{\n    this.id = id;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","getId","Integer","","{\n    return id;\n  }","","@Min(0) @Schema(name = ""id"", accessMode = Schema.AccessMode.READ_ONLY, example = ""1"", description = ""The ID of the specialty."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""id"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","setId","void","Integer id","{\n    this.id = id;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","name","SpecialtyDto","String name","{\n    this.name = name;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","getName","String","","{\n    return name;\n  }","","@NotNull @Size(min = 1, max = 80) @Schema(name = ""name"", example = ""radiology"", description = ""The name of the specialty."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""name"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","setName","void","String name","{\n    this.name = name;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    SpecialtyDto specialty = (SpecialtyDto) o;\n    return Objects.equals(this.id, specialty.id) &&\n        Objects.equals(this.name, specialty.name);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","hashCode","int","","{\n    return Objects.hash(id, name);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class SpecialtyDto {\n"");\n    sb.append(""    id: "").append(toIndentedString(id)).append(""\n"");\n    sb.append(""    name: "").append(toIndentedString(name)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\SpecialtyDto.java","","SpecialtyDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","username","UserDto","String username","{\n    this.username = username;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","getUsername","String","","{\n    return username;\n  }","","@NotNull @Size(min = 1, max = 80) @Schema(name = ""username"", example = ""john.doe"", description = ""The username"", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""username"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","setUsername","void","String username","{\n    this.username = username;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","password","UserDto","String password","{\n    this.password = password;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","getPassword","String","","{\n    return password;\n  }","","@Size(min = 1, max = 80) @Schema(name = ""password"", example = ""1234abc"", description = ""The password"", requiredMode = Schema.RequiredMode.NOT_REQUIRED) @JsonProperty(""password"") public @Nullable",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","setPassword","void","String password","{\n    this.password = password;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","enabled","UserDto","Boolean enabled","{\n    this.enabled = enabled;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","getEnabled","Boolean","","{\n    return enabled;\n  }","","@Schema(name = ""enabled"", example = ""true"", description = ""Indicates if the user is enabled"", requiredMode = Schema.RequiredMode.NOT_REQUIRED) @JsonProperty(""enabled"") public @Nullable",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","setEnabled","void","Boolean enabled","{\n    this.enabled = enabled;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","roles","UserDto","List<@Valid RoleDto> roles","{\n    this.roles = roles;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","addRolesItem","UserDto","RoleDto rolesItem","{\n    if (this.roles == null) {\n      this.roles = new ArrayList<>();\n    }\n    this.roles.add(rolesItem);\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","getRoles","List<@Valid RoleDto>","","{\n    return roles;\n  }","","@Valid @Schema(name = ""roles"", description = ""The roles of an user"", requiredMode = Schema.RequiredMode.NOT_REQUIRED) @JsonProperty(""roles"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","setRoles","void","List<@Valid RoleDto> roles","{\n    this.roles = roles;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    UserDto user = (UserDto) o;\n    return Objects.equals(this.username, user.username) &&\n        Objects.equals(this.password, user.password) &&\n        Objects.equals(this.enabled, user.enabled) &&\n        Objects.equals(this.roles, user.roles);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","hashCode","int","","{\n    return Objects.hash(username, password, enabled, roles);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class UserDto {\n"");\n    sb.append(""    username: "").append(toIndentedString(username)).append(""\n"");\n    sb.append(""    password: "").append(toIndentedString(password)).append(""\n"");\n    sb.append(""    enabled: "").append(toIndentedString(enabled)).append(""\n"");\n    sb.append(""    roles: "").append(toIndentedString(roles)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\UserDto.java","","UserDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","message","ValidationMessageDto","String message","{\n    this.message = message;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","getMessage","String","","{\n    return message;\n  }","","@Schema(name = ""message"", accessMode = Schema.AccessMode.READ_ONLY, example = ""[Path '/lastName'] Instance type (null) does not match any allowed primitive type (allowed: ['string'])"", description = ""The validation message."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""message"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","setMessage","void","String message","{\n    this.message = message;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","putAdditionalProperty","ValidationMessageDto","String key, Object value","{\n        if (this.additionalProperties == null) {\n            this.additionalProperties = new HashMap<String, Object>();\n        }\n        this.additionalProperties.put(key, value);\n        return this;\n    }","","@JsonAnySetter public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","getAdditionalProperties","Map<String, Object>","","{\n        return additionalProperties;\n    }","","@JsonAnyGetter public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","getAdditionalProperty","Object","String key","{\n        if (this.additionalProperties == null) {\n            return null;\n        }\n        return this.additionalProperties.get(key);\n    }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    ValidationMessageDto validationMessage = (ValidationMessageDto) o;\n    return Objects.equals(this.message, validationMessage.message) &&\n    Objects.equals(this.additionalProperties, validationMessage.additionalProperties);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","hashCode","int","","{\n    return Objects.hash(message, additionalProperties);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class ValidationMessageDto {\n"");\n    sb.append(""    message: "").append(toIndentedString(message)).append(""\n"");\n    \n    sb.append(""    additionalProperties: "").append(toIndentedString(additionalProperties)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\ValidationMessageDto.java","","ValidationMessageDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","firstName","VetDto","String firstName","{\n    this.firstName = firstName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","getFirstName","String","","{\n    return firstName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}$"") @Size(min = 1, max = 30) @Schema(name = ""firstName"", example = ""James"", description = ""The first name of the vet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""firstName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","setFirstName","void","String firstName","{\n    this.firstName = firstName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","lastName","VetDto","String lastName","{\n    this.lastName = lastName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","getLastName","String","","{\n    return lastName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}\\.?$"") @Size(min = 1, max = 30) @Schema(name = ""lastName"", example = ""Carter"", description = ""The last name of the vet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""lastName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","setLastName","void","String lastName","{\n    this.lastName = lastName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","specialties","VetDto","List<@Valid SpecialtyDto> specialties","{\n    this.specialties = specialties;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","addSpecialtiesItem","VetDto","SpecialtyDto specialtiesItem","{\n    if (this.specialties == null) {\n      this.specialties = new ArrayList<>();\n    }\n    this.specialties.add(specialtiesItem);\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","getSpecialties","List<@Valid SpecialtyDto>","","{\n    return specialties;\n  }","","@NotNull @Valid @Schema(name = ""specialties"", description = ""The specialties of the vet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""specialties"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","setSpecialties","void","List<@Valid SpecialtyDto> specialties","{\n    this.specialties = specialties;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","id","VetDto","Integer id","{\n    this.id = id;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","getId","Integer","","{\n    return id;\n  }","","@Min(0) @Schema(name = ""id"", accessMode = Schema.AccessMode.READ_ONLY, example = ""1"", description = ""The ID of the vet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""id"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","setId","void","Integer id","{\n    this.id = id;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    VetDto vet = (VetDto) o;\n    return Objects.equals(this.firstName, vet.firstName) &&\n        Objects.equals(this.lastName, vet.lastName) &&\n        Objects.equals(this.specialties, vet.specialties) &&\n        Objects.equals(this.id, vet.id);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","hashCode","int","","{\n    return Objects.hash(firstName, lastName, specialties, id);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class VetDto {\n"");\n    sb.append(""    firstName: "").append(toIndentedString(firstName)).append(""\n"");\n    sb.append(""    lastName: "").append(toIndentedString(lastName)).append(""\n"");\n    sb.append(""    specialties: "").append(toIndentedString(specialties)).append(""\n"");\n    sb.append(""    id: "").append(toIndentedString(id)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetDto.java","","VetDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","firstName","VetFieldsDto","String firstName","{\n    this.firstName = firstName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","getFirstName","String","","{\n    return firstName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}$"") @Size(min = 1, max = 30) @Schema(name = ""firstName"", example = ""James"", description = ""The first name of the vet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""firstName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","setFirstName","void","String firstName","{\n    this.firstName = firstName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","lastName","VetFieldsDto","String lastName","{\n    this.lastName = lastName;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","getLastName","String","","{\n    return lastName;\n  }","","@NotNull @Pattern(regexp = ""^[\\p{L}]+([ '-][\\p{L}]+){0,2}\\.?$"") @Size(min = 1, max = 30) @Schema(name = ""lastName"", example = ""Carter"", description = ""The last name of the vet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""lastName"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","setLastName","void","String lastName","{\n    this.lastName = lastName;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","specialties","VetFieldsDto","List<@Valid SpecialtyDto> specialties","{\n    this.specialties = specialties;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","addSpecialtiesItem","VetFieldsDto","SpecialtyDto specialtiesItem","{\n    if (this.specialties == null) {\n      this.specialties = new ArrayList<>();\n    }\n    this.specialties.add(specialtiesItem);\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","getSpecialties","List<@Valid SpecialtyDto>","","{\n    return specialties;\n  }","","@NotNull @Valid @Schema(name = ""specialties"", description = ""The specialties of the vet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""specialties"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","setSpecialties","void","List<@Valid SpecialtyDto> specialties","{\n    this.specialties = specialties;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    VetFieldsDto vetFields = (VetFieldsDto) o;\n    return Objects.equals(this.firstName, vetFields.firstName) &&\n        Objects.equals(this.lastName, vetFields.lastName) &&\n        Objects.equals(this.specialties, vetFields.specialties);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","hashCode","int","","{\n    return Objects.hash(firstName, lastName, specialties);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class VetFieldsDto {\n"");\n    sb.append(""    firstName: "").append(toIndentedString(firstName)).append(""\n"");\n    sb.append(""    lastName: "").append(toIndentedString(lastName)).append(""\n"");\n    sb.append(""    specialties: "").append(toIndentedString(specialties)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VetFieldsDto.java","","VetFieldsDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","date","VisitDto","LocalDate date","{\n    this.date = date;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","getDate","LocalDate","","{\n    return date;\n  }","","@Valid @Schema(name = ""date"", example = ""2013-01-01"", description = ""The date of the visit."", requiredMode = Schema.RequiredMode.NOT_REQUIRED) @JsonProperty(""date"") public @Nullable",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","setDate","void","LocalDate date","{\n    this.date = date;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","description","VisitDto","String description","{\n    this.description = description;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","getDescription","String","","{\n    return description;\n  }","","@NotNull @Size(min = 1, max = 255) @Schema(name = ""description"", example = ""rabies shot"", description = ""The description for the visit."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""description"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","setDescription","void","String description","{\n    this.description = description;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","id","VisitDto","Integer id","{\n    this.id = id;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","getId","Integer","","{\n    return id;\n  }","","@Min(0) @Schema(name = ""id"", accessMode = Schema.AccessMode.READ_ONLY, example = ""1"", description = ""The ID of the visit."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""id"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","setId","void","Integer id","{\n    this.id = id;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","petId","VisitDto","Integer petId","{\n    this.petId = petId;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","getPetId","Integer","","{\n    return petId;\n  }","","@NotNull @Min(0) @Schema(name = ""petId"", example = ""1"", description = ""The ID of the pet."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""petId"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","setPetId","void","Integer petId","{\n    this.petId = petId;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    VisitDto visit = (VisitDto) o;\n    return Objects.equals(this.date, visit.date) &&\n        Objects.equals(this.description, visit.description) &&\n        Objects.equals(this.id, visit.id) &&\n        Objects.equals(this.petId, visit.petId);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","hashCode","int","","{\n    return Objects.hash(date, description, id, petId);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class VisitDto {\n"");\n    sb.append(""    date: "").append(toIndentedString(date)).append(""\n"");\n    sb.append(""    description: "").append(toIndentedString(description)).append(""\n"");\n    sb.append(""    id: "").append(toIndentedString(id)).append(""\n"");\n    sb.append(""    petId: "").append(toIndentedString(petId)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitDto.java","","VisitDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","date","VisitFieldsDto","LocalDate date","{\n    this.date = date;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","getDate","LocalDate","","{\n    return date;\n  }","","@Valid @Schema(name = ""date"", example = ""2013-01-01"", description = ""The date of the visit."", requiredMode = Schema.RequiredMode.NOT_REQUIRED) @JsonProperty(""date"") public @Nullable",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","setDate","void","LocalDate date","{\n    this.date = date;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","description","VisitFieldsDto","String description","{\n    this.description = description;\n    return this;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","getDescription","String","","{\n    return description;\n  }","","@NotNull @Size(min = 1, max = 255) @Schema(name = ""description"", example = ""rabies shot"", description = ""The description for the visit."", requiredMode = Schema.RequiredMode.REQUIRED) @JsonProperty(""description"") public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","setDescription","void","String description","{\n    this.description = description;\n  }","","public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","equals","boolean","Object o","{\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n    VisitFieldsDto visitFields = (VisitFieldsDto) o;\n    return Objects.equals(this.date, visitFields.date) &&\n        Objects.equals(this.description, visitFields.description);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","hashCode","int","","{\n    return Objects.hash(date, description);\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","toString","String","","{\n    StringBuilder sb = new StringBuilder();\n    sb.append(""class VisitFieldsDto {\n"");\n    sb.append(""    date: "").append(toIndentedString(date)).append(""\n"");\n    sb.append(""    description: "").append(toIndentedString(description)).append(""\n"");\n    sb.append(""}"");\n    return sb.toString();\n  }","","@Override public",""
"C:\repos\Hybrid-Code-Gen\javarepoparser\temp\spring-petclinic-rest\target\generated-sources\openapi\src\main\java\org\springframework\samples\petclinic\rest\dto\VisitFieldsDto.java","","VisitFieldsDto","toIndentedString","String","Object o","{\n    if (o == null) {\n      return ""null"";\n    }\n    return o.toString().replace(""\n"", ""\n    "");\n  }","","private",""
